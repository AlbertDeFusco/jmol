<html>
<head>
<title>Jmol Interactive Examples</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="Jmol.js"></script>
<script type="text/javascript" src="new.js"></script>
<script type="text/javascript">

function callback(a, b, c, d, e, f, g, h, i, j){
alert("a = " + a + " b = " + b + " c = " + c + " d = " + d + " e =" + e + " f = " + f + " g = " + g + " h = " + h + " i = " + i + " j = " + j)
}
messagecallback="showmsg"
animcallback=""
loadstructcallback=""

delayms = 100; delayms0 = 1000
polling = false;




//logLevel=0  // 4 is standard ;1 gives fatal errors only; 2 gives all errors;
              // 3 gives errors and warnings; 4 gives errors, warnings and information; 5 adds debug.

//<![CDATA[
//model = "http://www.rcsb.org/pdb/files/1blu.pdb"
title="ATOMS";
model=';load quartz.cif {1 1 1}; zoom 150;wireframe on; spacefill off; ellipsoids on;'
//model="tp.pdb;zoom 800;"
docsearch = document.location.search.substring(1)
if(docsearch.indexOf("model=")>=0)model=unescape(docsearch.split("model=")[1].split("&")[0])

latestVersion = '### Be sure you have the <a href=http://jmol.sourceforge.net/files>Latest version</a>. Very latest may appear here: <a href=http://www.stolaf.edu/academics/chemapps/jmol/docs/examples-11/Jmol-11_5.zip>Jmol-11_5.zip</a>###'


Scripts=new Array(" "

//#########################################################################################################
//#########################################################################################################


/* 1 file */
,'load quartz.cif {1 1 1}; zoom 150;wireframe on; spacefill off; ellipsoids on;'

/* 2 quality */

,'load 1crn.pdb;moveto /* time, axisAngle */ 1.0 { -158 945 -287 32.76} /* zoom, translation */  151.99 0.0 0.0  /* center, rotationRadius */ {10.5935 10.2105 6.079} 17.392593 /* navigation center, translation, depth */ {0.0 0.0 0.0} -60.461147 37.292717 50.0;spacefill off;wireframe off;cartoons on;delay 1;set hermitelevel 5;delay 1;color group;delay 1;set antialiasdisplay true;'


/* 3 scripting */

,'load SF6.smol;moveto /* time, axisAngle */ 1.0 { 25 550 835 80.43} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {0.0 0.0 0.0} 3.2798648 /* navigation center, translation, depth */ {0.0 0.0 0.0} 0.0 0.0 50.0;spin internal y 30;'

/* 4 navigation */

,'load nanotour.pdb'

/* 5 structure modification */

,'set antialiasdisplay true;load caffeine.xyz;spin branch {n8} {c19} 20'

/* 6 objects */

,'load 1crn.pdb;wireframe 0.1;spacefill off;display backbone and (10,11,12);center 10,11;select 11;draw ramachandran;moveto /* time, axisAngle */ 1.0 { 752 235 -615 65.36} /* zoom, translation */  799.56 27.71 9.71  /* center, rotationRadius */ {8.933176 3.785294 7.8621764} 21.560703 /* navigation center, translation, depth */ {0.0 0.0 0.0} -133.3468 -145.45145 50.0; # generate arrows.'

/* 7 isosurface */

,'load CH3F.smol;moveto /* time, axisAngle */ 1.0 { -732 -4 682 108.39} /* zoom, translation */  72.64 0.1 0.1  /* center, rotationRadius */ {0.25456807 0.0 0.45705494} 2.6619983 /* navigation center, translation, depth */ {0.0 0.0 0.0} 2.7899415 6.5491905 50.0;isosurface molecular map mep'

/* 8 minimize */

,'load thyroxine.cml;delay 5;rotate x 90;rotate y 30;delay 5;moveto /* time, axisAngle */ 1.0 { 976 212 -52 144.49} /* zoom, translation */  100.0 0.1 0.1  /* center, rotationRadius */ {4.86655 0.0 0.0} 7.0919714 /* navigation center, translation, depth */ {0.0 0.0 0.0} -32.283867 12.043528 50.0;minimizationSteps = 300;minimize'

/* 9 Jmol math */

,'script q_cantrot.spt'



,'This page lists all new features being introduced in Jmol 11.5. Other pages describe features introduced between <a href=new0.htm>Jmol 10.2 and Jmol 11.0</a>, between <a href=new2.htm>Jmol 11.0 and Jmol 11.2</a>, and between <a href=new4.htm>Jmol 11.2 and Jmol 11.4</a>. Documentation for all commands can be found in the <a href=../index.htm?ver=11.6>Interactive Documentation for Jmol 11.6</b>. Documentation is also available for both <a target=_blank href=../index.htm?ver=11.2>Jmol 11.2</a> and <a target=_blank href=../index.htm?ver=11.4>Jmol 11.4</a>. For the complete change log development summary, see <a href=http://jmol.svn.sourceforge.net/viewvc/jmol/trunk/Jmol/src/org/jmol/viewer/Jmol.properties?view=markup>Jmol.properties</a>. Comments? Suggestions? <a href=mailto:hansonr@stolaf.edu>Bob Hanson</a>'

,latestVersion

,'### dipole/draw/ellipsoid/isosurface/pmesh ID xxx and new $"xxx" syntax ###'
,'# Jmol 11.5.49 adds the explicit ID keyword for dipole, draw, ellipsoid, isosurface, and pmesh. This keyword now allows for variable definition of IDs for these objects, streamlining programmed scripting and allowing for a broader range of ID names. Draw object names can be referenced using dollar sign and quotes -- $"..." -- which then allows for variable definitions of object references, such as $@x or $@{"pt"+i}.'
,'load caffeine.xyz'
,'draw ID x {0 0 0} {1 1 1}'
,'color $"x" white'
,'id="x";color $@id yellow'
,'i = 3; draw ID @{"pt"+i} {0 0 0}'
,'color $pt3 blue'
,'color $@{"pt"+i} yellow'

,'### draw {point} PLANE [plane definition] ###'
,'# Jmol 11.5.49 adds the option to draw a line or arrow from any point to the nearest point in a plane defined in any one of several ways.'
,'load caffeine.xyz;'
,'draw {atomno=3} PLANE x=5'
,'draw {atomno=3} PLANE xz'
,'draw {atomno=3} PLANE z=3'
,'draw {atomno=3} PLANE {0 1 0 0}'
,'wireframe;spacefill off;moveto /* time, axisAngle */ 1.0 { -416 -590 692 67.63} /* zoom, translation */  222.91 11.43 -63.14  /* center, rotationRadius */ {-0.23140144 0.61279976 0.071704745} 5.580881 /* navigation center, translation, depth */ {0.0 0.0 0.0} 20.637098 -59.3377 50.0; draw p0 {h14} {h15} {h1}; draw p1 {c10} PLANE {h14} {h15} {h1};print "The distance of this line is " + (0.0 + ($p1[2] - $p1[1]))%2 + " Angstroms'

,'### draw arc; draw arrow arc ###'
,'# Jmol 11.5.47 adds curved circular arcs and arrows for the draw command. Arc definition involves designating a line (two points) about which the arc is to appear and a starting reference point. Three additional parameters, in the form of {theta, nDegress, fractionalOffset} designate a starting angle, a number of degrees of arc, and a distance from the first atom listed in a direction toward the second atom. The direction of the angle depends upon your perspective preference. Seen looking down the axis with the second atom in front of the first atom (the standard mathematical perspective), the angle measures positive in an anticlockwise sense. Seen looking down the axis with the first atom in front of the second (common in organic chemistry), a positive rotation involves a clockwise rotation.' 
,'load caffeine.xyz;moveto /* time, axisAngle */ 1.0 { -868 109 485 114.55} /* zoom, translation */  222.91 0.0 0.0  /* center, rotationRadius */ {-0.23140144 0.61279976 0.071704745} 5.580881 /* navigation center, translation, depth */ {0.0 0.0 0.0} 10.685359 -5.0345592 50.0;'
,'draw arrow arc {c10} {n4} {h15} {0 -60 0} "    -60" # listing the NEAR atom first: negative is anticlockwise'
,'draw arrow arc {n4} {c10} {h14} {-60 60 0.5} "60" # listing the REAR atom first: positive is anticlockwise'
,'draw arrow arc scale 0.5 {n4} {c10} {h14} {-60 60 0.5} "60" # scaling can be used to change the radius of the arc'

,'### ramachandran r; draw RAMACHANDRAN; write RAMACHANDRAN DRAW ###'
,'# Jmol 11.5.43 adds a new way of visualizing Ramachandran plots in 3D -- Ramachandran relative, or <b>ramachandran r</b>. The z-axis (initially toward the viewer) is calculated to be psi[i] + phi[i+1] - psi[i-1] - phi[i] and represents the projection of the "absolute difference of the relative quaternion difference using the C-alpha frame -- (q[i] \\ q[i+1])  / (q[i-1] \\ q[i]) -- which can also be viewed using <b>quaternion r difference2</b>. Due to the unique nature of protein amino acid orientations, in general this number corresponds to the extent to which the amino acid residue is in an unstructured environment, with values close to 0 (near the XY plane) being more likely to be in the core of a helix or sheet, with values far from zero either not really being part of a helix or sheet (if so marked) or perhaps the last residue in a helix or sheet. Jmol 11.5.46 adds to that the capability of quickly drawing PHI and PSI angles for proteins.'
,'load 1crn.pdb;'
,'ramachandran r;moveto /* time, axisAngle */ 1.0 { -975 186 124 81.15} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {0.0 0.0 0.0} 260.0 /* navigation center, translation, depth */ {0.0 0.0 0.0} 0.0 0.0 50.0;'
,'frame 1.1;display backbone and (10,11);center 10,11;select 11;draw ramachandran;moveto /* time, axisAngle */ 1.0 { 752 235 -615 65.36} /* zoom, translation */  799.56 27.71 9.71  /* center, rotationRadius */ {8.933176 3.785294 7.8621764} 21.560703 /* navigation center, translation, depth */ {0.0 0.0 0.0} -133.3468 -145.45145 50.0; # generate arrows.'
,'frame 1.1;select 4;write ramachandran draw # get a listing of the arrows.'

,'### measure involving atoms and points ###'
,'# Jmol 11.5.38 adds the capability to measure between drawn objects (such as points, lines, arrows, curves, and planes) and atoms. For now the measurements are only provisionally displayed -- when the user finishes the measurement, the measurement disappears. Jmol 11.5.46 adds the capability to save such measurements. The feature is enabled using <b>set drawPicking TRUE</b>.'
,'load caffeine.xyz;'
,'draw pt1 {0 0 0};draw line1 {2 2 2} {2 3 4};set drawPicking TRUE;javascript "alert(\'Now double-click an atom or drawn point and measure distances or angles involving other atoms and drawn points.\')"'
,'measure {atomno=3} {0 0 0} {atomno=5}'

,'### isosurface functionXY for mapping###'
,'# Jmol 11.5.46 adds functionXY as a mapping source.That is, you can take any object such as a surface, a sphere, a plane, another function -- anything -- and map it with color based on a function f(x,y). See <a href=isosurface.htm>isosurface.htm</a>.'

,'### within("branch", {a}, {b}); rotate branch {...} {...} ###'
,'# Jmol 11.5.46 adds "branch" to the options of within() <b>as a math function</b>. The selected atoms are those connected directly or indirectly to {b} but not {a}. Typically one would choose two atoms, a and b, where b is bonded to a. This allows easy specification of chains that might later be rotated selectively. Since this version of the <b>within</b> function is Jmol math-only, it must be encapsulated in "@{}" if used in a select command. The function is used in <a href=helix.htm>helix.htm</a>. In addition, you can easily rotate around a bond using the <b>rotate branch</b> command option.'
,'load ala_5_180_0.pdb'
,'select @{within("branch",{[ala]4.N}, {[ala]4.CA})};selectionHalos on;'
,'select @{within("branch",{[ala]4.CA}, {[ala]4.N})};selectionHalos on;'
,'rotateSelected {[ala]4.CA} {[ala]4.N} -10;'
,'rotate branch {[ala]3.CA} {[ala]3.N} -10;'

,'### show info; show residues; show sequence; show chains; show groups; show atoms; show rotation; show translation; show orientation moveto ###'
,'# In connection with developing <a href=jmol.proteinExplorer.org>Jmol Protein Explorer</a>, several Chime-related commands were introduced in Jmol 11.5.39 and 11.5.45.'
+' In addition to those listed below, <b>set messageStyleChime</b> gives a slightly different message output format, including a more descriptive message upon atom picking:   '
+' <b> Atom: xxx Group: xxx Chain: xxx Model: xxx Coordinates: x y z</b>'
,'load 1crn.pdb;show info'
,'select 1-5;show residues'
,'show sequence'
,'show groups # note that groups are listed only once, in the order N--C.'
,'show atoms'
,'show selected'
,'load 1bna.pdb;rotate x 30;select *;show chains'
,'show rotation # as a quaternion'
,'show translation # as an x y pair'
,'show orientation moveto # just the moveto part; no comments'
,'set pdbGetHeader true # no overt effect, but it saves the file header (otherwise Jmol attempts to re-read the file in order to recover the PDB header when requested.'

,'### rotate quaternion and rotate axisAngle ###'
,'# Jmol 11.5.45 allows easy rotation using axisAngles or quaternions that might have been calculated.'
,'rotate quaternion {0 1 0 1} # x y z w # 90-degree anticlockwise rotation around y'
,'rotate axisAngle {1 0 0 45} # x y z theta # 45-degree rotation about x'
,'q = {0 0 1 1};rotate quaternion @{q/2} # 45-degree rotation about z'

,'### draw lines, vectors, and arrows from point to plane ###'
,'# With Jmol 11.5.45/11.5.48, one can easily draw lines, vectors, and arrows from a point to the nearest point on a specified plane. Simply provide a point definition and a plane definition in the draw command. (Planes can be defined in {a b c d} notation, where <b>ax + by + cZ = 0</b> or using the keyword PLANE followed by any definition of a plane, including "xy", "yz", "x=3", etc.'

,'### axisAngle() and quaternion() extended quaternion definitions ###'
,'# Jmol 11.5.45 allows more variety in the way quaternions are defined.'
,'print axisAngle(0 1 0 30) # 30-degree rotation about y -- quaternion equivalent'
,'print axisAngle(0 1 0 30) %-1 # vector part'
,'print axisAngle(0 1 0 30) %-2 # angle'
,'print axisAngle(0 1 0 30) %4 # normalized vector part'
,'print axisAngle("{0 1 0 30}") % {0 0 1} # 30-rotation of the point {0 0 1} about the y axis'
,'print quaternion("{0 1 0 1}") # using {x y z w} notation, a 90-degree rotation about y -- normalized to form a unit quaternion'
,'print quaternion(0,1,0,1) # using q0,q1,q2,q3 notation, a 180-degree rotation about (x=0,y=z) -- normalized to form a unit quaternion'

,'### Jmol math equivalence testing ###'
,'# Jmol 11.5.45 allows testing of points and decimal values for equivalence by checking distances and differences, respectively, for being less than 0.000001. While not strictly equivalent, this change should result in better performance of scripts that test for {x y z} == {a b c} or x == y.'
,'print {1 2 3} == {1 2 3.1}'
,'print {1 2 3} == {1 2 3.000001}'
,'print 1.000003 == 1.000001'
,'print 1.0000003 == 1.0000001'

,'### _applet boolean ###'
,'# Jmol 11.5.43 allows simpler testing of whether Jmol is running as an application or an applet'
,'print _applet'
,'if (_applet); echo "I am an applet";else; echo "I am an application";endif'

,'### sqrt() and integer division ###'
,'# Jmol 11.5.43 adds the sqrt() function and integer division'
,'print sqrt(2)'
,'print 33 \\ 4'
,'print 32.8 \\ 4'

,'### select command extended ###'
,'# Jmol 11.5.43 extends the <b>select</b> command to allow the same capabilities as the select() function, allowing for much expanded (and more efficient) search strategies. The variable _x is defined implicitly.'
,'load 1crn.pdb;select atomno=1 or atomno=100; spacefill; '
,'select {*} (distance({atomno=1}) < distance({atomno=100}));color white;'

,'### calculate/color straightness; label %T ###'
,'# Using a new quaternion calculation, Jmol 11.5.43 can calculate a "straightness" parameter (-1 to 1), and apply that as a color. The calculation allows for identification of "incipient" secondary structure as well as standard regions of helix and sheet.'
,'load 1crn.pdb; spacefill off;wireframe off;trace on;cartoons on;color cartoons translucent'
,'calculate straightness; color straightness;'
,'load 1d66.pdb;spacefill off;wireframe off;cartoons on;select nucleic and *.n1;label %n; select *'
,'calculate straightness; color straightness;moveto /* time, axisAngle */ 1.0 { -97 -995 -26 111.58} /* zoom, translation */  574.72 0.0 0.0  /* center, rotationRadius */ {20.874 41.3605 28.1455} 46.245033 /* navigation center, translation, depth */ {0.0 0.0 0.0} 166.10684 287.7699 50.0;'
,''

,'### set pickLabel ###'
,'# Jmol 11.5.42 allows customized reports of atom clicking.'
,'load caffeine.xyz; set picklabel "atom: %a x=%x y=%y z=%z" # now pick an atom.'
,'set picklabel "" # back to the default'

,'### LOAD/SCRIPT equivalence ###'
,'# Jmol 11.5.41 makes it easier to load scripts into systems such as <a href=Jmol.proteinExplorer.org>Jmol Protein Explorer</a>. If a Jmol state file is read in a LOAD context ("# Jmol" at the beginning of a line), then its file type is identified as SPT, and it is processed via the SCRIPT command instead of the LOAD command.'

,'### XYZ reader enhancements ###'
,'# Jmol 11.5.41 adds the capability to read all of the following XYZ formats:<table>\
<tr><td><code> sym x y z </code></td></tr>\
<tr><td><code> sym x y z vx vy vz</code></td></tr>\
<tr><td><code> sym x y z c</code></td></tr>\
<tr><td><code> sym x y z c vx vy vz</code></td></tr>\
</table> where "sym" is an atom symbol with optional isotope (2H, 13C, 15N, etc.), x y z are coordinates, vx vy vz are vibrational vectors, and "c" is the charge -- either partial (decimal) or formal (integer)'

,'### select() ###'
,'# Jmol 11.5.40 introduces the select() function, which allow full math calculation of atom parameters as part of the atom selection process.'
+' Previous versions only allowed simple comparisons -- "select atomno > 10 and atomno <= 30". With this more capable and efficient method, you can now do much more interesting comparisons. '
+' In the case of select(), the first of three parameters is a dummy variable. The second is an atom expression to be searched. The third is a math expression that will be evaluated as TRUE or FALSE.'
,'load quartz.cif;wireframe;spacefill 0;ellipsoids 99;print select(x;{*};x.adpmax - x.adpmin > 0.1).label("%a has max-min > 0.1"); #checking to see how much of a difference there is in the ellipsoid axis lengths'


,'### quaternion 2nd derivative ###'
,'# Jmol 11.5.40 adds <b>quaterion derivative2</b> for setting the second derivative of the quaternion.'


,'### draw Vector [x y] {dx dy dz} ###'
,'# The combination of a screen coordinate and a direction for a vector allows setting a "frame" separate from the model and having it rotate with the model.'
,'load 1crn.pdb;spacefill off;wireframe off;cartoons on;'
,'axes on;axes position [50 50]; axes scale 1.5;'
,'x = getProperty("polymerInfo", "models", 1,"polymers", 1, "structures", 1, "axisUnitVector");draw v1 200 vector [50 50] @x color white # The white arrow on the axes is aligned with the first alpha helix'
,'x = getProperty("polymerInfo", "models", 1,"polymers", 1, "structures", 2, "axisUnitVector");draw v2 200 vector [50 50] @x color red # The red arrow is aligned with the second alpha helix'

,'### axes position [x y] or [x y %] ###'
,'# Jmol 11.5.40 introduces a new option for positioning axes anywhere on the screen as a small revolving axis set. The <b>axes position</b> command should come after <b>axes on</b>.'
,'load caffeine.xyz;rotate x 10; axes on;axes position [50 50]; axes scale 1.5;spin on'
,'axes position [30 80 %];spin off'

,'### [x y] and [x y %] designations in draw and echo commands ###'
,'# Jmol 11.5.40 introduces the capability of drawing to X,Y screen coordinates. These are designated with square brackets. An optional percent sign sets the position relative to 100% width and height. The designation is carried to <b>set echo</b> commands as well. In this version, if the [x y] bracket immediately follows a { }, it must be preceded by a comma.'
,'load caffeine.xyz; set echo myecho [20 300];echo a carbonyl oxygen.;draw 80 [80 290] {_O}[2]'




,'### <font color=red>Jmol_S</font> frank ###'
,'# The signed applet now bears a new red frank that cannot be removed using <b>frank off</b>. In addition, the applet menu identifies it as being signed.<img src=signed.gif/>'

,'### THREADED option ###'
,'# When Jmol detects that it is running as a signed applet, it switches to a dual-threaded method of processing commands. This is necessary because'
 +' tests showed while preparing <a href=Jmol.ProteinExplorer.org>Jmol Protein Explorer</a> that the signed applet cannot access files and javascript from the same thread. (Jmol looks for the lower-case "javascript" word to make this distinction.)'
 +'  Prior to applet loading, issuing <b>jmolSetCallback("useCommandThread", "false")</b> allows turning off of this threaded option (primarily for debugging purposes, Jmol 11.5.39). In connection with this, one can designate that the processors should split a script into two parts by adding \/\*SPLIT\*\/ '
 +' within the string -- for example, between a LOAD command and a JAVASCRIPT command used to post-process the file in JavaScript.' 




,'### _signedApplet ###'
,'# Since Jmol 11.3 it has been possible to determine if a script is running in an applet using <b>x = getproperty("appletInfo","htmlName")</b>;'
,' Jmol 11.5.39 also allows for discovering whether the applet is signed using the <b>_signedApplet</b> variable.'
,'if(_signedApplet);javascript alert("This applet is signed.");else;javascript alert("This applet is not signed");endif'

,'### reading of COMPND and HEADER records from PDB files ###'
,'# Jmol 11.5.39 places the COMPND and HEADER (classification) PDB records into auxiliaryInfo.'
,'load 1bna.pdb;font echo 10;set echo top left; echo @{getproperty("auxiliaryinfo","COMPND") + "|" + getproperty("auxiliaryinfo","CLASSIFICATION")}'


,'### jmolSetCallback("evalCallback", "someFunction") ###'
,'# Jmol 11.5.39 adds an eval callback, allowing Javascript evaluations to be routed through specific methods. This callback cannot be set with <b>set evalCallback</b>, and overrides the setting of _jmol.noEval.'

,'### draw VECTOR ###'
,'# Jmol 11.5.38 adds <b>draw VECTOR</b>, which takes a starting coordinate and a difference -- {dx dy dz}. These vectors are scalable'
,'load caffeine.xyz;draw v1x VECTOR scale 2.0 {atomno=3} {1 0 0};draw v1y VECTOR scale 2.0 {atomno=3} {0 1 0};draw v1z VECTOR scale 2.0 {atomno=3} {0 0 1}'



,'### draw with mixed types ###'
,'# Before Jmol 11.5.38, if combinations of points and atoms were drawn, then they were processed in an unexpected order '
+' -- first {x,y,z}, then $xxx, then {atomExpression}, then finally @{{atoms}.split()}). Jmol 11.5.38 changes this behavior to process points in the order given by the user.'

,'### draw title with ">" ###'
,'# By default labels for drawn objects are drawn near the first point of the set; starting with Jmol 11.5.38, if a draw text title has ">" as the first character, then the text is drawn near the last of these points. (For greater control, use <b>echo</b>.)'

,'### additional quaternion support ###'
,'# Quaternions can be used to represent the "frame" of an amino acid or nucleic acid. <a href=new4.htm>Jmol 11.4</a> introduced the quaternion command, which allows visualization of frames based on the C-alpha carbon of peptides and the lead carbon of nucleic acid base pairs. (frame "c")'
+'Jmol 11.5.38 adds an additional frame option positioned on the peptide plane ("p"). The command to switch is <b>set quaternionFrame</b> "c" or "p". Also new for the application is <b>write quaternion s</b>, which writes the set of frames to a file in the form of DRAW commands that, when run as a script, draws the frames on the molecule.' 

,'### set pdbSequential ###'
,'# Jmol 11.5.38 adds a setting that, prior to file loading, instructs Jmol to ignore distance in considering the connection of groups in chains. This setting is useful in certain situations where nonstandard distances are involved and the desire is to continue chain construction through these points.'


,'### CIF reading of B factors for thermal ellipsoids ###'
,'# Jmol 11.5.38 reads B factors as well as U factors in CIF files.'


,'### wildcard selection of draw/pmesh/isosurface objects ###'
,'# Jmol 11.5.38 allows selection of multiple objects using the * wildcard with <b>on</b>, <b>off</b>, and <b>delete</b>'
,'load caffeine.xyz;draw pt1 {0 0 0} {1 1 1};draw pt2 {1 1 1} {2 4 0};draw plane1 {atomno=3} {atomno=2} {atomno=6};draw plane2 {atomno=3} {atomno=2} {atomno=16}'
,'draw pt* off;'
,'draw pt* on;'
,'draw plane* delete'

,'### cross(a,b), sin(x), cos(x) ###'
,'# Jmol 11.5.38 adds cross product of vectors along with sin(x) and cos(x).'


,'### random(a) random(a,b) ###'
,'# Jmol 11.5.38 adds the random() function.'
,'print "" + random(1) + " " + random(1) + " " + random(1)'
,'print random(3,5)'
,'load caffeine.xyz;draw pt1 @{point(random(4),random(4),random(4))}'
,'load caffeine.xyz;isosurface plane @{plane(random(1),random(1),random(1),random(1))} translucent'


,'### draw VECTOR ###'
,'# Jmol 11.5.38 adds the VECTOR option to draw. This is like ARROW, except the parameters are an origin and a vector instead of two points. The vector scales differently from an arrow as well, expanding or contracting in length from the origin rather than from the center.'
,'load caffeine.xyz;moveto 1.0 { -940 -275 -203 74.74}  100.0 0.0 0.0  {-0.23140144 0.61279976 0.071704745} 5.580881 {0.0 0.0 0.0} -0.14081247 2.3565063 50.0;'
,'draw va VECTOR {atomno=5} {1 0 0} color red;draw vb VECTOR {atomno=5} {0 1 0} color green;draw vc VECTOR {atomno=5} {0 0 1} color blue;'
,'draw va scale 2.0;draw vb scale 2.0;draw vc scale 2.0'

,'### draw mixed points BEHAVIOR CHANGE ###'
,'# Jmol 11.5.38 changes the way multiple types of points are ordered in a draw command. Prior to this, all {x y z} coordinates were processed first, then $xxx coordinates, then {atom expressions}. This was OK for simple lines and planes, but not intuitive, nor particularly useful in more complex situations. Now DRAW simply uses the points in the order presented in the command.'

,'### biomolecules ###'
,'#Jmol 11.5.34 reads the REMARK 350 header records of PDB file, allowing the building of the "biomolecule" associated with the data set. In some cases this is a subset of the data; in others it is a base set of atoms along with a set of duplicates that are rotated and translated in space. In large cases, it is important to load only a subset of atoms, so we use the FILTER option to the load command for dual purpose. Note that there is also a new <b>Biomolecules</b> submenu on the popup menu under the first main menu item (introduced in Jmol 11.5.36). <br><img src=img/biomoleculemenu.jpg><br>'
,'load 1d01.pdb'
,'load 1d01.pdb FILTER "BIOMOLECULE 1"'
,'load 1d01.pdb FILTER "BIOMOLECULE 2"'
,'load 1sva.pdb FILTER "*.CA" # this one takes some time to download.'
,'load 1sva.pdb FILTER "*.CA;BIOMOLECULE 1" # the file is now cached; this time is for processing.'
,'color group; ellipsoid virus axes {1 0 0} {0 1 0} {0 0 1} scale 200 color white;zoomto 3 67 # a sphere at the center of the virus.'
,'SPIN ON'
,'spin off' 
,'# this next example illustrates loading only a subset of the available BIOMT transformations. (In this case there are 60 total.)'
,'load 1sva.pdb FILTER "BIOMOLECULE 1;#1,#2,#3,#4,#5";color chain ## 1/12 of the simian virus capsid. On some systems this may cause a memory error.'

,'### load FILTER ###'
,'#Jmol 11.5.33 introduces the FILTER option to the load command. This option passes information to specific file readers (currently PDB and CIF). Atom names, group names, and chain IDs are all selectable, and in each category one can either select "all like this" or "none like this". Filtering at the file loading stage saves memory, because the atoms are never loaded in the first place.'
,'load 1blu.pdb'
,'load 1blu.pdb FILTER "![HOH]"'
,'load 1jgq.pdb'
,'load 1jgq.pdb FILTER "*.P,*.CA";cartoons on'
,'load 1mng.cif'
,'load 1mng.cif FILTER "*:A";restrict *;cartoons on'
,'load 1a3n.pdb'
,'load 1a3n.pdb FILTER "[HEM]"'
,'load 1a3n.pdb FILTER "[HEM],[HIS]"'

,'### ELLIPSOID command ###'
,'#Jmol 11.5.33 (with bug fixes in 11.5.37) adds the capability to draw thermal ellipsoids (anisotropic displacement parameters). Compare with <a href=img/ellipsoids.jpg>Mercury</a>. A number of rendering options are possible. The default is <b>set ellipsoidBall ON</b>. '
,'load quartz.cif {1 1 1};spacefill off;wireframe on;'
,'select *;ellipsoids on;zoomto 3 300 # default is 50%'
,'ellipsoids 100'
,'select oxygen; ellipsoids off'
,'select *; color ellipsoids temperature'
,'select *; ellipsoids on'
	,"*NOUL"
,'# try various combinations of the options'
,'set ellipsoidBall on ~~ set ellipsoidBall off'
,'set ellipsoidFill on ~~ set ellipsoidFill off'
,'set ellipsoidArcs on ~~ set ellipsoidArcs off'
,'set ellipsoidAxes on ~~ set ellipsoidAxisDiameter 0.001'
,'set ellipsoidAxisDiameter 0.05 ~~ set ellipsoidAxisDiameter 0.1'
,'set ellipsoidAxes off ~~ '
	,"*UL"
,'set wireframeRotation on # now manipulate the model -- it switches to wireframe axes and arcs for quicker processing'
,'set wireframeRotation off' 
	,"*NOUL"
,'set ellipsoidDots on ~~ set ellipsoidDotCount 500'
,'set ellipsoidDotCount 200 ~~ set ellipsoidDotCount 100'
,'set ellipsoidDots off'
	,"*UL"

,'#I especially like this next option -- filled planes and spacefill set at the minimum ADP level. Check it out.'
,'set ellipsoidDots off; set ellipsoidBall off; set ellipsoidFill on; ellipsoids 100; spacefill ADPMIN 100;'


,'### draw CYLINDER ###'
,'#Jmol 11.5.26 allows for drawing circles that rotate with the model. Just produce a short cylinder.'
,'load caffeine.xyz'
,'draw width 3.0 CYLINDER {oxygen}[1] @{{oxygen}[1].xyz + {0.01 0.01 0.01}} mesh nofill'
,'moveto  1.0 { 627 186 -756 154.48}  100.0 0.0 0.0  /* center, rotationRadius */ {-0.23140144 0.61279976 0.071704745} 5.580881 /* navigation center, translation, depth */ {0.0 0.0 0.0} -2.7796414 -4.6965857 50.0;spin on'
,'spin off'
,'### draw CIRCLE ###'
,'#Jmol 11.5.25 adds the capability to draw static circles in the plane of the window either as a ring or a solid plane. These circles do not rotate around -- they are always in the plane of the window. Size can be automatic based on encompassing the atoms selected or it can set as a number of angstroms (which then scales with zoom) or as a number of pixels (which does not scale with zoom). Jmol 11.5.38 adds options for FILL (solid), and MESH NOFILL (a ring)'
,'load caffeine.xyz'
,'draw CIRCLE {*}'
,'draw CIRCLE {*} mesh nofill'
,'center {*};draw CIRCLE {*} fill;spin on;delay 5;spin off'
,'draw CIRCLE {*} fill translucent white'
,'draw DIAMETER 1.0 CIRCLE {atomno=3} color yellow mesh nofill # 1.0 angstroms'
,'draw DIAMETER 70 CIRCLE {_O}[2] color red mesh nofill # 70 pixels'

,'### isosurface MAXSET n and isosurface DOWNSAMPLE n ###'
,'#Jmol 11.5.24 adds two new options for isosurface: MAXSET and DOWNSAMPLE. The MAXSET parameter, followed by an integer, sets the maximum number of vertices that are in a connected-triangle set. The DOWNSAMPLE option allows reducing the grid resolution in order to not run out of memory when working with unnecessarily high resolution CUBE files.'

,'### minimization CONSTRAINT and FIX ###'
,'#Jmol 11.5.24 adds constraints (torsions, angles, and distances) and fixed points for a minimization.'
,'load caffeine.xyz;select connected(2) or connected(3) or oxygen and connected(1);connect aromatic modify;calculate aromatic'
,'select C13 or _H and connected(C13);color yellow;minimize fix {not selected}'
,'minimize'
,'minimize fix {none}'
,'set minimizationRefresh false;minimize constraint {c7} {N2} {C13} {H16} 0;minimize steps 100'
,'set minimizationRefresh false;minimize constraint {c7} {N2} {C13} {H16} 30;minimize steps 100'
,'set minimizationRefresh false;minimize constraint {c7} {N2} {C13} {H16} 60;minimize steps 100'
,'set minimizationRefresh false;minimize constraint {c7} {N2} {C13} {H16} 90;minimize steps 100'
,'set minimizationRefresh true'


,'### getProperty minimizationInfo / show minimization ###'
,'#Jmol 11.5.23 adds <b>getProperty minimizationInfo</b>, x=getproperty("minimizationInfo"), and <b>show minimization</b>. These are active anytime after a minimization calculation (either just the energy or an optimization) until <b>minimization clear</b> is executed.'

,'load caffeine.xyz;select connected(2) or connected(3) or oxygen and connected(1);connect aromatic modify;calculate aromatic'
,'minimize'
,'show minimization'
,'minimize energy # no stepping; shows more'
,'show minimization'

,'### save/restore coordinates ###'
,'#Jmol 11.5.23 adds <b>save/restore coord</b>. This allows resetting coordinates to their values prior to a minimization. (Minimization always saves the coordinates prior to iterating.) Or, after minimization you can save the coordinates under a name, load the file again, and restore the coordinates to the minimized set.'

,'load caffeine.xyz;rotate x -80'
,'minimize'
,'restore coordinates'
,'save coordinates "c1"'
,'select atomno<10;translateSelected {3 2 4}'
,'restore coordinates "c1"'

/* not working

,'### more callbacks ###'
,'#Jmol 11.5.23 adds several more callbacks, including <b>echoCallback</b>, <b>measureCallback</b>, <b>minimizationCallback</b>, and <b>scriptCallback</b>. Of these, only minimizationCallback is really new; the others are currently sent to messageCallback, but if defined will instead go to their own callback function. This page, for example, sends scriptCallback to function noCallback(){} -- just an empty function. This gets rid of the "Script completed" messages and "script terminated" messages that are usually sent to the message queue.'
,'set scriptCallback "alert"'
,'set scriptCallback "noCallback" # a function defined here as nothing'
,'set scriptCallback "" # now defaults to message queue'

*/



,'### minimize ###'
,'#Jmol 11.5.21 introduces a preliminary MINIMIZE command utilizing the UFF force field.'
,'load h2o-crude.xyz;measure {atomno=1} {atomno=2} {atomno=3}'
,'minimizationSteps = 30;minimize'
,'load caffeine.xyz;select connected(2) or connected(3) or oxygen and connected(1);connect aromatic modify;calculate aromatic'
,'set measurementunits pm;measure {_O}[1] {_O}[2]; color measure red'
,'minimizationSteps = 80; minimizationRefresh = true; minimizationCriterion = 0.001; minimize'
,'load thyroxine.cml;rotate x 90;rotate y 30'
,'minimizationSteps = 300;minimize'
,'load caffeine.xyz;select _H and connected(C10);color yellow'
,'# this <a target=_blank href=data/minrot.spt>next script</a> rotates a methyl group of caffeine'
,'script minrot.spt'
,'print load("minrot.spt")'


,'### atom deletion ###'
,'#Jmol 11.5.17 introduces selective atom deletion using the delete command. Note that atoms deleted in this way still consume memory; they just are not accessible.'
,'load caffeine.xyz'
,'delete oxygen'

,'### zap selected models ###'
,'#Jmol 11.5.16 introduces selective model deletion using an extension of the ZAP command. After execution, all atoms are selected, and all frames are displayed. Memory dedicated to the zapped model is recovered, and file.model numbers are not changed. Specifying even a single atom of a model zaps the entire model.'
,'load files "caffeine.xyz" "1crn.pdb";frame 0'
,'zoomto 1 {1.1} 0 '
,'zap 1.1'
,'zoomto 1 {2.1} 0'
,'zap atomno=1'

,'### customizable Van der Waals radii sets ###'
,'Jmol 11.5.12 introduces three predefined Van der Waals radii sets. These include the standard Jmol set, the set used in <a href=http://openrasmol.org>>OpenRasmol-2.7.2.1.1</a>, and the set used in <a href=http://openbabel.org>OpenBabel</a>. For a detailed list of these radii, see <a href=../misc/vdw_comparison.xls>vdw_comparison.xls</a>. In addition, the option exists to define one\'s own set, "user". To set the user variety, first set one of the other sets as a basis, then add a DATA statement to include the specific elements you want to give a new radii to.' 

,'load caffeine.xyz'
,'set defaultVDW Jmol;spacefill on'
,'set defaultVDW babel;spacefill on'
,'set defaultVDW rasmol;spacefill on'

/*
,'data "element_vdw" 6 1.7 end "element_vdw"'
,'data "element_vdw" 6 1.7; 7 1.8 end "element_vdw"; # separate using semicolons or new lines'
*/

/*#
# For full state compatibility, these commands should be given prior to
# model loading, as they affect all calculations involving Van der Waals 
# radii -- except default zoom.
#
# Now select the user set:
#
#  set defaultVDW user
#  spacefill on
#
# To delete all user entries:
#
#  reset VDW 
#
# If user vdw radii are currently set, then this resets the defaults to Jmol.
#
# new feature: show vdw  shows a listing of the currently set VDW radii
#
# new feature: integration of star, halo, and spacefill code so all behave the same.
# 
# stars     1.0      # set to a specific angstrom radius
# spacefill 100%     # percent of CURRENT vdw set
# stars     100%Jmol # percent of Jmol standard
# stars     50%Babel # percent of Babel standard
# spacefill 5%Rasmol # percent of Rasmol standard
# spacefill 30%User  # percent of User-defined values (or CURRENT if not defined)
# spacefill +1.2     # angstroms added to current vdw scheme
# halos     50%Jmol  # -- halos also have an added bit to make sure they are visible 
# spacefill 250      # RasMol 250 units/Angstrom units still
# spacefill -20      # neg numbers same as percentages: 20% here, using current vdw set
# stars     @{x+0.1} # math OK
# spacefill @x%      # make sure x comes out integer, otherwise % is ignored
#
# note that dots do not have a %Jmol option:
#
# dots   30     # syntax already assumes percent for dots using an integer
#
#

# -----------------------------------------------------------------------------

*/


,'### customizable Van der Waals radii ###'
,'#Jmol 11.5.11 allows setting of specific atomic Van der Waals radii. Setting the Van der Waals radius for an atom This does NOT change the default rendering of Jmol, and it does not persist beyond a ZAP or new LOAD command. (It is really for specific atoms, not specific elements.) The DATA command can also be used to set the Van der Waals radii of several atoms at once.'
,'load caffeine.xyz;dots on'
,'{carbon}.vanderwaals = 1.7;dots on'
,'set propertyAtomNumberField 1;set propertyDataField 2; data "property_vdw 1 2" 11 3.0;9 4.0 end "property_vdw 1 2";select atomno=8;dots on;'


,'### DATA "property_X i j" ###'
,'load caffeine.xyz'
,'#Jmol 11.5.11 allows you to override default propertyAtomNumberField (i) and propertyDataField (j) values. Basically, the data command now lets you specify these positions in the command itself. Note that the numbers must be within the quotes, and that the "end" label must also include these two numbers.'
,'data "property_x 1 2" 3 1.2 end "property_x 1 2"; label %{property_x}'


,'### set delayMaximumMs ###'
,'#Jmol 11.5.4 allows setting of the maximum delay in milliseconds. This allows faster debugging of code that involves the <i>delay</i> command.'


,'### set fontScaling TRUE/FALSE ###'
,'# Jmol 11.5.4 introduces automatically scalable fonts. When a label or 3D echo is created, if fontScaling is set to TRUE, then that font will scale up or down with the zoom level.' 

,'### set font scaleReference ###'
,'# Jmol 11.5.4 introduces the capability to set a scalable font to a given size at a given scale reference in Angstroms per pixel.'

/*

# new feature: set fontScaling TRUE/FALSE
# new feature: font [type] [size] [face] [weight] [scaleReference (Angstroms per pixel)]
#  atom labels and 3D echos then scale properly.
#  note that the current zoom affects the label size.




*/


,'### Applet memory leak found ###'
,'# Jmol 11.3.61 fixes a memory leak going back at least to Jmol 10.0. This is an important fix of a problem that has plagued Jmol web page developers all along -- that as a page was loaded more and more times, Java memory became less and less available until an "OUT OF MEMORY" condition was reached or the browser crashed. This should not be an issue any longer. '

,'### load TRAJECTORY ###'
,'# Jmol 11.3.60 introduces full support for "trajectories" -- meaning a single model with a series of atom coordinates. (Similar to the sort of multiple-frame .xyz files that could be made into an animation using Chime.) Loading a file as a trajectory saves substantially on memory requirements, since there is only one set of atoms and bonds. The defining characteristic for trajectories is that only one frame can be viewed at a time. Each trajectory is loaded into its own frame as though it were a distinct model, and frames are accessed as usual using the <b>frame</b> or <b>model</b> command. Specifying a particular trajectory (<b>select 1.4</b> or <b>display 1.2</b>, for example), not only selects those atoms, but also assigns the specified values of the atom coordinates, producing an immediate effect. Measurements and the position of cartoons are automatically recalculated when a new trajectory is displayed. Changes to colors in one trajectory effect the same change for all trajectories, since there is really only one model, just different atom positions. Multiple files may still be loaded, but (for now) only one trajectory can be among them, and it must be the first file loaded.'
,'load TRAJECTORY cyclohexane_movie.xyz'
,'animation on # same behavior here'
,'measure {atomno=3} {atomno=6};animation on # note that all trajectories are measured'
,'select 1.3 # select really does SELECT those atom coordinates -- the change is immediate'
,'color {C3} red;animation on; # there is only one model, just different positions'


,'### gOpenMol formated plt files for isosurfaces ###'
,'# Jmol 11.3.56 adds gOpenMol formatted plt electron density files to the list of volume data that can be read in the <b>isosurface</b> command.'
,'### set ? ###'
,'# Jmol 11.3.56 adds the capability to check any Jmol parameter or read-only variable (a variable starting with underscore). Simply issue the <b>set</b> command with a question mark or the beginning of a parameter followed by a question mark.'
,'set ?'
,'set c?'
,'set property?'

,'###jmolLoadInlineArray([line1, line2, ....]), jmolLoadInlineArray([model1, model2, ....]), and jmolLoadInlineString("line1\\nline2\\n....")  ###'
,'# Jmol 11.3.55 Jmol.js provides two distinct functions, jmolLoadInlineArray() and jmolLoadInlineString(), rather than a single jmolLoadInline() function of earlier versions. This solves a problem that was showing up with some Macintosh operating systems, which have a bug causing a misreading of parameters when a Java method being called by JavaScript has more than one "signature."'
,'<a href="javascript:testLoadInlineArray(\'wireframe on\')">test jmolLoadInlineArray([line1,line2,line3...],\'wireframe on\')</a>'
,'<a href="javascript:testLoadInlineArray1(\'wireframe on;frame all\')">test jmolLoadInlineArray([model1,model2,model3...],\'wireframe on;frame all\')</a>'
,'<a href="javascript:testLoadInlineString(\'spacefill 0.8\')">test jmolLoadInlineString("line1\\nline2\\nline3\\n...",\'spacefill 0.8\')</a>'

,'### _slabPlane and _depthPlane ###'
,'# Jmol 11.3.55 adds the capability to use the slab and depth plane settings programmatically. These variables are available regardless of whether slab is turned on or not.'
,'load caffeine.xyz;slab 50;'
,'print "slab:" + _slabPlane + "\\ndepth:" + _depthPlane # now rotate the model and press this link again. You will not see a change in the model because slab is not on, but the variables _slabPlane and _depthPlane are still available.'
,'slab 50;slab on;slab set;'
,'slab @{-_slabPlane}'
,'slab off;display within(999,@{_slabPlane})'
,'display within(-999,@{_slabPlane})'
,'display within(999,@{-_slabPlane}) # alternative reversal (same as above)'
,'display *;color {within(0.5,@{_slabPlane})} yellow'
,'isosurface plane @{_slabplane} translucent;rotate y 89'
,'### set wireframeRotation ###'
,'# Jmol 11.3.55 adds the capability to switch to a thin-line wireframe rendering during model manipulation.'
,'load caffeine.xyz;spacefill on'
,'set wireframeRotation !wireframeRotation # now drag the model'
,'set wireframeRotation OFF # turn it off'

,'### load symmetry range ###'
,'# Jmol 11.3.53 supplements Jmol 11.3.9 in the capability of visualizing the close contacts around a crystalline protein (or any other cyrstal structure) that are to atoms that are in proteins in adjacent unit cells or adjacent to the protein itself. The option RANGE x, where x is a distance in angstroms, placed right after the braces containing the set of unit cells to load does this. The distance, if a positive number, is the maximum distance away from the closest atom in the {1 1 1} set. If the distance x is a negative number, then -x is the maximum distance from the {not symmetry} set. The difference is that in the first case the primary unit cell (555) is first filled as usual, using symmetry operators, and close contacts to this set are found. In the second case, only the file-based atoms (Jones-Faithful operator x,y,z) are initially included, then close contacts to that set are found. Depending upon the application, one or the other of these options may be desirable.'
,'load quartz.cif'
,'load quartz.cif {1 1 1}'
,'load quartz.cif {444 666 1} range 3.0'
,'load quartz.cif {444 666 1} range -3.0'
,'load 1crn.pdb {444 666 1} range 4.0'
,'load 1crn.pdb {444 666 1} range -4.0;unitcell off;axes off;display not symmetry or symmetry and (oxygen or nitrogen);connect 4.0 {not symmetry and (oxygen or nitrogen)} {symmetry and displayed} hbond;center visible;'
,'display within(group, connected(not symmetry));select displayed and symmetry and *.CA;labels %n %r;color labels yellow;# just show the groups connected to the main model'




,'### write FILE [filename] (application) ###'
,'# Jmol 11.3.51 adds the capability for the Jmol application to write the current file to disk. This is particularly convenient if the load =XXXX option has been used to load a file directly from the RCSB database. If a file was loaded from a ZIP file using a manifest, then the entire ZIP file is saved. If no filename is given, the output goes to the console, and the behavior is the same as for the applet.'

,'### write FILE (applet) ###'
,'# The write FILE command in an applet context is the same as <b>getProperty fileContents</b>, which also delivers the currently loaded file when no additional parameters are given. Any filename given is ignored. The file contents can also be obtained in the applet using the jmolEvaluate function or jmolGetPropertyAsString(). In the applet context, binary files will not be delivered. Instead, for the applet specifically: Zip files written to the applet simply display their contents rather than the file itself. Compound document files display the contents of the file in (mostly) readable format. gzipped files are unzipped when delivered to the applet.'
,'write file'
,'load test.zip; write file'
,'load test.zip|CH3CL.MOL; write file'
,'load test.zip|BENZEN~1.ZIP; write file'
,'<a href=\'javascript:alert(jmolEvaluate("script(\\"write file\\")"))\'>javascript:alert(jmolEvaluate("script(\\"write file\\")"))</a>'


,'### Mac Spartan06 DIRECTORY reading ###'
,'# Jmol 11.3.49 reads Mac Spartan06 directories. Any file in the directory can be targeted; the M0001 model will load unless a different one is specified.'

,'### show spacegroup "X,Y,Z;-X,Y,Z;..." ###'
,'# Jmol 11.3.48 reports the matching space group name for a set of Jones-Faithful operations, if it can find it in its database.'
,'show spacegroup "-x,-y,z"'
,'show spacegroup "-y,x-y,z;-x+y,-x,z"'

,'### reading text-based content of ZIP and JAR files ###'
,'# Jmol 11.3.48 allows reading any file that Jmol can read from a ZIP file set. Simply specify the file name followed by a vertical bar and the name of the file within the zip file to read. If that file is a zip file itself, you can read files within the embedded zip file by continuing to add more vertical bars. Note that getproperty("filecontents") on a zip file gives the full directory of the file. Note that JAR files are ZIP format files. '
,'print getproperty("fileContents", "test.zip")'
,'print getproperty("fileContents", "test.zip|JmolManifest")'
,'print getproperty("fileContents", "test.zip|CH3CL~1.MOL")'
,'print getproperty("fileContents", "test.zip|BENZEN~1.ZIP")'
,'print getproperty("fileContents", "test.zip|BENZEN~1.ZIP|benzenevib.spardir/M0001/input")'
,'print getproperty("fileContents", "../Jmol.jar|org/jmol/util/") # to read a directory, add a slash at the end'
,'print getproperty("fileContents", "test.zip", "BENZEN~1.ZIP", "benzenevib.spardir/M0001/input") # alternative syntax for reading within a zip file'

,'### reading models from ZIP files ###'
,'# Jmol 11.3.48 reads ZIP files. If multiple models are present in ANY subdirectory, they will be read sequentially. If a file JmolManifest is present, then it will define the order and selection of files to be loaded. The manifest can also be given on the LOAD command line just after the file name. To read all the model files in a ZIP file and skip over any non-model files, use #IGNORE_ERRORS in the manifest. Other flags include #EXCEPT_FILES and (on the load line) IGNORE_MANIFEST.'
,'load test.zip;# contains a manifest specifying just one file'
,'load test.zip manifest "IGNORE_MANIFEST";frame next;delay 1;frame next;delay 1;frame next;delay 1;frame next;delay 1;frame next;delay 1;frame next; # ignore the manifest and load all files'
,'load test.zip manifest "CH3CL~1.MOL|CH4~1.MOL";frame 0 # ignore the manifest and load just these files'
,'load test.zip manifest "EXCEPT_FILES|CH3CL~1.MOL|CH4~1.MOL";frame 0 # ignore the manifest and load all except these files'
,'load test.zip|CH4~1.MOL #just this file'
,'load test.zip manifest "CH3CL~1.MOL" # alternative construction for just one file'

,'### calculate surfaceDistance FROM or WITHIN ###'
,'# Jmol 11.3.47 introduces <b>calculate surfaceDistance</b>, a replacement for <b>calculate surface</b>, with two different variations. <b>calculate surfaceDistance FROM</b> assigns the surfaceDistance property for atoms to be based on their distance from a van der Waals surface surrounding a set of atoms. This variation can be used, for example, to color a model based on distance to a ligand. <b>calculate surfaceDistance WITHIN</b> calculates surfaceDistance based on distance from a "shrink-wrap" around the specified set of atoms, usually the whole model or the whole model without solvent. Atoms external to this wrap may not be well represented. In either case, atoms on the calculated surface are assigned 0 for their surfaceDistance. The algorithm is approximate only and is based on the generation of 42 points around each atom at a specified distance, not an idealized surface.'
,'load 1crn.pdb'
,'calculate surfacedistance within {*}; color atoms surfaceDistance'
,'n=3;calculate surfacedistance from {resno=n}; color {resno=n} white; color {resno!=n} property surfaceDistance #click this link first, then click the next link several times'
,'n=n+1;calculate surfacedistance from {resno=n}; color {resno=n} white; color {resno!=n} property surfaceDistance #the color is from the group highlighted in white'
,'n=26;calculate surfacedistance from {resno=n}; color {resno=n} white; color {resno!=n} property surfaceDistance'

,'### SET isosurfacePropertySmoothing ON/OFF ###'
,'# Jmol 11.3.46 changes the way properties are mapped onto isosurfaces. Prior to 11.3.46, only the nearest atom to an isosurface point. Jmol 11.3.47 allows this property (by default) to be averaged by nearby atoms.'
,'load 1crn.pdb;n=3;calculate surfacedistance from {resno=n}; isosurface sasurface map property surfaceDistance'
,'set isosurfacePropertySmoothing OFF;isosurface sasurface map property surfaceDistance # Jmol 11.2' 
,'set isosurfacePropertySmoothing ON;isosurface sasurface map property surfaceDistance # Jmol 11.4 default'


,'### Jmol math .boundbox qualifier ###'
,'# Jmol 11.3.45 adds the .boundbox qualifier for atom expressions. The method returns information about the selected atoms in the form of a list of four {x y z} points -- [1] the center, [2] the vector from the center to the upper diagonal corner, [3] the lower diagonal corner, and [4] the upper diagonal corner itself. These can then be selected and used independently.'
,'load 1crn.pdb; print {*}.boundbox;' 
,'print {1-5}.boundbox;' 
,'x = {10-12}.boundbox;print "center: " + x[1] + "; vector: " + x[2] + "; corner0: " + x[3] + "; corner1: " + x[4]'
,'boundbox {10-12}; boundbox on'
,'x = {10-12}.boundbox; boundbox @{x[1]} @{x[2]*1.2} # 20% larger'
,'load 2by9.pdb;moveto /* time, axisAngle */ 1.0 { -887 -457 67 80.62} /* zoom, translation */  300.0 0.0 0.0  /* center, rotationRadius */ {30.669891 15.682194 15.608115} 38.883907 /* navigation center, translation, depth */ {0.0 0.0 0.0} -82.96312 118.77839 50.0;color {site_ac1} yellow;boundbox {site_ac1} on;delay 1;select BAM;spacefill 1.0'

,'### Extended show boundbox command ###'
,'# Jmol 11.3.44 extends the <b>show boundbox</b> command to provide information about the exact <b>boundbox</b> command that can be used to generate the current bounding box.'
,'show boundbox'

,'### Extended boundbox command ###'
,'# Jmol 11.3.44/11.3.63 extends the boundbox command to allow setting of the bounding box to something other than the default value. Three methods are available: (1) setting it to enclose a specific atom set, (2) setting it based on a center and a vector from center to corner, and (3) setting it based on two corner points (or atom set centers). It is possible to define points that turn the bounding box into either a 2D object (a rectangle) or a 1D object (a line) if desired. Points may be atom expressions; if only one atom expression is given, then the bounding box is made to encompass that set of atoms.'
,'load 1crn.pdb;boundbox on;'
,'boundbox {1-5} #around all'
,'boundbox {1} {1 1 1} #center to point'
,'boundbox CORNERS {5 5 5} {10 10 10} # these exact corners'
,'boundbox CORNERS {5 5 0} {8 8 0} # a rectangle -- rotate the model'
,'boundbox {1-5};display within(boundbox)'
,'display within(boundbox, {atomno < 30})'
,'display within(boundbox, {1},{10}) # all atoms within this box'
,'boundbox {displayed} # works both ways'
,'display within(boundbox, {1},{10}) and not within(group, not within(boundbox, {1}, {10})) # just full groups within this box'

,'### Jmol math getProperty() function ###'

,'# OK, this is important. With Jmol 11.3.44 we now have the capability to extract any information contained in any of the getProperty() information sets. Examples of the data in these sets can be found in the various <a href=../misc>xxxxInfo.txt text files</a> in the Jmol documentation. Applet users can use the Jmol.js function jmolEvaluate() to get these directly if not using a script. The first parameter is the information type. The second is an optional atom set. Any number of parameters may follow this and need to be either integers or strings that lead through the sets of arrays to the data of interest. Keys are not case-sensitive.' 
,'print getProperty() # list all the possibilities'
,'print getProperty("modelInfo")'
,'print getProperty("modelInfo","modelSetName")'
,'load 1crn.pdb;print getProperty("polymerinfo", "models",1, "polymers",1, "monomers",3, "structureType")'

,'### isosurface CAP ###'
,'# Jmol 11.3.44 adds the capability to cap off an isosurface along a given plane, either defined as {x y z w} or as three coordinates or atom expressions.'
,'load 1crn.pdb;moveto /* time, axisAngle */ 1.0 { -277 959 -54 53.58} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {10.5935 10.2105 6.079} 17.392593 /* navigation center, translation, depth */ {0.0 0.0 0.0} -30.524502 27.146784 50.0;'
,'isosurface sasurface'
,'isosurface CAP {1 1 1 -10} sasurface'
,'isosurface CAP {-1 -1 -1 10} sasurface # sign of parameters defines direction of capping'
,'isosurface CAP {*} {4} {40} sasurface'
,'isosurface CAP {4} {*} {40} sasurface # order of points defines direction of capping'
,'load 1gzx.pdb;moveto /* time, axisAngle */ 1.0 { -672 587 451 125.43} /* zoom, translation */  168.18 0.0 0.0  /* center, rotationRadius */ {4.1595 0.7165003 15.9475} 38.529003 /* navigation center, translation, depth */ {0.0 0.0 0.0} 0.37599182 31.048302 50.0;'
,'restrict hem or within(group,within(3.0,_fe));select hem;spacefill off;wireframe 0.2;isosurface CAP {*:A.fe} {*:B.fe} {*:C.fe} select (*) ignore (not protein) sasurface map sasurface'

,'### \\ marks continuation lines in scripts ###'
,'# Jmol 11.3.43 adds \\ at the end of a line to indicate that it is a continuation line. The \\ must follow a space or other punctuation and must immediately precede a \\n or \\r (linefeed or carriage return) character to be interpreted as a new-line character. The For example:<br /><br />x = "this is a test "\\<br /> + "of line continuation"<br /><br />isosurface mysurface \\<br />  molecular \\<br />  map MEP<br />'


,'### set drawPicking ###'
,'# Jmol 11.3.43 adds draw objects to the set of objects that are reported with pickCallback. The report consists of a string that can be interpreted as a JavaScript array: [  "draw","[drawID]",[modelIndex],[vertexIndex],[x],[y],[z]  ] that comes back to the pickCallback function as the second parameter, with the third parameterr (normally the atomIndex) being set to -2.'

,'load caffeine.xyz;set pickcallback "alert";'
,'draw t1 {0 1 0} {3 0 0} {0 0 4}'
,'set drawPicking on;script "javascript:alert(\'now pick corners of that triangle\')"'


,'### connect aromatic auto ###'
,'# Jmol 11.3.43 adds a new connect option similar to <b>calculate aromatic</b>, except it is isolated to a specifc set of connections; implicit modifyOnly makes it trivial to show aromatic systems for small molecules. The idea is based on <b>connect hbonds auto</b>.'
,'load caffeine.xyz'
,'select *;connect aromatic auto # that simple!'

,'### model-specific echos ###'
,'# Jmol 11.3.42 allows assigning a model number to any echo.'
,'load cyclohexane_movie.xyz'
,'set echo echo1 model 1.1;set echo echo1 100 100;echo "frame 1";set echo echo2 model 1.2;set echo echo2 110 110;echo "frame 2"'
,'frame next'
,'frame prev'

,'### frame titles ###'
,'# Jmol 11.3.42 adds a simple text message in the bottom left of a frame -- specific to model.'
,'load cyclohexane_movie.xyz'
,'frame 1;frame title "first frame";frame 2;frame title "second frame";frame 3;frame title "third frame";frame 1'
,'frame next'
,'frame prev'




,'### ****Jmol Embedded Script**** in super-comments ###'
,'# Jmol 11.3.42 extends the embedded script idea to /** ... **/ super-comment blocks.'

,'### ****Jmol Embedded Script**** in comments ###'
,'# Jmol 11.3.41 adds the capability to embed Jmol scripts into just about any file, particulary plain text ASCII files. When reading a script, the Jmol compiler looks for the string of characters <b>****Jmol Embedded Script****</b> within a /* ... */ comment enclosure, and if it finds it, then only the text between this string and the final */ marker is read as a script. Sort of a "reverse comment" concept. This special "comment" is read exclusively; all other text in the file is ignored. For an example, see <a href=../misc/operations.txt>operations.txt</a>. It is being used in the POV-Ray .pov files created by Jmol so that that single file can be read by either POV-Ray or Jmol.'

,'### direct string replacement in atom expressions ###'
,'# Jmol 11.3.41 adds the capability to define string-type math variables and then use them in atom expressions within @{} enclosures.'
,'load caffeine.xyz;x = "atomno=2";xlist = array("atomno<10","atomno>20")'
,'select @x;color green'
,'select @{x+" or atomno=3"};color yellow'
,'select @{xlist};color white # OR of array elements'
,'select @{xlist[2]};color blue # just "atomno>20"'
,'select @xlist[2];color purple   # same as {@xlist}[2] -- full list -- just the second atom'

,'### .type math function ###'
,'# Jmol 11.3.41 adds the .type math function, which allows testing of the variable type, mostly for development purposes, not general use. See <a href="../misc/operations.txt">operations.txt</a> for details.'
,'print (3).type'
,'print (3.8).type'
,'print "testing".type'
,'print {0 1 2}.type'
,'print {0 0 1 0}.type'
,'print {atomno=3}.type'
,'print array().type'
,'print (3 + {0 1 2}).type'


,'### set atom properties with an array ###'
,'# Jmol 11.3.41 adds the capability to assign atom properties using array or space-separated string notation. If the array length is shorter than the number of atoms, then only that number of atoms are affected.'
,'load caffeine.xyz'
,'{*}.x = array(2,3,4,5,6) # only the first 5 atoms\' x coordinates are set;'
,'{*}.property_mydata = array(1.0,5.5,4.4,3.3);'
,'{*}.property_mydata = "3 4 5 6 7 8";'
,'{atomno < 4}.xyz = array({3 4 5},{4 5 6},{5 6 7})'

,'### set atom properties directly using Jmol math ###'
,'# Jmol 11.3.41 adds the capability to assign atom properties directly using Jmol math. (Extended in Jmol 11.3.41 to arrays and string-based lists of values.) Assignable values include x, y, z, xyz, fx, fy, fz, fxyz (fractional coordinates), vx, vy, vz, vxyz (vibrational vector coordinates), formalCharge, occupancy, partialCharge, temperature, and valence, as well as any user-created property starting with "property_"'
,'load caffeine.xyz'
,'a = {atomno=3}; a.temperature = 3.0;color atoms temperature'
,'{atomno<=3}.color = "[0xFFFF00]"'
,'{atomno=3}.x = 3'
,'{atomno=3}.property_whatever = 2.0'
,'{(*)[2]}.xyz = {1 2 3}'



,'### POV-Ray EXPORT (application only) ###'
,'# Jmol 11.3.40 adds full <a href=http://www.povray.org/>POV-Ray</a> export capability to Jmol. (Previous versions had only a very basic atom/bond implementation.) Output can be created using a tool-bar icon or via the script command <b>write povray [width] [height] [filename]</b>. Check out the examples at <a href=povray.htm>povray.htm</a>.'


,'### Better Ramachandran plots ###'
,'# Jmol 11.3.40 better organizes Ramachandran plots as being one per model. Simply use <b>ramachandran</b> and <b>model</b> to switch back and forth between associated plots and molecular model. Hovering over an atom on the Ramachandran plot displays the group, phi, psi, and omega.'
,'load 1crn.pdb'
,'ramachandran'
,'model'

,'### Model-based parallel array calculations ###'
,'# Jmol 11.3.40 allows the splitting of atom bitsets into model-based lists using the .split() function on an atom set. The resultant array elements can be operated upon separately using such functions as .x or .xyz, and the <b>draw</b> command recognizes points generated in this way as the points to use for successive frames.'
,'load cyclohexane_movie.xyz;'
,'pts = {C5}.split();print pts'
,'draw @{pts.xyz.sub({1 0 0})} "x"'
,'frame next'
,'frame prev'
,'anim mode palindrome;anim on'
,'anim off'

,'### Draw object title lines specific for models ###'
,'# Jmol 11.3.40 adds the capability to have model-specific draw labels when a draw object is defined for multiple models using a single command. Titles should be one line each and separated by vertical bars. Not all frames need to be labeled, and a vertical bar at the end of the label generates blank labels for all further frames.'
,'load cyclohexane_movie.xyz'
,'draw axis 2.0 (c2 or c3) (c5 or c6) "first frame|next frame|another frame|"'
,'frame next'
,'frame prev'

,'### Spherical Basis Set Molecular Orbitals ###'
,'# Jmol 11.3.40 supports reading of spherical 5D and 7F orbitals as well as Cartesian F orbitals.' 

,'### MOLDEN reader ###'
,'# Jmol 11.3.40 supports reading output files created by the <a href=http://www.cmbi.ru.nl/molden/molden.html>Molden</a> program.'


,'### WebExport (application) ###'
,'# Jmol 11.3.40 adds the capability to quickly create web pages from the Jmol application. See <a href="http://jmol.svn.sourceforge.net/viewvc/*checkout*/jmol/trunk/Jmol/src/org/openscience/jmol/app/webexport/WebExportIntro.html">WebExportIntro.html"</a>, <a href="http://jmol.svn.sourceforge.net/viewvc/*checkout*/jmol/trunk/Jmol/src/org/openscience/jmol/app/webexport/pop_in_instructions.html">pop_in_instructions.html</a>, and <a href="http://jmol.svn.sourceforge.net/viewvc/*checkout*/jmol/trunk/Jmol/src/org/openscience/jmol/app/webexport/script_button_instructions.html">script_button_instructions.html</a>'

,'### SET RESTRICTED TO JMOL VARIABLES ONLY ###'
,'# Jmol 11.3.40 restricts the use of the <b>set</b> command to Jmol standard parameters. Use of <b>set</b> with a user-defined variable now generates an error. The purpose of this change is to make a clearer distinction between user-created and Jmol variables. You can still use "=" with (most, but not all) Jmol parameters and all user-created variables. Note that <b>set</b> can be used with all Jmol parameters, but there are some forms of the SET command that cannot be cast as "x = ..."'
,'set background white'
,'set x 3 # THIS IS NOW AN ERROR'
,'background = black'

,'### select within(x.x,"plane",$plane) ###'
,'# Jmol 11.3.37 introduces a new way to select atoms based on distance from a plane. The plane can be defined most easily by a set of atoms using draw, then used to display a subset of the atoms. The sign of the distance value for "within" determines which side of the plane is being referred to. This is best determined by experimentation. '
,'load gold.cif {5 5 5};moveto /* time, axisAngle */ 1.0 { 329 816 -476 154.9} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {10.196499 10.1965 9.176849} 18.8;'
,'display within(plane,@{plane({atomno=1},{atomno=2},{atomno=3 or atomno=4})}) # plane defined using three-point embedded expressions'
,'display within(plane,@{plane({0 0 0},{1/2 0 1/2},{0 1/2 1/2})})  # plane defined using fractional coordinates'
,'display within(plane,@{plane({0 0 0},{1 1 1},{atomno=3 or atomno=4})}) # plane defined using a combination of coordinates and atoms'
,'draw plane1 (atomno=1) (atomno=2) (atomno=6)'
,'draw plane2 (atomno=1) (atomno=6) (atomno=5)'
,'draw plane3 (atomno=1) (atomno=2) (atomno=5)'
,'draw plane4 (atomno=513) (atomno=532) (atomno=429)'
,'display within(plane,$plane1)'
,'display within(-999,plane,$plane1)'
,'display within(999,plane,$plane1)'
,'display within(999,plane,$plane1) and within(999,plane,$plane2) and within(-999,plane,$plane3)'
,'display within(999,plane,$plane1) and within(999,plane,$plane2) and within(-999,plane,$plane3) and within(-999,plane,$plane4)'
,'draw off # we don\'t need to see the planes, just use them'
,'axes off;unitcell off'
,'select *;spacefill 1.45'
,'moveto /* time, axisAngle */ 1.0 { -180 497 -849 149.7} /* zoom, translation */  100.0 -6.0 15.1  /* center, rotationRadius */ {10.196499 10.1965 9.176849} 18.8;'
,'select not displayed;color translucent white;display (atomx < 20 && atomy < 20)'
,'# using Miller indices:'
,'load gold.cif {3 3 3};spacefill 1.45;moveto /* time, axisAngle */ 3.0 { -691 507 -515 173.7} /* zoom, translation */  132.8 0.4 33.4  /* center, rotationRadius */ {6.1178994 6.1179 5.09825} 11.7;'
,'display within(4.0,atomno=68)'
,'center displayed'
,'select within(hkl,{1/4,1/4,1/4});color red;'
,'select within(hkl,{1/3,1/3,1/3});color translucent gold;'
,'select within(hkl,{1/2,1/2,1/2});color white;'
,'moveto /* time, axisAngle */ 1.0 { -283 932 -225 133.0} /* zoom, translation */  209.0 0.0 0.0  /* center, rotationRadius */ {4.0785995 4.0785995 4.0786} 13.6;'

,'### @{mathExpression} ###'
,'# Jmol 11.3.37 allows for doing math within a command anywhere @x can be used.'
,'load caffeine.xyz;x = 3;xlist = array("red", "green", "blue");'
,'select atomno=@{x + 2};color white'
,'select atomno<=@x; color atoms @{xlist[x - 1]}'

,'### Settable atom colors using Jmol math ###'
,'# Jmol 11.3.37 allows for direct setting of atom colors using Jmol math.'
,'load caffeine.xyz'
,'{atomno=3}.color = "yellow"'
,'{atomno=3}.color = "[xff0000]"'
,'{atomno=3}.color = {255,0,255}'


,'### Helixes as barrels, not rockets ###'
,'# Jmol 11.3.37 offers the option to display cartoon and rocket helix motifs as cylinders without rocket heads.'
,'load 1crn.pdb;restrict none;select *;cartoons on;'
,'set rocketbarrels true'
,'set rocketbarrels false'

,'### Inline SCRIPT command ###'
,'# Jmol 11.3.33 adds the INLINE option for the script command.'

,'load caffeine.xyz;x=3;xlist=array("red","green","yellow","blue")'
,'script INLINE "select atomno=" + x + "; color " + xlist[3]'

,'### support for SITE records in PDB and CIF ###'
,'# Jmol 11.3.33 adds support for SITE records in PDB and CIF files. Loading of PDB and CIF files containing site information automatically defines variables site_xxx and defines selections site_xxx, where xxx is the PDB site identifier. In addition, the Jmol math variable array site_list is built to contain the names of all available sites. '
,'load 2by9.pdb;print site_list'
//,'select SITE_1;color white # bug here -- only site 1 available'
,'display SITE_AC1;echo off'
,'display SITE_AC2;echo off'
,'display SITE_AC3;echo off'
,'display @{site_list[4]};set echo top left;echo @{site_list[4]}'

,'### support for prime in nmes ###'
,'# Jmol 11.3.33 allows \' in variable names, atom names, and biomolecular group names.'
,'x = 3;x\'=33;print x\''


,'### Antialiasing in Jmol ###'
,'# Jmol 11.3.38 adds antiaiasing -- the smoothing of rough edges around objects. Options include antialiasing of just the display or of the images created with the <b>write</b> command. (Antialiasing of the image created using getProperty("image") is included in the display option, because that image is a screen copy.) Translucent objects may optionally by antialiased or not. Antialiasing requires substantial increases in required memory and therefor should be used with caution.'
,'load caffeine.xyz;isosurface molecular translucent'
,'set antialiasdisplay true'
,'set antialiasdisplay false # default'
,'set antialiasdisplay true;set antialiastranslucent true # default -- requires antialiasdisplay true'
,'set antialiasdisplay true;set antialiastranslucent false # requires less memory'
,'set antialiasImages true # application-only, for WRITE IMAGE...'






,'### Remdiated PDB support ###'
,'# Jmol 11.3.33 provides additional designators that are required for proper handling of remediated PDB files.'


,'### getproperty stateinfo TYPE ###'
,'# Jmol 11.3.32 introduces the capability of checking a subset of the state.'
,'load caffeine.xyz;color "myScheme=[xff0000] [xff2000] [xff4000] [xff6000] [xff8000] [xffa000] [xffc000] [xffe000] [xfff000] [xffff00] [xf0f000]"'
,'getproperty stateinfo colorState # defined color schemes'
,'getproperty stateinfo dataState # defined data'
,'getproperty stateinfo fileState'
,'getproperty stateinfo frameState'
,'getproperty stateinfo modelState'
,'getproperty stateinfo perspectiveState'
,'getproperty stateinfo selectionState'
,'getproperty stateinfo variableState'
,'getproperty stateinfo windowState'

,'### VALENCE property ###'
,'# Jmol 11.3.29 adds the VALENCE property of atoms, which is the sum of bond orders. Valence may be different before and after <b>calculate aromatic</b>.'
,'load caffeine.xyz;select _c and valence=4;color yellow'
,'select *;connect aromatic modify;calculate aromatic'
,'select _c and valence=4;color green'



,'### isosurface SQUARED ###'
,'# Jmol 11.3.29 adds the SQUARED parameter to the isosurface command. This parameter squares the data prior to generation of the isosurface. The primary use of this is in mapping of orbital electron density onto a surface, but other applications are possible.'
,'load acetic%20acid.spartan'
,'isosurface molecular map mo homo'
,'isosurface molecular map SQUARED mo homo'

,'### local/global functions (applet) ###'
,'# Jmol 11.3.29 introduces the capability to define functions that are global (that can be used by any set of applets on a page, the default) or local (restricted to this applet). Simply add an underscore "_" at the beginning of a function name to restrict it to the originating applet.'

,'### select ISAROMATIC ###'
,'# Jmol 11.3.29 adds ISAROMATIC as a selectable characteristic of atoms, selecting all atoms having aromatic bonds. (AROMATIC by itself is a RasMol-derived selector for <b>his,phe,trp,tyr</b>.)'
,'load C6H6.smol;select within(1.6,{0 0 0});connect aromatic modify'
,'select isaromatic;color yellow'

,'### automatic calculation of alternating single/double aromatic bonds ###'
,'# Jmol 11.3.29 introduces automatic calculation of aromatic alternating single/double bond systems. One simply designates a set of bonds to be aromatic, then uses <b>calculate aromatic</b> to have Jmol find the best single/double combination. Specific bonds can be forced to be single or double to influence the final solution, and formal charges on atoms (particularly nitrogen) can be used to set the valence. For many systems, the entire molecule can be designated aromatic, and Jmol will correctly asssign single and double bonds. The calculation can be reset using <b>reset aromatic</b>. For models that specify aromatic bonding within the model file, this calculation is automatic by default. If it is not desired, Jmol 10/11.2 behavior can be restored using <b>set smartaromatic off</b>'
,'load C6H6.smol;'
,'select within(1.6,{0 0 0});connect aromatic modify;calculate aromatic'
,'reset aromatic'
,'# The calculation is actually much more broadly useful. <b>calculate aromatic</b> will calculate appropriate single and double bonds for just about any organic system, correctly assigning carbonyl groups, phosphates, and oxides of sulfur. Protein structures must have included hydrogen atoms.'
,'load caffeine.xyz;bondOrder aromatic;calculate aromatic'
,'# Note that for biomolecular systems, hydrogens must be present.'
,'load 1cdr.pdb;select not *.ca;bondorder aromatic;calculate aromatic'
,'display aromatic or within(group, connected({aromatic}));refresh;zoomto {displayed} *2;spin on'


,'### extended bond orders ###'
,'# Jmol 11.3.29 introduces the capability to generate customized partial bonds using <b>bondOrder</b> or <b>connect</b> with </b>partial n.m</b>, where <b>n</b> is the number of lines (1 to 5) and <b>m</b> is a binary bitmask (1 to 31) indicating which of the lines should be dotted.'
,'load caffeine.xyz;'
,'connect {c5} {O11} partial 2.0'
,'connect {c5} {O11} partial 2.1'
,'connect {c5} {O11} partial 2.2'
,'connect {c5} {O11} partial 2.3'
,'connect {c5} {O11} partial 3.0'
,'connect {c5} {O11} partial 3.1'
,'connect {c5} {O11} partial 3.2'
,'connect {c5} {O11} partial 3.3'
,'connect {c5} {O11} partial 3.4'
,'connect {c5} {O11} partial 3.5'
,'connect {c5} {O11} partial 3.6'
,'connect {c5} {O11} partial 3.7'

,'### _1 parameter for "first atom" in CONNECT ###'
,'# do-it-yourself hydrogen bonds: N within 3 Angstroms of an O:'
,'load 1crn.pdb;moveto /* time, axisAngle */ 1.0 { -892 191 -411 175.07} /* zoom, translation */  256.0 0.0 0.0  /* center, rotationRadius */ {11.659 8.296 13.491} 17.392593 /* navigation center, translation, depth */ {0.0 0.0 0.0} -105.56131 -95.87578 50.0;'
,'connect {_O} {_N and within (3.0, _1)} hbond radius 0.5 create'
,'# and not the N within or near the group of that O:'
,'connect hbond delete;connect {_O} {_N and within(3.0, _1) and not within(group, _1) and not connected(within(group,_1))} hbond radius 0.5 create'


,'### Expanded "within" capability ###'
,'# In general the within(distance, atomExpression) selection is limited to atoms within a single model. Jmol 11.3.24 adds the capability to find atoms within a specified distance of other atoms in OTHER models.'
,'load files "1crn.pdb" "caffeine.xyz";select model=2.1;spacefill off;frame 0;'
,'select model=1.1 and within (2.0,true,model=2.1);center selected;color yellow;spacefill 0.6;geosurface 1.0;'
,'moveto /* time, axisAngle */ 1.0 { 855 427 -294 86.29} /* zoom, translation */  417.93 0.0 0.0  /* center, rotationRadius */ {2.85225 3.02825 1.09075} 27.617456 /* navigation center, translation, depth */ {0.0 0.0 0.0} -32.06526 -1.583903 50.0;'


,'### if/while/for capability ###'
,'# Jmol 11.3.23 introduces a full complement of if/elseif/else/endif, while/end while, and for/end for program flow capability. See the <a href="../index.htm?ver=11.4#if_while_for">online documentation</a> for details and examples.'
,'### user-defined macros, subroutines, and functions capability ###'
,'# Jmol 11.3.22 introduces the capability to execute user-defined macros (single-word commands), subroutines (methods that accept parameters), and functions (methods that return values) within Jmol scripts and mathematical expressions.See the <a href="../index.htm?ver=11.4#functions">online documentation</a> for details and examples.'
,'### new customizable menus ###'
,'# Jmol 11.3.15 introduces customizable menus. You provide a file the shows only the menus you want to have different. The overall format and full default Jmol menu is at <a href=http://chemapps.stolaf.edu/jmol/docs/misc/Jmol.mnu>Jmol.mnu</a>. The default menu is loaded using an empty string. In this case, the test menu is <a href=test.mnu>test.mnu</a>.'
,'load menu "../test.mnu";script "javascript:alert(\'now try the menu\')"'
,'load menu "" # load the default menu.'
,'# along with this capability are two new show and getProperty options:'
,'show menu'
,'getproperty "menu"'
,'# to load Jmol with an alternative menu in an applet, use (for now) <code>jmolSetCallback("menuFile","whatever.mnu")</code> prior to <code>JmolApplet()</code>'
,'# for the Jmol application, use the command line switch </b>-m FILENAME</b>.'

,'### %l -- element (atomic) number ###'
,'# Jmol 11.3.14 allows %l (lower case L) in labels shows the element number (atomic number) of the atom.'
,'label %l'

,'### new programmatic color definition ###'
,'# Jmol 11.3.14 accepts color points {r g b} that can be defined programmatically.'
,'r = 255;g=255;b=100;message _loop;background {@r @g @b};r = r - 10; g = g - 10;if (r > 0); refresh;goto _loop;endif;background black'

,'### color [object] property [property] "schemename" range [min] [max] ###'
,'# Jmol 11.3.14 introduces a much more flexible method of setting color schemes.'
,'load 1crn.pdb'
,'color atoms property temperature "rwb" # without range: full scale'
,'color atoms property temperature "rwb" range 0 100'
,'color atoms property temperature "rwb" range 0 50'
,'color atoms property temperature "rwb" range 0 20'
,'color atoms property temperature "rwb" range 0 10'
,'color atoms property temperature "rwb" range 10 0 # and reverse -- just reverse numbers'
,'# Or, you can define a color scheme on the fly:'
,'color atoms property temperature "[xff0000] [xff2000] [xff4000] [xff6000] [xff8000] [xffa000] [xffc000] [xffe000] [xfff000] [xffff00] [xf0f000]" range 0 10'
,'# And you can name schemes for use later:'
,'color "myScheme=[xff0000] [xff2000] [xff4000] [xff6000] [xff8000] [xffa000] [xffc000] [xffe000] [xfff000] [xffff00] [xf0f000]"'
,'cartoons on;color cartoons property atomno "myScheme"'
,'# If you want to have access to the reverse, call it <b>user</b> and then use scheme "resu"'
,'color "user=[xe0ff00] [xa0ff00] [x60ff00] [x20ff00] [x00ff20] [x00ff60] [x00ffa0] [x00ffe0] [x00e0ff] [x00a0ff] [x0060ff]"'
,'load 1crn.pdb;cartoons on;color cartoons property atomno "user" # note that color schemes persist through a file load'
,'cartoons on;color cartoons property atomno "resu"'
,'### colors in Jmol math ###'
,'# You can now access the color for a given value with Jmol math'
,'load 1crn.pdb;color atoms property atomno "roygb";refresh;x = 0 +javascript("prompt(\'pick a number from 1 to "+{*}.size+"\',50)");y=javascript("alert(\'the color for atom number " + x + " is " + x.color  + " == " + x.color.color + "\')");c=x.color;background @c'
,'set pickcallback "jmolscript:x=javascript(\\"alert(\'\\"+_atompicked+\\"\')\\")" # now pick an atom to see its number'
,'load 1crn.pdb;color atoms property atomno "roygb";refresh;x=javascript("alert(\'pick an atom to set the background to its color\')");'
+'set pickcallback "jmolscript:n=_atompicked+1; colorpt={atomindex=_atompicked}.color; colorhex=colorpt.color; set echo top left; complement={255,255,255}-colorpt; color echo @complement;str=\\"\\"+n+\\" \\"+colorpt+\\" \\"+colorhex; echo @str;background @colorpt"'
,'color "rwb" range 0 100;x = {atomindex=_atompicked}.temperature.color;echo @x'
,'### new SHOW FRAME option ###'
,'# Jmol 11.3.10 introduces SHOW FRAME, which delivers frame number, model name, file name, and file title for each model in the current frame set.'
,'show frame'
,'load C6H6.smol;show frame'
,'load C6H6.smol;frame 0;show frame'
,'load C6H6.smol;frame range 3-4;frame 0;show frame'
,'load files "caffeine.xyz" "1crn.pdb";frame 0;show frame'


,'### new SYNCHRONIZE command ###'
,'# Jmol 11.3.9 introduces a new method allowing two or more applets to be synchronized in terms of orientation. Move one with the mouse, and the other moves as well. In addition, the sync command allows ANY command to be sent to one or more other applets directly, without the intervention of JavaScript. Applets are identified by appletId (jmolApplet0, for instance) along with an optional bracketed sync group identifier -- generally a random number that identifies the page containing the controlling applet (generated by a new version of Jmol.js). If the syncId is not given, then the ID for the page containing the controlling applet is used. This feature is important for cross-frame synchronization only. Synchronization settings and commands can be given to the applet running the script (.), all applets (*), all other applets (>), or a specific applet (appletId or appletId[syncId]). For details and examples, see <a href=sync.htm>sync.htm</a> and <a href=sync4.htm>sync4.htm</a>.'

,'### adjustable scale for unit cell ###'
,'# Jmol 11.3.8 allows for adjusting the scale of the axes for unit cells. A scale of 2 is "standard". Note that the axis scale is the same for all models loaded and persists from one model to the next upon loading.'
,'load quartz.cif {1 1 1};moveto /* time, axisAngle */ 1.0 { -1000 3 29 61.64} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {1.2289999 2.1286902 2.7027001} 5.806031 /* navigation center, translation, depth */ {0.0 0.0 0.0} -9.724187 29.23801 50.0'
,'axes scale 1.0'
,'axes scale 2.0'
,'axes scale 2.4'
,'load quartz.cif {555 666 1};moveto /* time, axisAngle */ 1.0 { -1000 3 29 61.64} /* zoom, translation */  50.0 0.0 0.0  /* center, rotationRadius */ {1.2289999 2.1286902 2.7027001} 5.806031 /* navigation center, translation, depth */ {0.0 0.0 0.0} -9.724187 29.23801 50.0'
,'axes scale 4.0'

,'### export of VRML ###'
,'# Jmol 11.3.4 introduces a VRML option for the WRITE command. For example, <b>write VRML "myfile.wrl"</b>. Still in development; an outgrowth of the <a href="http://www.grc.org/programs.aspx?year=2007&program=visualiz">2007 Gordon Research Conference on Visualization in Science and Education</a>.'

,'### new QUATERNION command ###'
,'# Jmol 11.3.3 introduces the QUATERNION command, and experimental command that produces a 3D-projection of the 4D quaternion or quaternion derivative map of a protein or nucleic acid. Still in development; an outgrowth of the <a href="http://www.grc.org/programs.aspx?year=2007&program=visualiz">2007 Gordon Research Conference on Visualization in Science and Education</a>. The <b>model</b> command returns to the associated model from the quaternion view (added in Jmol 11.3.42).'
,'load 1crn.pdb;cartoons on;color structure'
,'quaternion x'
,'quaternion y'
,'quaternion z'
,'quaternion w'
,'quaternion derivative;select visible;trace off;color structure'
,'model  # return to model'
,'quaternion # return to quaternion'


,'### new RAMACHANDRAN command ###'
,'# Jmol 11.3.3 introduces the RAMACHANDRAN command, and experimental command that produces a 3D Ramachandran plot of a protein. Still in development; an outgrowth of the <a href="http://www.grc.org/programs.aspx?year=2007&program=visualiz">2007 Gordon Research Conference on Visualization in Science and Education</a>. The <b>model</b> command returns to the associated model from the quaternion view (added in Jmol 11.3.42)'
,'load 1crn.pdb;cartoons on;color structure'
,'ramachandran;color structure'
,'model  # return to model'
,'ramachandran # return to ramachandran plot'

,'### isosurface mapping of MEP and MO data onto planes ###'
,'# Jmol 11.3.2 adds the capability to map MEP and MO data onto planes.'
,'load C6H6.smol;moveto /* time, axisAngle */ 1.0 { 923 -262 283 126.9} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {0.0 0.0 0.0} 3.657167 /* navigation center, translation, depth */ {0.0 0.0 0.0} 0.0 0.0 50.0;'
,'mo homo'
,'mo off'
,'isosurface plane {0 0 2 -1.5} map mo homo'
,'isosurface plane {0 0 2 -1.5} map MEP #(bug fixed here in 11.3.9)'

,'### PERSPECTIVE DEFAULT NOW 11, NOT 10 ###'
,'# Jmol 11.3.0 switches the default perspective model to 11. This allows for linear zoom, a far greater range of zoom, and smooth transition into and out of navigation mode. You can still invoke the old model using <b>set perspectiveModel 10</b> (possibly as a defaultLoadScript), if you need to have the exact perspective of earlier Jmol versions. Try different zoom settings and switch perspectives to see the differences.'
,'load 1crn.pdb;set perspectiveDepth on # after loading crystal structures, this may be off'
,'save orientation;perspectivemodel = 11;restore orientation # new default'
,'save orientation;perspectivemodel = 10;restore orientation # old default'

,'### perspectiveModel = 11 as default ###'
,'# The default perspective model for Jmol 11.2.0 is now 11, rather than 10. Tests on installed websites should be done, and if the appearance is not as desired, "set persepectiveModel 10" can be used to force Jmol to use the old perspective model. Differences in models can be investigated using <a href="perspective.htm">perspective.htm</a>. Zoom values in the new (linear) model can result in substantially larger structures. Advantages of using the new model include that (a) the zoom level is now linearly dependent upon the zoom value, (b) there is substantially improved rendering of balls and sticks at high levels of zoom, and (c) molecular "navigation" is possible.'
,'load 1crn.pdb'
,'perspectiveModel=10;zoom 100'
,'perspectiveModel=11;zoom 100'
,'perspectiveModel=10;zoom 200'
,'perspectiveModel=11;zoom 170 #roughly the same as 10/200'
,'perspectiveModel=11;zoom 200'
,'perspectiveModel=10;zoom 1000'
,'perspectiveModel=11;zoom 410 #roughly the same as 10/1000'
,'perspectiveModel=11;zoom 1000'

,'### load "xxx::filename" ###'
,'# Jmol 11.1.30 introduces the option to specify the format of the file with the filename. This option overrides Jmol\'s internal automatic file typing, which should generally be sufficient. But it is possible that in the future Jmol will read types of files that cannot be so readily distinguished, in which case this option will be important.'
,'load xyz::caffeine.xyz'

,'### isosurface options BACKLIT, FULLYLIT, FRONTLIT ###'
,'# Jmol 11.1.29 introduces new options for displaying isosurfaces, particularly cavities and pockets.'
,'load lta-11(1).xyz'
,'isosurface INTERIOR sasurface'
,'isosurface backlit'
,'isosurface frontlit'
,'load 1dry.pdb;moveto /* time, axisAngle */ 1.0 { 819 -536 -204 83.74} /* zoom, translation */  246.79 0.0 0.0  /* center, rotationRadius */ {-3.0044985 -0.35549927 7.535001} 34.60526;'
,'isosurface minset 500 pocket sasurface'
,'isosurface frontlit'
,'isosurface backlit'
,'isosurface fullylit'

,'### isosurface POCKET, INTERIOR, and minSET n ###'
,'# Jmol 11.1.29 introduces the capability to distinguish between cavities and surfaces that are internal to an overall structure. In addition, the POCKET keyword, which can be used along with CAVITY or any surface type, includes only surfaces that are not internal -- that have an opening, that is. In the case of POCKET CAVITY, the cavities are opened so that they can be looked into. POCKET can tend to produce numerous fragments; the added MINSET n option allows discarding of smaller fragments. '
,'load lta-11(1).xyz'
,'isosurface POCKET cavity 1.0 sasurface 0.2'
,'isosurface minset 1000 POCKET cavity 1.0 sasurface 0.2'
,'isosurface minset 1000 INTERIOR cavity 1.0 sasurface 0.2'
,'isosurface delete;isosurface pocket sasurface 1.2'

,'### hypertext links for ECHO ###'
,'# Jmol 11.1.28 introduces the capability to tie an echo (2D- or 3D-positioned) to a script so that it acts just like a hypertext link on a web page. Reducing the hover delay time matches better the behavior of a web page link. See also <a href=buttons.htm>buttons.htm</a>.'
,'set hoverDelay 0.1; set echo bottom center;font echo 10; background echo yellow; echo change background color;set echo bottom script "if backGroundColor == \\"[xffffff]\\";backGround black;else;background white;endif "'


,'### new "javascript" command and x = javascript("...") [applet only] ###'
,'# Jmol 11.1.28 allows excution of a javaScript command within Jmol and assignment of the return of a JavaScript command to a variable. For applications that should not allow execution of JavaScript within an applet, add <b>_jmol.noEval = true</b> as part of the page code.'
,'javascript alert("this is a message from Jmol")'
,'x = javascript("document.location")'
,'set echo top right; echo %{javascript("document.location").split("/")[-1]}'
,'javascript jmolScript("javascript alert(\'this is nuts\')")'

,'### x = script("...") ###'
,'# Jmol 11.1.28 allows assignment of the messages normally going to the message cue or return of a JavaScript command to a variable.'
,'load quartz.cif {1 1 1}'
,'x = script("show symmetry");message @x'
,'x = script("show symmetry").lines.find("Spacegroup");message @x'
,'x = script("show symmetry").lines.find("Spacegroup").split(":")[2];message @x'
,'set echo top right; echo %{script("show symmetry").lines.find("Spacegroup").split(":")[2]}'


,'### MOPAC 2007 GRAPHF "mgf" file reading and new MO options HOMO and LUMO ###'
,'# Jmol 11.1.28 reads MOPAC 2007 (Version 7.101 or higher) formatted GRAPHF data. In addition, you can now specify HOMO or LUMO provided the data in the file includes orbital-occupancy numbers.'
,'load Formaldehyde.mgf;moveto /* time, axisAngle */ 1.0 { -985 -134 -104 61.72} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {0.8964291 -1.655519E-4 0.0} 2.596429;'
,'mo 4'
,'mo HOMO'
,'mo LUMO'
,'mo LUMO +1'
,'mo HOMO -1'
,'load fe(c5h5)2.mgf;moveto 1.0 { -985 -134 -104 61.72} 80;'
,'mo HOMO'
,'mo next'
,'mo prev'


,'### CSF molecular orbital reading from AM1, PM3, EHT, Gaussian, and DFT calculations; MO default rendering change ###'
,'# Jmol 11.1.28 can read and display MOPAC, Extended Huckel, and Density Functional molecular orbitals created using CACHe (now <a href=http://www.computers.us.fujitsu.com/www/products_bioscience.shtml?products/bioscience/cache>Sigress</a>). In addition, Jmol 11.1.28 changes the default rendering for molecular orbitals using the MO command to <b>MESH NOFILL FRONTONLY</b>'
,'load Gaussian.csf;moveto /* time, axisAngle */ 1.0 { -997 -67 -46 65.17} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {-0.5420239 0.004712522 1.4899998E-4} 2.587429;'
,'mo homo'
,'mo lumo'
,'mo 20'
,'mo next # click this a time or two'
,'mo prev'

,'### MO/ISOSURFACE/PMESH FRONTONLY/NOTFRONTONLY, TRIANGLES/NOTRIANGLES ###'
,'# Jmol 11.1.28 introduces two new options for displaying molecular orbitals and other isosurfaces. FRONTONLY displays just the front of the surface -- especially useful in the context MESH NOFILL FRONTONLY. TRIANGLES displays the surface with a bit of space between each rendered triangle, mostly for debugging or educational purposes.'
,'load FeBr2.csf;moveto /* time, axisAngle */ 1.0 { -742 668 60 39.66} /* zoom, translation */  400.0 0.0 0.0  /* center, rotationRadius */ {2.31 0.0 0.0} 4.41;'
,'mo homo'
,'mo mesh nofill notfrontonly'
,'mo mesh nofill frontonly'
,'mo fill nomesh triangles'
,'mo fill nomesh notriangles'


,'### isosurface list AND ISOSURFACE IDENTIFIER CHANGE ###'
,'# Jmol 11.1.28 adds <b>isosurface LIST</b> to give more information about loaded isosurfaces. In addition, there is a change to previous versions: When an isosurface is created but no identifier is included, then the previously created isosurface is replaced with the new isosurface. In previous versions, when no identifier was used, a new isosurface was created. THIS IS NO LONGER THE CASE. Note that this is only in the case of isosurface creation. The command ISOSURFACE DELETE still deletes all isosurfaces.' 

,'### unicode characters in Jmol ###'
,'# Jmol 11.1.26 adds the ability to read and write scripts that include unicode characters escaped using the \\uxxxx convention. (Second column of <a target=_blank href=http://unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP932.TXT>UNICODE reference</a>). It is important to use quotation marks around the label or echo string if unicode characters are used.'
,'load caffeine.xyz'
,'set echo top left;echo "alpha is \u03B1"'


,'### JVXL files from MOs ###'
,'# Jmol 11.1.26 fixes a bug introduced in 11.1.0 that caused Jmol to create invalid JVXL files created from structure-file-based molecular orbital data. These orbitals appear without any color.'

,'### fully independent GeoSurface and Dots ###'
,'# Code reformulation in Jmol 11.1.25 allowed for the separation of "dots" from "geoSurface," which are now two totally independent objects. geoSurface default coloring is now much like dots -- inheriting the color of the associated atoms -- but with the added characteristic that a geosurface can be made translucent. However, the way geosurfaces are constructed -- by overlapping geodesic fragments -- may not be conducive to translucency.'
,'load caffeine.xyz;zoom 50'
,'geosurface on'
,'color geosurface translucent 3 yellow'
,'dots +0.3'
,'geosurface off'
,'### cavity depiction for biomolecules ###'
,'# Jmol 11.1.24 introduces the capability to render cavities using ISOSURFACE as though they were "filled with foam." Four parameters are involved: (1) a selected atom set, (2) a set of atoms to ignore (probably solvent and/or a ligand in the cavity itself), (3) an "envelope radius" (typically 3 to 10 Angstroms), and (4) a cavity minimum diameter. The envelope radius only affects cavity identification in the perifery of the model. It can be thought of as the radius of the maximum opening radius of the cavity. If this number is small, then cavities will not be identified as part of large molecular folds. '
,'load 1crn.pdb'
,'isosurface s1 cavity 1.2 10'
,'isosurface s1 cavity 1.2 6'
,'isosurface s1 cavity 0.5 6'
,'isosurface s1 cavity 0.1 3'


,'### isosurface WITHIN x.xx {point}  ###'
,'# Jmol allows the rendering of isosurface fragments. Starting with Jmol 11.1.22, the WITHIN parameter allows specification of a number of angstroms around some point in space. An atom expression may be used, in which case its geometric center is used as the reference point. Note that this is in distinction to the use of WITHIN in "isosurface select(within x.xxx, some_atom_expression)", where it indicates that Jmol should select for the isosurface only atoms "within x.xxx Angstroms of ANY atom" of the expression.'
,'load 2by9.pdb;moveto /* time, axisAngle */ 1.0 { -917 -400 -18 106.08} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {23.699003 21.285 22.801003} 29.576609;'
,'isosurface s1 within 10.0 (atomno=185) sasurface'
,'isosurface s1 within 10.0 (atomno=185) sasurface colorscheme rwb color absolute 0 20 map property temperature translucent 0.2'
,'isosurface s2 within 8.0 (atomno=433) sasurface colorscheme rwb color absolute 0 20 map property temperature translucent 0.2'


,'### isosurface MODEL n  ###'
,'# In general, when an isosurface is created you must be displaying the single model to which it is to be associated. Now you can use the MODEL keyword followed by a "file.model" number (1.1, 2.1, etc.) to specify an associated model.'
,'load cyclohexane_movie.xyz'
,'isosurface model 1.2 plane {1 1 1 0};'
,'isosurface model 1.8 plane {1 -1 1 0};'
,'frame 0'
,'frame 1.2'
,'frame 1.8'
,'animation on'

,'### specifying width and height in WRITE ###'
,'# Jmol 11.1.22 allows writing of JPG and other image file formats with new width and height specified. For example, regardless of the size of the application window, <b>write image 800 600 "pic.jpg"</b> creates a JPG file 800 pixels wide by 600 pixels high. Too large a width/height combination may exhaust available memory and lead to program failure.'

,'### load APPEND / data "APPEND" and set appendNew  ###'
,'# Jmol 11.1.22 introduces the capability to load model data either from files or inline without losing the current model. The default is to load the new data into a new model frame, but if <b>appendNew = false</b> is issued first, then the new data (provided it is a single model) is appended to the currently displayed model, creating no new model. This in effect makes loading multiple files all in one command unnecessary (but still possibly convenient). By default, models are loaded into new frames, but this can be changed by setting appendNew=false. In that case, files or data containing single models will be appended to the data in the CURRENT FRAME.'
,'load caffeine.xyz'
,'set appendNew true;load append cyclohexane_movie.xyz'
,'file 1'
,'file 2'
,'model 1.1'
,'model 2.5'
,'load caffeine.xyz;set appendNew false;load append cholesterol.mol'
,'load caffeine.xyz;set appendNew false;data "append"|2|testing|C 2 2 2|O 1 1 1|end "append"'


,'### load =xxxx and set loadFormat  ###'
,'# The Jmol application can read files from any URL. Starting with Jmol 11.1.22, <b>load =xxxx</b> allows quick access to files in a standard directory anywhere on the host computer or the web. Simply supply a formatted string as the loadFormat variable, and you can load files in that directory simply by preceding their name on the load line with an = sign. The default is <b>loadFormat = "http://www.rcsb.org/pdb/files/%FILE.pdb"</b>, so from the application <b>load =1crn</b> loads 1crn.pdb directly from the RCSB web site. On the web, this forms an alternative to <b>defaultDirectory</b>.'
,'loadFormat = "./%FILE.pdb"'
,'load =1crn'
,'load caffeine.xyz'
,'load files "=1crn" "=2by9";frame 0'


,'### load FILES  ###'
,'# A nonsense quoted string is no longer necessary for multiple file loading. Starting with Jmol 11.1.22 you can use the keyword "FILES". File names should still be in quotes.'
,'load FILES "caffeine.xyz" "1crn.pdb";frame 0'


,'### variable translucency ###'
,'# Jmol 11.1.21 introduces variable translucency. <b>color xxxx translucent n</b> where xxxx is some object such as atoms or bonds or cartoons, and n is one of: (a) a decimal from 0.0 (opaque) to 1.0 (transparent), (b) a number 2-9, in increasing steps of translucency, or (c) a number 20-255. On this last scale 20 is opaque and 255 is transparent. Note that "transparent" (1.0 or 8 or 255) is <i>invisible</i> but still counting as "visible" in a select command. Translucency of -1 is the former "screened" translucency of Jmol 10.2.'
,'load caffeine.xyz;isosurface molecular'
,'color isosurface translucent -1'
,'color isosurface translucent 0.0'
,'color isosurface translucent 0.2'
,'color isosurface translucent 0.4'
,'color isosurface translucent 0.6'
,'color isosurface translucent 0.8'
,'color isosurface translucent 1.0'
,'color isosurface translucent 2'
,'color isosurface translucent 3'
,'color isosurface translucent 4'
,'color isosurface translucent 5'
,'color isosurface translucent 6'
,'color isosurface translucent 7'
,'color isosurface translucent 32'
,'color isosurface translucent 64'
,'color isosurface translucent 96'
,'color isosurface translucent 128'
,'color isosurface translucent 192'
,'color isosurface translucent 224'
,'color isosurface translucent 256'

,'### color axis1 and set showAxes true ###'
,'# Jmol 11.1.20 enables differential coloring of axes. In addition, a change relative to Jmol 11.0 is that these colorations persist past file loading -- they are more like background than actual model-associated objects. You can turn axes off and on without clearing their diameter or color using <b>showAxes = TRUE</b> or <b>showAxes = false</b>.'
,'load quartz.cif {1 1 1};rotate x 30'
,'color axis1 purple'
,'color axis2 [xFFFF00];axes 0.1'
,'set showAxes false'
,'set showAxes true'
,'color axis3 [200,100,50]'
,'load caffeine.xyz;axes molecular;axes on'
,'color axes red'


,'### user-defined properties and isosurface VARIABLE x ###'
,'# Jmol 11.1.18/19 introduces user-defined atom properties. The data are first loaded into a variable from a file. Values in the file can be interspersed with text and/or white-space (tabs, space characters, new lines), '
+'in which case only the numbers will be read. The data can be visualized by applying them to an isosurface using <b>isosurface variable x</b>, which maps one value from the file to each atom in the model (starting with the first model atom) '
+'and then displays a van der Waals radius isosurface using those colors. Atomic data may also be assigned to a specific subset of the model\'s atoms using the <b>data</b> command in the form <b>select (some atoms);data "property_myprop @x"</b>. '
+'Quotes and the prefix "property_" are required. "x" may be any previously assigned variable name. Then the command <b>isosurface property_myprop</b> displays color only at the specified atom positions.'

,'load caffeine.xyz'
,'x = "1 3 5 7 9 8 6 4 2 0";'
,'select carbon;data "property_x @x"'
,'print {*}.property_x # average'
,'x5 = {carbon}[5].property_x;print x5 # 5th atom'
,'print {carbon}.property_x.min # minimum value'
,'print {carbon}.property_x.max # maximum value'
,'select {carbon}[5];label @x5;color label black;color label background yellow'
,'select *;dots 0.5;color dots property_x'

,'### isosurface COLORSCHEME bwr ###'
,'# Jmol 11.1.18 adds "bwr" to the list of colorschemes. It is simply blue-white-red, the reverse of rwb. Merely for convenience.'
,'load 1crn.pdb;isosurface sasurface 1.2 map colorscheme rwb property temperature'
,'load 1crn.pdb;isosurface sasurface 1.2 map colorscheme bwr property temperature'


,'### isosurface mapping of atomic properties ###'
,'# Jmol 11.1.18 introduces the capability to map any standard atom property (temperature, surfacedistance, atomno, elemno, charge, etc.) onto an isosurface.'
,'load 1crn.pdb'
,'isosurface sasurface 1.2 map colorscheme rwb property temperature translucent 0.5'

,'### support for APBS multigrid output files ###'
,'# Jmol 11.1.18 adds support for <a href="http://apbs.sourceforge.net">Adaptive Poisson-Boltzmann Solver</a> "multigrid-dx" files for creating electrostatic potential maps of biomolecules. The files are used just like CUBE files, after the MAP parameter. These files are VERY large (> 10 Mb). Shown here is a JVXL equivalent created using the command <b><isosurface s1 sasurface color absolute -5 5 map "1dry-mep.dx";write isosurface "1dry-mep.jvxl"</b>. The original DX file was 12.9 Mb (mapping data only, without the isosurface); the JVXL file is 65 K, including both isosurface and mapping data - a compression ratio of roughly 200:1 over the DX file and 400:1 overall. An extra keyword has been added to the JVXL format as part of this feature. Normally JVXL files are in BOHR -- same as CUBE files; however if the keyword ANGSTROMS appears on line three, then all units are assumed to be in Angstrom, not Bohr.'
,'load 1dry.pdb'
,'isosurface s1 "1dry-mep.jvxl"'
,'isosurface s1 colorscheme bwr "1dry-mep.jvxl"'


,'### min/max modifier for properties ###'
,'# Jmol 11.1.15/16 adds min and max. '
,'load caffeine.xyz'
,'print {*}.bonds.length.max  #the longest bond length'
,'print {*}.atoms.max.xyz         #the coordinates of the last atom'
,'y = {*}.atoms.max.xyz + {-1 -1 0};print y;draw @y "this is the last atom"'
,'y = {*}.atoms.max.xyz + 0.5;set echo lastAtom @y; echo "this is the last atom"'

,'### new Jmol.js "jmolEvaluate()" function ###'
,'# Since Jmol 11.1.14 now allows "molecular math" to be carried out, it seems a natural extension to introduce a JavaScript function that returns a number or string as appropriate. The code behind the first is simply: <br/><br/>JavaScript:alert(jmolEvaluate(prompt(\'enter molecular math\',\'{oxygen} + {carbon}\')))<br /><br />'
,'load caffeine.xyz'
,'<a href="JavaScript:alert(jmolEvaluate(prompt(\'enter molecular math\',\'{oxygen} + {carbon}\')))">evaluate molecular math</a>'
,'<a href="JavaScript:alert(jmolEvaluate(prompt(\'enter molecular math\',\'(2.0 * {carbon}  + 2 + {nitrogen} - {hydrogen})/2\')))">degree of unsaturation</a>'
,'<a href="JavaScript:alert(jmolEvaluate(prompt(\'enter molecular math\',\'&quot;The number of methyl groups is &quot; + {carbon and connected(3,hydrogen)}.size\')))">number of methyl groups</a>'
,'<a href="JavaScript:alert(jmolEvaluate(prompt(\'enter molecular math\',\'{carbon}.xyz\')))">average carbon position</a>'
,'<a href="JavaScript:alert(jmolEvaluate(prompt(\'enter molecular math\',\'({oxygen}.xyz).distance({carbon}.xyz)\')))">distance from average oxygen position to average carbon position</a>'
,'draw line1 (oxygen) (carbon)'
,'<a href="JavaScript:jmolScriptWait(\'select (carbon)[3]; color yellow;\');alert(jmolEvaluate(prompt(\'enter molecular math\',\'{carbon}[3].ident\')))">identity of the third carbon</a>'
,'<a href="JavaScript:jmolScriptWait(\'set bondmode or\');alert(jmolEvaluate(prompt(\'enter molecular math\',\'{carbon}[3].bonds.ident\')))">list bonds to the third carbon</a>'


,'### new {atom expression}.label "xxxx" for SET ###'
,'# Jmol 11.1.14 now allows customized output of atom data. Click on the next line, then select some atoms, then click on that last line.'
,'load caffeine.xyz;set picking select;selectionHalos on'
,'# now deselect some atoms'
,'set picking ident;getProperty "evaluate" "\\"\\n\\"+{selected}.size+\\"\\n\\n\\"+ {selected}.label(\\"%a %x %y %z\\")"'
,'<a href="javascript:alert(getXYZ())">using JavaScript and an alert</a>'
,'<a href="javascript:getXYZ2()">or XYZ data to a new window</a>'
,'<a href="javascript:getMOL()">or MOL data to a new window</a>'
,'<a href="javascript:getPDB()">or PDB data to a new window</a>'

,'### new {atom expression}.distance({atom expression}) and set dynamicMeasurements ###'
,'# Jmol 11.1.14 adds a new atom property, "distance" for IF and SET commands. Since we can now move atoms relative to others it may be important to have measures automatically updating as well. '
,'load "files" "cholesterol.mol" "cholesterol.mol";moveto /* time, axisAngle */ 1.0 { -995 -57 -81 63.0} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {1.5921419 5.311639 3.3426435} 14.3;'
,'select file=1;translateSelected {0 5 5};file 0;center visible;'
,'select file=1;invertSelected POINT (*/1.1);rotateSelected x 180;rotateSelected y 180'
,'rotateSelected spin internal X 10'
,'set allowRotateSelected true;set dynamicMeasurements;set measure angstroms; measure (oxygen/1) (oxygen/2)'
,'spin off'
,'set echo top left;set picking select;selectionhalos on;select oxygen'
,'echo the average distance in Angstroms from |the atoms selected|in one model to the other|is %{{selected and */1.1}.distance({selected and */2.1})} Angstroms.'
,'font echo 12'
,'# go ahead and manipulate the models while they turn. Make more measurements if you like. Press the ALT key to rotate just the top model.'


,'### new {atom expression}.atomProperty ###'
,'# Jmol 11.1.14 introduces the capability to probe a model for information in a very simple way. Just add "." and an atom property after the braces. '
,'load cholesterol.mol;moveto /* time, axisAngle */ 1.0 { -894 446 46 44.7} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {-0.79554987 2.6462 0.8125} 10.3;'
,'set echo top left;set picking select;selectionhalos on;select none'
,'echo the average coordinate of the selected atoms is | {%{{selected}.x},%{{selected}.y},%{{selected}.z}};font echo 12;select oxygen'

,'### new %{{atom expression}} variable data into MESSAGE and ECHO text ###'
,'Jmol 11.1.14 introduces the capability to insert data dynamically into message and echo text. '
,'load cholesterol.mol;moveto /* time, axisAngle */ 1.0 { -894 446 46 44.7} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {-0.79554987 2.6462 0.8125} 10.3;'
,'set echo top left;set picking select;selectionhalos on;select none'
,'echo You have selected  %{{carbon and selected}.size} carbon atoms.'

,'###  {atom expression} in IF and SET ###'
,'Jmol 11.1.14 IF and SET statements can use braces to mean "the number of atoms" matching an atom expression. Note the use of braces, not parentheses here. '
,'load cholesterol.mol;moveto /* time, axisAngle */ 1.0 { -894 446 46 44.7} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {-0.79554987 2.6462 0.8125} 10.3;'
,'nOxygen = {oxygen}.size;nHydrogen = {hydrogen}.size;nCarbon = {carbon}.size; print ": O" + nOxygen + " H" + nHydrogen + " C" + nCarbon'
,'nC2 = nCarbon * 2;print nC2'
,'nHsat = nC2 + 2;print nHsat'
,'diff = nHsat - nHydrogen;print diff'
,'deg = diff / 2;print deg'
,'# Alternatively, you can do these all together:'
,'deg = (2.0 * {carbon}  + 2 - {hydrogen}) / 2;print deg'

,'set echo top left;echo Degree of Unsaturation = %{deg}'

,'### new "invertSelected" command ###'
,'# Jmol 11.1.13 introduces the capability to invert atom positions across a plane or through a point. These position changes are recorded in the state via a new DATA "coord" type.'
,'load cholesterol.mol;moveto /* time, axisAngle */ 1.0 { -957 289 -16 72.1} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {-0.79554987 2.6462 0.8125} 10.3;'
,'invertSelected POINT (*)'
,'invertSelected'
,'invertSelected POINT (C5)'
,'invertSelected POINT (C5)'
,'select connected(C5) and not carbon;'
,'select selected or connected(selected) and not C5;'
,'invertSelected PLANE (c4) (c5) (c6)'
,'invertSelected PLANE (c4) (c5) (c6)'
,'# Voile -- instant epimerization -- sure beats diethylazodicarboxylate!'

,'### new "rotateSelected" command ###'
,'# Jmol 11.1.13 introduces the capability to rotate only SELECTED molecules.'
,'load "files" "cholesterol.mol" "cholesterol.mol";moveto /* time, axisAngle */ 1.0 { -995 -57 -81 63.0} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {1.5921419 5.311639 3.3426435} 14.3;'
,'select file=1;translateSelected {0 5 5};file 0;center visible;'
,'select file=1;invertSelected POINT (*/1)'
,'select file=1;rotateSelected x 180;'
,'select file=1;rotateSelected y 180;'
,'select file=1;rotateSelected spin internal X 10'
,'set allowRotateSelected true'
,'# go ahead and manipulate the models while they turn. Press the ALT key to rotate just the top model.'

,'### new "write coords" command ###'
,'# The Jmol 11.1.13 application (not applet) allows you to write the (selected) atom coordinates to a script file.'
,'load cholesterol.mol'
,'invertselected'
,'write coord myfile.spt'


,'### new "file" command ###'
,'# Jmol 11.1.12 introduces the "file" command for use when multiple files are loaded. <b>file n</b>, where n is an integer, makes all models contained in the nth file loaded displayable, resets the animation range to that set of models and, if all atoms are in the display set (<b>display *</b>), displays all atoms in that set of models. It is equivalent to <b>frames n</b> in a multifile context or <b>frames ALL</b> in a single-file/multi-model context.'
,'load "files" "cyclohexane_movie.xyz" "caffeine.xyz"'
,'file 1'
,'file 2'
,'file 0'

,'### new select file= option ###'
,'# Jmol 11.1.12 allows quick selection of all atoms in all models from a specific file in a multi-file context.'
,'load "files" "cyclohexane_movie.xyz" "caffeine.xyz"'
,'file 0'
,'select file=1;color yellow'
,'select file=2;spacefill off'
,'display file=1'
,'display file=2'
,'file 0;select file=2;translateselected {0 3 3};display file=2 or model=1.7'
,'script selectfile.spt'

,'### variables allowed in Jmol commands ###'
,'# Jmol 11.1.12 introduces a whole new concept in variables. Once a variable is assigned a value, you can use it in ANY Jmol command by prepending an @ sign to it. This allows, for example, variable spacefill or file names or basically anything. You do have to stay away from special names for variables such as "radius" -- pick names that you know will be unique.'
,'load gold.cif {5 5 5};'
,'auRadius = 0.4'
,'spacefill @auRadius; auRadius = auRadius * 1.5'
,'#now click on the above link a few times'
,'script gold.spt # some nice effects are now easily scripted'
,'# this is a VERY simple script file <a href=data/gold.spt>gold.spt</a>'

,'### /** **/ super-comments ###'
,'# There are occasions when one would like to comment out comments. Jmol 11.1.12 detects /** ... **/ as super-comments -- comments that can envelope /*... */ comments. These comments can be used to temporarily comment out blocks of script that already have /*...*/ comments present.'

,'### set showScript ###'
,'# Jmol 11.1.9 introduces <b>set showScript</b>, a simple way to display the contents of a script file while it is running. The format is "[scriptLevel.lineNumber.commandNumber]". You can slow down the script by a specified number of milliseconds per command if you wish. After running the script, use the <a href=javascript:showmsgbox()>popup</a> window to see what transpired.'
,'set showScript on'
,'script testscript.spt'
,'set showScript off'
,'set showScript 1000'
,'script testscript.spt'
,'set showScript off'

,'### new script command options ###'
,'# Jmol 11.1.9 introduces three new script options: CHECK, LINE n, and COMMAND n. The first just checks the script, including file loading. The other two options allow for starting the script at different points.'
,'script testscript.spt CHECK'
,'set showScript on'
,'script testscript.spt LINE 3'
,'script testscript.spt COMMAND 3'
,'set showScript off'



,'### new goto command ###'
,'# Jmol 11.1.9 introduces the GOTO command. The label to goto is specified using a MESSAGE command. If the label starts with underscore, _xxxx, then the jump is silent, otherwise the message text is displayed. Check out <a href=data/testscript2.spt>testcript2.spt</a>.'
,'set showScript on'
,'script testscript2.spt'
,'set showScript off'


,'### new file.model notation ###'
,'# Jmol 11.1.9 introduces a simple way of addressing specific models in specific files when multiple files are loaded: <b>file.model</b>. If the model is "0", then all models for that file are selected.'
,'load "files" "caffeine.xyz" "cyclohexane_movie.xyz"'
,'frame all'
,'display 1.1'
,'display 2.1,2.7'
,'select 2.1,2.10;color yellow'
,'select C1*/2.0;color green # all C-1 carbons in all models in the cyclohexane movie'
,'frame range 2.1 2.10;display *'
,'animation play'
,'animation rewind'



,'### select connected() with bond type option ###'
,'# Jmol 11.1.8 introduces the capability to select for specific types of connections.'
,'load caffeine.xyz;connect (_C) (_O) double modify;select none;selectionHalos on'
,'select connected(double)'
,'select connected(double, carbon)'
,'select connected(0,single)'
,'select connected(2,3,single)'

,'### connect with radius/color options ###'
,'# Jmol 11.1.8 introduces the capability to specify radius and color/translucency when make new and modify old connections (bonds).'
,'load caffeine.xyz'
,'connect 1.405 1.425 (_C) (_N) red'
,'connect (_C) (_H) radius 0.05'
,'connect 1.5 2.5 (_H) (_O) hbond radius 0.1 translucent yellow create'

,'### internal slabbing ###<br><img src=img/slab.jpg width=100 height=100>'
,'# Jmol 11.1.5 introduces the capability to slab "internally" -- that is based on model coordinates (so that the user can see the slabbed model from different perspectives). Both slab and depth are supported.'
,'load 1crn.pdb;cartoon on;isosurface sasurface'
,'slab plane x=10;slab on;moveto /* time, axisAngle */ 1.0 { 28 -880 474 56.2} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {9.268828 9.787275 6.9670877} 17.6;'
,'slab off'
,'# In this next example, we load a crystal, define two planes using isosurface, and use those planes to define the slabbing surfaces'
,'load quartz.cif {2 2 2};moveto /* time, axisAngle */ 1.0 { -997 -20 -72 30.0} /* zoom, translation */  100.0 0.0 0.0  /* center, rotationRadius */ {2.5324771 4.257381 5.4054003} 10.7;slab on;'
,'isosurface p1 hkl {1/2 1/2 1/2};isosurface p2 hkl {1/4 1/4 1/4};'
,'isosurface;isosurface off'
,'depth plane $p1;'
,'slab plane $p2;'
,'select not clickable;color translucent yellow;'
,'slab off'
,'# direct use of Miller planes in slab or depth:'
,'depth plane none;slab hkl {1/3 1/3 1/3};slab on'
,'slab plane none;depth hkl {1/2 1/2 1/2};slab on'
,'# all the slabbing is embedded in the cIF file on this one:'
,'load quartz-slab.cif'



,'### navigation ###'
,'# Starting with Jmol 11.1.5 you can use the arrow keys to "navigate" through a model. The idea is to be able to drive a navigation point around/through a model. See <a href=../misc/navigation.pdf>navigation.pdf</a> for details regarding the new Jmol 11 perspective/navigation model.'
,'load 1crn.pdb;select *;cartoon on;color group;'
,'set navigationMode; # Automatically loads perspective model 11, which included navigation. Now use the arrow keys'
,'navigate 3 depth 50;'
,'navigate 3 center (*);'
,'navigate 2 trace (*);'
,'set navigationMode off'

,'### show set ###'
,'# Jmol 11.1.1 allows you to get a list of all settings using <b>show set</b>.'
,'show set'

,'### write MO filename; write ISOSURFACE filename ###'
,'# Jmol 11.1.0 allows writing of JVXL files directly from scripts in the Jmol application (not the applet). This allows, among other things, for fully automated no-display creation of JVXL files using, for example: <b>Jmol.jar -ions t.spt</b> where t.spt includes something such as "load file.smol; mo 37; write mo mo37.jvxl".'

,'### set measures au ###'
,'# Jmol 10.9.106 adds option for displaying measurements in atomic units (Bohr)'

,'### set scriptDelay n ###'
,'# Jmol 10.9.104 introduces <b>set scriptDelay n</b> where n is a number of seconds to delay prior to execution of each script command. This is primarily for debugging/demo purposes.'

,'### show [parameter name] ###'
,'# Jmol 10.9.104 allows "showing" of most parameters that have been "set".'
,'show defaultDirectory'
,'set debugscript true;show debugscript;set debugscript false'
,'set myvariable true;show myvariable'
	

,'### initialize ###'
,'# Jmol 10.9.103 introduces <b>initialize</b>, which resets all parameters to default values and clears the model using <b>zap</b>.'


,'###jmolLoadInline([line1, line2, ....]) for array data types###'
,'# Jmol 10.9.103 introduces the capability to load inline an array of data rather than a long string. Basically, an array of lines can now replace a single string. Because this form involves no new-line characters, it is distinguishable within Jmol from the syntactically identical function that loads multiple models.(<a href=#topic107>topic 107</a>) <b>and for more recent modifications to this functionality Jmol 11.4 <a href=new.htm#topic69>topic 69</a></b>'
,'<a href="javascript:testLoadInlineArray(\'wireframe on\')">test jmolLoadInline([line1,line2,line3...],\'wireframe on\')</a>'




,'### set dataSeparator ###'
,'# Jmol 10.9.99 introduces the capability to load multiple models of multiple types using the data command. Simply define a separator and then use that separator between models.'
,'set dataSeparator "~~~";data "model test"|2|test|C 0 0 1|N 0 1 0|~~~2|test2|Al 0 0 3|Fe 0 4 0|end "model test";moveto 1.0 { -32 -999 23 82.0} 100.0 0.0 0.0 {0.0 2.0 1.5} 4.6;frame 0;labels on'
,'frame 1001'
,'frame 2001'
,'frame 0'
,'save state A'
,'show state A'
,'zap'
,'restore state A'

,'### show/save/restore state ###'
,'# Jmol 10.9.98/99 introduce a FULL implementation of the capability to create a "serialized snapshot" of the state of the applet or application. This snapshot is in the form of a set of <a target=_blank href=../misc/state.txt>Jmol script commands</a>. These commands reproduce the exact state of Jmol in existence when they were generated. Implemented in 10.9.98: atoms, bonds, labels, echos, cartoons, draw, halos, meshRibbons, ribbons, rockets, stars, strands, trace, nondefault settings, orientation, spinning, zoom; 10.9.99 adds all remaining shapes (dipoles, dots, geosurface, isosurfaces, lcaoCartoons, molecular orbitals, and vectors), vibration, and animation.'
,'# run (just about) any command on this page, save the state, run some totally different commands, then restore the state. Note that isosurfaces will not be reproduced'
,'console; show state'
,'save state A'
,'save state B'
,'# pick one of the above, do anything on this page, then click the respective restore command, below.'
,'console; show state A'
,'console; show state B'
,'zap;set echo top left;echo now go load some other model,|then come back here and|click on "restore state A"'
,'restore state A'
,'restore state B'

,'###set labelPointer ###'

,'# Jmol 10.9.98 allows for atom-specific "label pointers" -- lines that connect labels to their respective atoms. These lines are color-keyed either to the text color (set labelPointer on) or the background color, if a background is shown (set labelPointer background).'
,'load caffeine.xyz;select _O;set labelOffset 20 10;labels on'
,'set labelpointer on;'
,'background labels yellow'
,'set labelpointer background;'
,'background labels none'


,'###new command: subset###'
,'# Jmol 10.9.97 introduces a new command, <b>subset</b>, which defines a set of atoms. <b>subset</b> limits all further atom expressions in ANY command to act only within this subset. It does not actually select anything by itself, however. In action, it appends "AND subset" to whatever is being indicated in any command that uses atom expressions (measure, for example). So, for example,'
,'load 1myg.cif;color chain'
,'subset *:B;select *;cartoons on;subset all'
,'# By itself, this may not seem that useful, because you could just select that set anyway. In some ways it is just a convenience, allowing the command set to be applied to different subsets. Select one of the following subsets, then apply one of the restrict commands'
,'subset *:A'
,'subset *:B'
,'restrict none;select *;cartoons on;'
,'restrict none;select *;trace on;'
,'# Note that since all user-clicks and menu action works though the command processor, setting a subset also affects user action. For example, subset provides a way of making sure that anything done by the user (via the menu) or subsequent button pushes operates only within a certain set:'
,'subset *:A   # now click on or off chain A.'
,'# back to normal operation:'
,'subset all'
,'# Thus, <b>subset</b> can also be used to restrict user clicking and measuring to a certain set.'


,'###set sheetSmoothing [0 to 1] ###'
,' Jmol 10.9.95 adds <b>set sheetSmoothing</b>. In conjunction with <b>set TraceAlpha</b>, a value of 1 here tells Jmol to use midpoints (like Rasmol) rather than alpha carbons for the sheet segments only. Default in 10.9.96 is set to <b>set traceAlpha on; set sheetSmoothing 1;'
,'load 1crn.pdb;restrict none;select *.CA;spacefill 0.3; select *;cartoons on;color structure;moveto 1.0 { -777 -626 -64 44.0} {10.5935 10.2105 6.079} 17.4;'
,'set traceAlpha on;set sheetSmoothing 0 # more wavy sheets'
,'set traceAlpha on;set sheetSmoothing 1 # less wavy sheets'
,'set traceAlpha off # through midpoints; no sheet smoothing;tighter helixes'
,'set traceAlpha on # the default'


,'###set hermiteLevel and smoother cartoons; set highResolution ###'
,'# Jmol 10.9.93/94/95 introduce a more sophisticated look for cartoons and other secondary structure depictions. The smoothness level of the Hermite curves can be increased or decreased using <b>set hermiteLevel n</b> where n is -8 to 8. The default is 0 (10.9.96) giving 10.2-like flat ribbons and rough rope-like traces. A value of 4 or -4 might be a good starting choice. Positive values revert to 0 when the model is in motion; negative values continue the smoother rendition even when the model is being manipulated. A word of caution: Setting the hermite level to -8 can significantly slow processing during moveTo commands. Higher positive or negative numbers may result in out-of-memory conditions for very large models. Generally Jmol will not use a mesh if the screen size of the object is relatively small. You can force Jmol to use mesh-based rendering even when the structures are small with <b>set highResolution</b>. '
,'load 1crn.pdb;restrict none;select *;cartoons on;color structure;moveto 1.0 { 140 -957 -255 50.6} 277.4 {10.5935 10.2105 6.079}  17.4;'
,'set hermitelevel 1'
,'set hermitelevel 2'
,'set hermitelevel 3'
,'set hermitelevel 4 # rotate the model to see how this looks.'
,'set hermitelevel 5'
,'set hermitelevel 6'
,'set hermitelevel 7'
,'set hermitelevel 8'
,'set hermitelevel -4 # now rotate -- the smoothness stays' 
,'load 1crn.pdb;restrict none;select *;cartoons on;color structure;moveto 1.0 { -777 -626 -64 44.0} {10.5935 10.2105 6.079}  17.4;'
,'set highResolution'
,'set highResolution off'
,'load 1mbo.cif;restrict none;select *;cartoons on;color structure;select HEM;wireframe 0.1;color cpk;set hermitelevel 4;moveto 1.0 { 422 126 898 117.4} 192.2 {15.027501 19.463001 6.660001}  35.7;'
,'set hermitelevel 0'
,'set hermitelevel 4'

,'###set ribbonAspectRatio n and set traceAlpha###'
,'# Jmol 10.9.92 introduces <b>set ribbonAspectRatio</b> for adjusting the thickness of the ribbons in both cartoons and ribbons. 0 turns this feature off; 8 to 20 probably advisable. Higher numbers lead to thinner ribbons. The <b>set traceAlpha</b> option directs Jmol to create a trace (which is also the basis for ribbons, strands, and cartoons) directly through the alpha carbons rather than through their adjacent midpoints.'
,'load 1crn.pdb;restrict none;select *;cartoons on;color structure;set hermiteLevel -4'
,'set ribbonAspectRatio 8'
,'set ribbonAspectRatio 16'
,'set traceAlpha #default'
,'set traceAlpha off'
,'set ribbonAspectRatio 0'
,'cartoons off;ribbons on;'
,'set ribbonAspectRatio 8'
,'set ribbonAspectRatio 16'

,'###atom names for all files###'
,'# Previously, only a few file types included atom names. Now all atoms from any file type are assigned an atom name (which appears upon hovering on an atom and also in the atom label and in message and pick callbacks). Atoms can now be selected based on this atom name.'
,'load caffeine.xyz;selectionhalos on;select *;labels on;background labels yellow;set labeloffset 15 5;set labelfront;labels off;select none'
,'select *;labels off;select C13;labels on'
,'select *;labels off;select C*;labels on'
,'select *;labels off;select C?;labels on'

,'###group/atom name wildcard *###'
,'# The common wildcard asterisk * can now be used in PDB group names and NON-PDB atom names. (Not PDB atom names, because some PDB atom names include "*", such as "O5*" in DNA.'
,'load 1crn.pdb;selectionhalos on;select none'
,'select AL*'
,'select [AS*]'
,'load caffeine.xyz'
,'selectionhalos on;select none'
,'select C3'
,'draw line1 (C3) (C6)'
,'draw plane1 plane perp (C3) (C6)'
,'draw plane2 250 plane (N2) (N4) (N8); color $plane2 translucent red'


,'###jmolLoadInline([model1, model2, model3,...]) for multiple file types###'
,'# Jmol 10.9.86 introduces the capability to load inline multiple files of different type. Basically, an array of model strings can now replace the single model string in <a href=javascript:alert(jmolLoadInline)>jmolLoadInline()</a> and <a href=javascript:alert(jmolLoadInlineScript)>jmolLoadInlineScript()</a>. See also <a href=#topic117>topic 117</a> <b>and for more recent modifications to this functionality Jmol 11.4 <a href=new.htm#topic68>topic 68</a></b>.'
,'<a href="javascript:testLoadInlineScript()">test jmolLoadInline()</a>'
,'frame 0'
,'<a href="javascript:testLoadInlineScript(\'set echo top left; frame 0;echo three models were loaded\')">test jmolLoadInlineScript()</a>'


,'###nearly infinite zoom###'

,'# Jmol 10.9.86 introduces a subtle change in zoom properties at very high magnification. This allows nearly infinite zoom (up to 200000%).'
,'load 1JGQ.pdb;restrict none;select *;cartoons on'
,'moveto 1.0 { 126 -986 109 76.4} 3048.5 {-9.250999 93.968506 300.17548}  133.8;'
,'moveto 1.0 { 126 -986 109 76.4} 30480 {-9.250999 93.968506 300.17548}  133.8;'
,'moveto 1.0 { 126 -986 109 76.4} 10000 {-9.250999 93.968506 300.17548}  133.8;'


,'###3D echo###'
,'# Jmol 10.9.85 introduces a simple idea: allow echos to be anywhere is model space, not just on the surface of the window. It is as simple as indicating a coordinate or an atom expression.'
,'load caffeine.xyz'
,'set echo myecho {1/1 1/1 1/1};echo (1 1 1)'
,'# note: Starting with Jmol 11.1 you MUST use braces around the atom expression in the set echo command.'
,'set echo myecho {atomno=10 or atomno=8};echo x'


,'###set zoomLarge###'
,'# Jmol 10.9.85 allows for adjusting the zoom either by the smaller dimension of height and width (set zoomLarge false) or the larger one (set zoomLarge true, the default).'
,'# You will not see an effect here, because this window is square.'

,'###zoomTo and augmented zoom###'
,'# Jmol 10.9.79 adds <b>zoomTo</b> -- a smooth and versatile version of zoom, along with similar new capabilities for <b>zoom</b> itself.'
,'load 1mbo.cif;restrict not protein and not solvent;select protein;cartoon on'
,'select (HEM);color yellow; zoomTo (selected) *3' 
,'moveto 1.0 { 497 381 780 146.4} 700.0 {15.948377 28.639738 0.4097555}  35.7;'
,'zoomTo /2'
,'# Click the next link, then start clicking on atoms. Be sure to click OFF the structure as well as on the same atom twice to see what that does.'
,'set picking center'
,'set windowCentered false  # try this, too'

,'###if;else;endif###'
,'# Jmol 10.9.79 adds rudimentary if;else;endif capability using the "set" options. Click this next link twice. IF commands can be nested up to 10 deep. The syntax is minimal; only one test is allowed, optionally preceded by NOT, as in "if (NOT showBoundBox);...;endif;"'
,'if (showBoundBox); set showBoundBox off;set showUnitCell;else;set showUnitCell off;set showBoundBox;endif;'

,'###special frank-based pop-up menu###'
,'# Jmol 10.9.79 adds a new pop-up menu that is accessed by clicking on the Jmol frank. This menu is a quick route to any submenu that you have recently accessed. Try coloring something using the pop-up menu. Now color it another color. Notice how long it take to find the right menu the second time. Now click on the frank and see that your menu is just a mouse jiggle away.'


,'###redesigned pop-up menu###'
,'# Jmol 10.9.79 adds a much more dynamic and useful pop-up menu. Take a look around with this variety of files.'
,'load 1cdr.pdb # carbohydrate'
,'load 114d.cif; # DNA'
,'load quartz.cif {1 1 1} #symmetry'
,'load 04369a.cif {1 1 1};display molecule=1 or molecule=3;color altloc #configuration'

,'### select n - ###'
,'# Jmol 10.9.79 adds open-ended PDB residue selecting.'
,'load 1crn.pdb;restrict none;select *;cartoons on;select 5-;color yellow;moveto 1.0 -119 993 -3 64.3;'
,'select 10-;color red'
,'select 15-;color white'

,'### Chem3D reader ###'
,'# Jmol 10.9.77 adds a c3xml file reader.'
,'load benzene.c3xml;mo 1 ;moveto 1.0 212 -928 -306 128.7;'
,'load benzene.c3xml;isosurface molecular color absolute -0.01 0.01 map MEP;moveto 1.0 212 -928 -306 128.7;'

,'load ethanol.c3xml;isosurface molecular map MEP translucent'


,'### load {ijk i\'j\'k\' 1|0} ###'
,'# Jmol 10.9.77 adds the capability to load a wider range of unit cell blocks. The range should include 555 (the base unit cell). The third parameter, 0 or 1, indicates whether(1) or not(0) to "normalize" the symmetry operations by moving the geometric center of the generated set of atoms back into unit cell 555.'
,'load quartz.cif {444 666 1} # 27 cells'
,'load quartz.cif {555 555 1} # just one cell'
,'load quartz.cif {555 555 0} # just one cell; # without normalizing'

,'### hide/display ###'
,'# Jmol 10.9.76 adds two new commands, <b>hide</b> and <b>display</b>, and two new selectable terms, <b>hidden</b> and <b>displayed</b>. They are exact opposites of each other, provided for convenience only. <b>display</b> is similar to <b>restrict</b> except it is fully reversible. Like <b>restrict</b>, <b>display</b> hides unselected atoms, but unlike <b>restrict</b>, you can <b>display all</b> later and see everything come back as it was before.'
,'load 1mbo.cif;display HEM;center (displayed);moveto 1.0 -772 -621 -135 158.1 309;select none;set labelpointer on'
,'display within(group, within(3.0, hem));select displayed and *.ca;label %n %r;color labels yellow'
,'select within(group, within(4.0, hem)) and not displayed and *.ca;label %n %r;color labels red;display within(group, within(4.0, hem));'
,'display within(group, within(3.0, hem));'
,'load quartz.cif {444 676 1};display cell=555 or cell=565;polyhedra 4 collapsed yellow;center displayed;moveto 1.0 -200 863 -464 45.0 252;spin y 10'

,'###surfaces from the pop-up menu###'
,'# Jmol 10.9.72 adds a "surface" pop-up menu item.'

,'###select clickable -- oblique slabbing ###'
,'# Jmol 10.9.71 allows you to select the currently clickable atoms. In conjunction with slabbing, this means that you can now select for just those atoms that are within the depth/slab range. A later <b>slab off; restrict selected</b> now allows you to manipulate the model <i>with that particular slab maintained</i>. Be sure to do a <b>refresh</b> just before selecting.'
,'load 2ptn.cif;delay 2;slab 35;slab on;refresh;select not clickable;spacefill off;color translucent grey;slab off;delay 2;moveto 3.0 -976 76 204 77.4 100; # cool, eh?'

,'###slices through a molecular surface and new way to define plane <br><img src=img/molslice.jpg width=100 height=100 />###'
,'# Jmol uses a unique algorithm to calculate surfaces. Each position in space is given a value that is its distance from the nearest surface point. What this means is that a "surface" is really an "isosurface with cutoff 0". And what that means is that a surface is no different in terms of visualization from a molecular orbital or other atom-based spacial property. Jmol 10.9.71 allows you to generate slices through a surface.'
,'load 2ptn.cif;slab 35;slab on;refresh;restrict clickable;slab off;center visible;moveto 1.0 -976 76 204 77.4 213;isosurface "2ptn-molecular_slice1.jvxl";moveto 3.0 -308 401 863 108.1 213;'
,'# generated from the following command (which takes several seconds on my machine). Note the new way to define a plane simply in terms of three points -- (atom)s or {coordinate}s'
,'load 2ptn.cif;isosurface plane {1 0 10} {0 1 10} {1 1 10} solvent'
,'# and, yes, of course, with JVXL you can show as many planes as you like:'
,'load 2ptn.cif;isosurface "2ptn-molecular_slice2.jvxl";moveto 1.0 -976 76 204 77.4 100;isosurface "2ptn-molecular_slice3.jvxl"'


,'###isosurface hkl -- planar slices using <a href=http://www.chem.qmul.ac.uk/surfaces/scc/scat1_1b.htm>Miller indices</a><br><img src=img/xtalslice.jpg width=100 height=100 />###'
,'# Jmol 10.9.72 introduces the "hkl" keyword indicates that the next three numbers in braces are Miller indices. Note that all coordinates are implicitly fractional. A faster alternative is to use "solvent 0" instead of "molecular".'
,'load nacl.cif {2 2 2};axes 0.2;boundbox on;moveto 1.0 -402 -582 -706 127;delay 1;restrict none;'
,'select *;isosurface delete hkl {1 1 1} resolution 4 solvent 0;'
,'select *;isosurface delete hkl {1/2 1/2 1/2} resolution 4 solvent 0;'
,'select *;isosurface delete hkl {1 1 0} resolution 4 solvent 0;'
,'select *;isosurface delete hkl {1 0 1} resolution 4 solvent 0;'
,'select *;isosurface delete hkl {1 0 0} resolution 4 solvent 0;'

,'###select symop=nijk ###'
,'# Jmol 10.9.71/79 allows you to select the exact lattice translation for a given symmetry operation. The reference point is the untransformed, untranslated file atoms - Jones-Faithful x,y,z - which are always designated n555.'
,'load maleic.cif 7 {2 1 1};moveto 1.0 -995 89 43 71.8;selectionHalos on;select none;'
,'select symop=1'
,'select symop=2'
,'select symop=3'
,'# The extension to lattice translations is to move the symmetry operation number over three digits and add the selected translation ijk:'
,'select symop=1555'
,'select symop=1655'
,'select symop=2555'
,'select symop=2655'
,'select symop=3555'
,'select symop=3655'
,'select symop=4555'
,'select symop=4655'
,'# Note that you can use other comparisons -- !=, &lt;, >, &lt;=, and >=. If you use any of these comparisons with a simple symmetry operation, the usual comparison will be returned. If you use this new nijk syntax, then the atom must match the given symmetry operation; the comparison is ONLY for the ijk part.' 
,'select symop>1555'
,'# Note that the following two are not the same:' 
,'select symop!=2555'
,'select not symop=2555'



,'###faster solvent/molecular surfaces and isosurface colorscheme "sets" <br><img src=img/2ptn.jpg width=114 height=100>###'
,'# Jmol 10.9.71 has significantly more capability in the area of solvent/molecular surface visualization.'
,'load 2ptn.cif;moveto 1.0 245 959 140 66.2;'
,'isosurface sasurface'
,'# this next one takes some time'
,'isosurface delete;slab 60;restrict none;select *;set echo top left;echo "standby...";refresh;isosurface solvent colorscheme "sets"; echo;delay 2;slab 60; slab on;'
,'slab off;'

,'### better pre-load/zap behavior ###'
,'# Jmol 10.9.68 lets you do quite a bit with no model. Echo, draw, isosurface, pmesh, dipole, rotate, spin, zoom -- all these are operational before ever loading a model and also after zap. Maybe there IS a use for zap!'
,'zap;delay 2;set echo myecho 50% 50%;set echo myecho center;echo You sure couldn\'t|do this|before in Jmol,|could you?;delay 2;draw plane1 {-5 -5 -5} {-5 0 -2} {0 -4 -1};delay 2;rotate on'

,'###pause/resume###'
,'# With Jmol 10.9.68 you can now pause and resume scripts.'
,'background yellow;delay 1;background white;loop'
,'pause'
,'resume'
,'quit'
,'# Either pause a running script externally, as above, or place pause in the script so the user can resume on their own.'
,'background blue;pause;background black;'
,'resume'

,'###clipboard paste capability###'
,'# Jmol 10.9.68 adds the capability to read the system clipboard in the application with a new Edit...Paste menu item. For the applet, that is not possible without signing, so instead open a console, paste your clipped data into the lower (input) box, and press <b>Load</b>.'
,'console on # now add your data and press Load'


,'###command history###'
,'# Jmol 10.9.67 introduces command history recording. Do any of the commands below, then come back here and click on:'
,'console on;show history'
,'set history 10 # set the history to only 10 lines, not the default 100'
,'history off; # turn history recording off, perhaps at the beginning of a script file'
,'history on; # turn history recording back on'


,'### more isotope support ###'
,'# Jmol 10.9.67 adds _1H, _2H, _3H, etc. for general depiction of isotopes. No file readers support this as yet. '

,'###save/restore selection###'
,'# Jmol 10.9.63 allows saving and restoring of the current selection set. Basically this is a "global define" that crosses the load barrier. Used without "load" between save and restore, the action is the same as <b>define xxx selected</b>...<b>select xxx</b>. The difference is that the file can be reloaded between save and restore.'
,'load caffeine.xyz;selectionHalos'
,'select _C'
,'save selection X'
,'# now move the model around'
,'save orientation X'
,'load caffeine.xyz;restore orientation X 1;restore selection X;selectionHalos'

,'###selectionHalos command###'
,'# Jmol 10.9.63 simplifies the selectionHalo business by introducing the <b>selectionHalos</b> command. It\'s the equivalent of "set showSelections" or "set display selected" but it\'s simpler and corresponds better with the <b>color selectionHalos</b> command.'
,'load caffeine.xyz;select _N'
,'selectionHalos on'
,'color selectionHalos red'
,'color halos blue'
,'select *'
,'color selectionHalos yellow'
,'color halos none'
,'color selectionHalos none'

,'###molecular electrostatic potentials###'
,'# Jmol 10.9.63 introduces <b>isosurface MEP</b>, with which you can display molecular electrostatic potentials. These potentials are calculated from partial charge data present in a file; Jmol cannot calculate these charges.'
,'# Just the MEP:'
,'load CH3F.smol;isosurface delete resolution 6 mep'
,'load C6H6.smol;isosurface delete resolution 6 mep'
,'# MEP mapped onto a surface:'
,'load CH3F.smol;isosurface delete resolution 6 solvent map mep'
,'load C6H6.smol;isosurface delete solvent map mep'
,'load C6H6.smol;isosurface delete resolution 3 solvent map mep'
,'# This one may take some time:'
,'load C6H6.smol;isosurface delete resolution 6 solvent map mep'
,'# Though somewhat slow, these can be saved as JVXL files:'
,'console on;show isosurface'
,'# and then loaded instantly:'
,'load C6H6-mep.jvxl;isosurface ""'


,'###easier showing of information###'
,'# With Jmol 10.9.63 you can use the pop-up menu item "show" to show all sorts of information about the model. This information pops up in a console window that appears in front of the web page. This can be done in script as well, using the "console" command.'
,'console on;getProperty fileContents'
,'console on;show orientation'

,'###selective palette colors for element defaults###'
,'# Jmol 10.9.62 allows you to set specific element default colors to the RasMol or Jmol palette.'
,'load caffeine.xyz'
,'color _C RasMol'
,'color _C Jmol'

,'###set echo all###'
,'# Jmol 10.9.62 provides an equivalent to "select *" but for echos. So you can set characteristics such as font and color of all echo texts at once.'
,'set echo top left;echo testing 1'
,'set echo echo1 50 50;echo test 2'
,'set echo all;font echo 30;color echo green;background echo white'


,'###default label font/color/background###'
,'# Jmol 10.9.62 allows you to set the default font, color, background, and alignment for labels using "select none".'
,'load caffeine.xyz;set labelfront;select none; # the way to select NO labels'
,'font label 20 serif bold'
,'color label yellow'
,'background label blue'
,'set labeloffset 30 30'
,'# no immediate effect of these -- they are just setting the defaults'
,'select atomno=3;label "%0.2x %0.2y %0.2z"'
,'# now we see the label with these defaults'
,'select atomno=5;label "this is atom 5"'


,'###default echo font/color/background###'
,'# Jmol 10.9.62 allows you to set the default font, color, background, and alignment for echo text using "set echo none". Also, for echo, anytime you set a characteristic, that characteristic becomes the new default value.'
,'set echo none'
,'font echo 15 sansserif italic;color echo white;background echo blue'
,'set echo echo1 40 40;set echo echo1 center;echo this is|a test of echo defaults'
,'set echo echo2 100 100;echo another|label |here'


,'###polyhedra color###'
,'#Jmol 10.9.62 adds the convenience the capability of designating a color and/or TRANSLUCENT/OPAQUE when generating polyhedra. No need for an additional "color polyhedra ..." command, though that is still present.'
,'load caffeine.xyz;polyhedra 4 bonds translucent red'


,'### calculate structure ###'
,'# Up until this point, Jmol either always used the secondary structure defined in a PDF or mmCIF file or calculated it itself only when the file was loaded. This is a problem for some models where only a portion of the bonding is indicated in the file. Jmol 10.9.62 adds the capability to recalculate this secondary structure anytime, but particularly after using the <b>connect</b> command to fill out the bonding.'
,'load 1AL4.pdb; restrict none; conformation 1; cartoons 0.5;color cartoons group;'
,'# Not all bonds are shown because the authors put in a large number of CONECT records, and Jmol respects that.'
,'select *;connect; calculate structure;restrict none; conformation 1;cartoons 0.5; color cartoons yellow;'
,'# Now all bonds are shown AND the cartoons are completed.'
,'restrict none;conformation 2;cartoons 0.5;wireframe;select not protein;color yellow'
,'restrict none;conformation 1;cartoons 0.5;wireframe;select not protein;color yellow'
,'### selectable element symbols ###'
,'# Jmol 10.9.62 adds _H _D _T _He _Li ... element symbols. The leading underline is required.'
,'load caffeineDT.xyz;select none;set display selected;'
,'select _D;label %e %i'
,'select _C;color yellow'

,'### isotope support ###'
,'# Jmol 10.9.61 adds isotope support for deuterium and tritium. Element symbols "D" and "T" are recognized, and you can "select deuterium" or "select tritium". Note that when you "select hydrogen" you get any isotope of hydrogen. Suggestions for colors are welcome. Standard file formats should be supported, including CIF, PDB, MOL, and XYZ. '
,'load caffeineDT.xyz;select none;set display selected;'
,'select deuterium;label %e %i'
,'select tritium'
,'# substructure searching using smiles strings now recognizes deuterium and tritium'
,'select substructure("[C][C][N][C][2H]")'
,'select substructure("[3H][C][2H]")'
,'# without a mass number, any isotope matches:'
,'select substructure("[C][C][N][C][H]")'
,'# [1H] does not match D or T'
,'select substructure("[N][C][1H]")'
,'# "hydrogen" includes all isotopes:'
,'select hydrogen; color green'
,'select deuterium; color cpk'
,'# element/isotope colors persist:'
,'color deuterium yellow'
,'load caffeineDT.xyz;'
,'# deuterium is yellow from now on'

,'### select carbohydrate ###'
,'# Jmol 10.9.61 adds the capability to select for carbohydrate groups in mmCIF and PDB files.'
,'load 1cdr.pdb;select carbohydrate;color group; select not carbohydrate; spacefill off; wireframe off;set cartoonRockets;cartoons on;'
,'frame next'
,'frame previous'


,'### set forceAutoBond ###'
,'# Jmol 10.9.61 adds <b>set forceAutoBond</b> which forces Jmol to ignore bonding indicated in a file and apply its own bonding rules. This is useful in cases where, for example, a PDB file has only some of the connections indicated, which otherwise would create gaps in the secondary structure and missing bonds.'
,'set forceAutobond false;load 1AL4.pdb;restrict none;select not *%B;wireframe on;spacefill 0.1;cartoons 0.5;color cartoons group'
,'save orientation;set forceAutobond true;load 1AL4.pdb;restore orientation;restrict none;select * and not *%B;wireframe on;spacefill 0.1;cartoons 0.5;color cartoons group'

,'### save/restore bonds and orientation ###'
,'# Jmol 10.9.60 adds <b>save bonds</b> and <b>save orientation</b>. Any unique identifier or number can be used to identify the save/restore set. If no name is given for <b>restore</b>, then the last saved item of the given type is restored. For restoring orientations, a parameter can be added that indicates the number of seconds over which the reorientation should take place. More to come!'
,'load caffeine.xyz;save orientation 0;save bonds originalBonds'

,'moveto 1.0 -867 -310 -391 108.3;save orientation view1'
,'moveto 1.0 -5 259 966 170.4 40 28 -35;save orientation view2'
,'restore orientation 0'
,'restore orientation view1 2.0'
,'restore orientation view2 2.0'
,'restore orientation 0 2.0'
,'connect (carbon) (hydrogen) delete;save bonds noCH'
,'restore bonds originalBonds'
,'wireframe 0.1;save bonds lineBonds'
,'restore bonds originalBonds'
,'restore bonds lineBonds'



,'### set pickingStyle MEASURE ON/OFF ###'
,'# Jmol 10.9.60 adds a new picking style -- MEASURE. Clicking on atoms measures distance, angle, or torsion based on the setting of <b>set picking MEASURE</b>'
,'load caffeine.xyz;set pickingStyle MEASURE ON;set echo top left'
,'set picking MEASURE DISTANCE;echo now click on any two atoms '
,'set picking MEASURE ANGLE;echo now click on any three atoms'
,'set picking MEASURE TORSION;echo now click on any four atoms'
,'set pickingStyle MEASURE OFF'
,'console on; show measurements'

,'### isosurface select(xxx) ignore(not xxx) sasurface ###<br><img src=img/ignore.jpg width=250 height=250>'
,'# Jmol 10.9.60 adds an important isosurface option: <b>ignore</b>. The idea is to completely ignore a given set of atoms, most likely solvent. (Note: 10.9.74 makes "ignore(solvent)" the default option for "solvent" and "sasurface"). For a model that contains water or other solvent, it is quite possible that we want a surface that ignores these parts. Adding <b>ignore(solvent)</b> tells Jmol to completely ignore these atoms for the purposes of calculation. This option must be indicated BEFORE the <b>sasurface</b> or <b>solvent</b> parameter, because it is used in the construction of the surface.'
,'load 1mbo.cif; set echo top left;echo lots of water molecules here'
,'isosurface delete ignore(none) sasurface; echo no good -- includes the water molecules'
,'isosurface delete select(not solvent) ignore(none) sasurface; echo still a problem'
,'isosurface delete sasurface;echo much better'
,'isosurface delete select(1-10) ignore(none) sasurface;echo a fragment with the same problem'
,'isosurface delete select(1-10) sasurface;echo a better fragment'

,'### "set backgroundModel N" ###'
,'# Jmol 10.9.60 adds the capability to define a single static model that remains present during an animation or, for that matter, any situation when more than one model or frame is present (as in multiple-file loads). This option has limitations and is not recommended when setting display properties.'
,'load cyclohexane_movie.xyz; set backgroundModel 1;moveto 2.0 774 -616 146 112.3;animation on;'
,'set backgroundModel 0'

,'### "surfacedistance" ###'
,'# Jmol 10.9.60 introduces the capability to visualize based on distance from the molecular surface. The distance calculated is well defined. 0 means "on the surface"; all other distances are the minimum distance of an atom to one of the surface atoms.'
,'load 1crn.pdb'
,'color surfacedistance # sort of like "color temperature"'
,'select surfacedistance=0;color white # surface atoms'
,'select within(group,surfacedistance=0);color white # surface residues'
,'select not within(group, surfacedistance=0);color red   # interior groups'

,'### "calculate" ###'
,'load 1crn.pdb'
,'# Jmol 10.9.60 introduces a new "calculate" command that currently has two arguments -- "surface" and "hbonds" (same as "hbonds calculate"; the idea here is that there may be other quantities to calculate in the future). This does no rendering, just the calculation. <a href="new.htm#topic58">superceded in Jmol 11.4 by <b>calculate surfaceDistance [within|from]</b></a>'
,'calculate surface;select surfacedistance=0;color yellow # custom solvent-accessible surface.'


,'### halos and selectionHalos ###'
,'# Jmol 10.9.59 introduces the "halo" object, similar to in action to "stars" but a ring instead of a cross. These are the "selection halos" generalized, colorable, and sizable. Jmol 10.9.63 introduces the <b>selectionHalos</b> command. Halos have a different default color setting if generated using "halos on" (color of the atom) or "select *;selectionHalos ON". In the latter case, the color is the "selectionHalos" color, originally gold, but settable using "color selectionhalos xxxx".'
,'load caffeine.xyz'
,'select nitrogen'
,'color halos red'
,'halos 20% # default is 20% of Van der Waals radius'
,'halos 0.5'
,'select oxygen'
,'color halos blue'
,'select *;halos on # resets to the default size'
,'halos off'
,'select atomno<10'
,'selectionHalos ON'
,'color selectionHalos yellow # only affect the uncolored ones'
,'color selectionHalos none # back to atom-based colors'
,'select nitrogen;color halos violet;select * # overriding'
,'color halos none # back to the ORIGINAL atom colors'
,'color selectionHalos gold # the original settings'
,'selectionHalos OFF'
,'load 1crn.pdb'
,'color halos group; halos on'
,'color halos amino;'
,'halos off'


,'### stereo [color] [color] ###'
,'# Jmol 10.9.59 allows for customizing stereo viewing to suit specific glasses. Or, at least you can experiment.'
,'background white;stereo red cyan'
,'# a single color implies the complement for the second (cyan in this case)'
,'stereo red'
,'# "green" is not the right name to use, "lime" is.'
,'stereo redgreen'
,'stereo red green'
,'stereo red lime'
,'# Using hex codes is probably better for experimenting. See the list of <a href=http://jmol.sourceforge.net/jscolors/#JavaScript%20colors>JavaScript color names</a> used by Jmol.'
,'stereo [xFF0000]'
,'stereo [xFF0000] [xFFFF00]'
,'background black;stereo off'

,'### multiline labels echo, and hover text; percent-positioning of echo text ###'
,'# Jmol 10.9.58 now allows "|" (vertical bar) in labels, hover and echo texts.'
,'load "quartz.cif" {1 1 1};select silicon;labels "%0.2X %0.2Y %0.2Z|%U";set labelalignment CENTER;set labeloffset 0 35'
,'set echo myecho 30% 10%;echo this is quartz'
,'set echo myecho 0% 0%'
,'set echo myecho 100% 0%'
,'set echo myecho 100% 100%'
,'set echo myecho 0% 100%'
,'set echo myecho 50% 100%; set echo myecho CENTER'
,'# notice that the text is automatically kept within the window'
,'set echo myecho 200% 50%'
,'echo "this|is quartz"'


,'### movable echo ###'
,'# Jmol 10.9.58 adds an infinite number of independent echo placements. Simply provide a unique name followed by the x and y positions for the label. "0 0" is the bottom left corner.'
,'set echo myecho 0 0;echo quartz'
,'set echo myecho 240 100%;echo quartz'
,'# Indicate new lines in multiple-line labels with a vertical bar'
,'echo a|quartz|crystal;'
,'# text alignment is given by "left", "right", or "center"'
,'set echo myecho right'
,'set echo myecho center'
,'set echo myecho left'
,'color echo yellow'
,'set echo myecho2 50 50;echo from AMS'
,'color echo white'
,'font echo 18 serif italic'
,'set echo myecho2 250 250'
,'# Now you can turn labels off individually'
,'set echo myecho off'
,'set echo myecho2 off'
,'# The old "top", "middle", and "bottom" are simply special pre-defined locations. In these three special cases only, "left", "right", and "center" describe both the window placement and the text alignment.'
,'set echo top center'
,'echo top|center'
,'# You can redefine the locations for "top", "middle", and "bottom" if you want to.'
,'set echo top 200 0'



,'### applet help ###'
,'# Jmol 10.9.57 includes a "help" command.'
,'help'
,'help echo'

,'### translateSelected ###'
,'# Jmol 10.9.57 includes the ability to move atoms relative to each other.'
,'load "team0104a.ccdc.cif" {1 1 1};moveto 0  -689 -707 -161 145.1 60;'
,'select symop = 1;color white'
,'translateSelected {0 -1/1 0}'
,'translateSelected {0 1/1 0}'



,'### space groups for mmCIF, XYZ, and MOL files ###'
,'# Jmol 10.9.55 extends spacegroup and unitcell capabilities to standard XYZ, mmCIF, and MOL files. Coordinates are not fractional in these files, so the presumption is that we have the final Cartesian coordinates, but we want to "reverse engineer" the system and see how that molecule packs in its crystal. For this we have to have some additional information of spacegroup and unitcell.'
,'load "caffeine.xyz" {1 1 2} spacegroup "P 4" unitcell {10 10 10 90 90 90}'

,'### space groups for PDB files ###'
,'# Jmol 10.9.54 adds the capability to explore space groups and molecular packing of proteins in PDB files. This opens the door also for the same using any Cartesian-coordinate file, provided unit cell and space group information are provided. At least for now it is possible with PDB files.'
,'load "1crn.pdb"'
,'load "1crn.pdb" {1 1 1}'
,'load "1crn.pdb" {1 2 1};select symop=1;color red'
,'load "1crn.pdb" {1 2 1} spacegroup "P 21:a"'
,'load "1crn.pdb" {1 2 1} spacegroup "P 21:b" # the real one ?'
,'load "1crn.pdb" {1 2 1} spacegroup "P 21:c"'
,'load "quartz.cif" {1 1 2};moveto 0.0 -999 38 -2 73.7;'
,'# You can also change the unit cell dimensions if you like:'
,'load "quartz.cif" {1 1 2} unitcell {6.00 6.00 6.00 90 90 120};moveto 0.0 -999 38 -2 73.7;'
,'# If you change both, change spacegroup first:'
,'load "quartz.cif" {1 1 2} spacegroup "P 32 2\'\'" unitcell {6.00 6.00 6.00 90 90 120};moveto 0.0 -999 38 -2 73.7;'
,'load "quartz.cif" {1 1 2} spacegroup "P 32 2\'\' (0 0 4)" unitcell {6.00 6.00 6.00 90 90 120};moveto 0.0 -999 38 -2 73.7;'


,'### set labelsGroup ###'
,'# Jmol 10.9.53 introduces <b>set labelsGroup</b>, which places the labels for atoms in proteins and nucleic acids just in front of their group, rather than in front of all atoms, as in <b>set labelFront</b>.'
,'load 1crn.pdb;spacefill on;select *.CA;labels "%r";color labels group;'
,'set labelGroup'
,'set labelFront'
,'set labelAtom;'

,'### new data command ###'
,'# Jmol 10.9.52 introduces a general method of entering data into Jmol, mostly for future customizability options. The one option currently supported is "model" data, but any sort of line-based data can be introduced and later shown using the <b>show data</b> or <b>getProperty dataInfo</b> commands. The <b>data "model"</b> statement allows in-line entry of a file surrounded by additional script commands. See <a href=../index.htm?#data>the documentation</a> for details and an example.'
,'background red;data "model example"|2|testing|C 1 1 1|O 2 2 2|end "model example";show data'
,'background black'

,'### new symop and specialPosition atom selection options, and label "%o" ###'
,'# Jmol 10.9.52 introduces <b>symop</b>, a means of selecting atoms based on which symmetry operator generated them.'
,'load "quartz.cif" {1 1 1}'
,'set display selected'
,'select symop=1'
,'select symop<3'
,'# To select just the original atoms before any symmetry was applied, use <b>select not symmetry</b>.'
,'select not symmetry'
,'# To select all special positions (positions that can be generated by more than one symmetry operation from the original set of atoms), use <b>select specialPosition</b>.'
,'select specialposition'
,'# To display the index of the symmetry operator that generated an atom, use %o in a label'
,'set display normal;select *;label "%o"'
,'# To display the operators in xyz notation, use <b>show symmetry</b>'
,'show symmetry'

,'### new space group capabilities ###'
,'# Jmol 10.9.51 adds the capability to read space group names (Hermann-Mauguin or <a href=http://cci.lbl.gov/sginfo/hall_symbols.html>Hall</a>) and from these to generate the set of operators. In the case of Hall symbols, this assignment is definitive; in the case of Hermann-Mauguin symbols, cell parameters are also used in order to identify the unique axis, but there still may be ambiguities in this case. The current implementation is for testing only -- some changes should be expected. To indicate 2", use a pair of single quotes: 2\'\'. In addition, you can supply a desired space group name with a file to specify that you want to override the space group indicated in the CIF file.' 
,'load "team0104a.ccdc.cif" {1 1 1}'
,'# without qualifiers, "show spacegroup" interprets the name of the spacegroup given in the file. Note that this may not be consistent with the operators used to calculate the atom positions if those are explicitly given in the CIF or RES file. Jmol will only use the space group name to generate operators if they are not otherwise given in the file.'
,'show spacegroup'
,'# Hermann-Mauguin symbols can be shown:' 
,'show spacegroup "Pmmn"'
,'# any arbitrary Hall symbol can be shown:'
,'show spacegroup "P 32 2\'\' (0 0 4)"'
,'# In 10.9.52 you can instuct Jmol to ignore CIF file-derived operators and force name-derived operator generation:'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "ignoreOperators"'
,'# In 10.9.52 you can load a file and script what spacegroup to use, overriding the spacegroup indicated in the file itself. No check is done to ensure that the chosen space group is compatible with the cell dimensions. The "space group" can just be a list of x,y,z operators.'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "Pmmm";rotate y 90; show spacegroup'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "P21/m";rotate y 90; show spacegroup'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "P21/c";rotate y 90; show spacegroup;centerAt absolute {1/2 1/2 1/2};set scale3d 6.0;'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "-x,y+1/2,-z+1/2";rotate y 90;;centerAt absolute {1/2 1/2 1/2};set scale3d 6.0;'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "-x,-y,-z";rotate y 90;centerAt absolute {1/2 1/2 1/2};set scale3d 6.0;'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "-x+1/2,y,z+1/2";rotate y 90;centerAt absolute {1/2 1/2 1/2};set scale3d 6.0;'


,'### new dots behavior ###'
,'# in response to several users\' request, <b>dots</b> now functions on the selected atom set without turning off other dots. In addition, there are now two options, <b>set dotSurface TRUE|FALSE</b> and <b>set dotsSelectedOnly TRUE|FALSE</b>. The first of these, <b>set dotSurface</b> (default TRUE) indicates that we are to draw the dots with neighbors in mind, not rendering dots that would be "inside" another atom. If you turn dotSurface OFF, then dots are just spheres of dots symmetrically positioned around the selected atoms. Turn them on or off just like labels. The second, <b>set DotsSelectedOnly</b> (default FALSE) indicates whether or not to draw the dots only for the atoms that are currently "dots on". The idea here is that sometimes we might want dots to show a fragment of a surface (<b>set dotsSelectedOnly FALSE</b>) or to show a smooth curve around all currently dotted atoms (<b>set dotsSelectedOnly TRUE</b>). To see any effect with either of these, you need to do another <b>dots ON</b> or other related command.'
,'load caffeine.xyz;set dotSurface ON; set dotsSelectedOnly FALSE; dots +1.2'
,'select oxygen;dots off'
,'select *;dots off;'
,'select oxygen;set dotSurface OFF;dots 1.0'
,'dots off; select hydrogen;set dotSurface ON; set dotsSelectedOnly;dots 150%'

,'### cartoonRockets adjustment ###'
,'# cartoonRockets now more accurately reflect turn structure. No change was made to standard cartoons or rockets.'
,'load 1crn.pdb;restrict none;select *;set cartoonRockets;cartoons ON;'
,'rockets on;trace off;cartoons off;'
,'rockets off;trace off;cartoons on;'
,'rockets off;trace on;cartoons off;'

,'### adjusted hydrogen bond criteria ###'
,'# although Jmol uses the DSSP hydrogen bond calculation as described at <a target=_blank href=http://en.wikipedia.org/wiki/Secondary_structure>http://en.wikipedia.org/wiki/Secondary_structure</a>, there seems to be a flaw in this energy calculation that renders too many hydrogen bonds. I\'ve added the criteria that the N--H hydrogen must be closer than the N--H nitrogen to the carbon of C=O for a valid hydrogen bond to be claimed, and also that the H--O distance of the hydrogen bond itself must be less than 3.0 Angstroms. (2.0 is probably more realistic, but 3.0 allows for some slop.) The result of this is that it is possible that slightly fewer (but more realistic) hydrogen bonds will be displayed for PDB and mmCIF files. Note that if a file contains no indication of hydrogen bonds, then one must issue a <b>hbonds calculate</b> command first before any hydrogen bonds will display.'
,'load 1qys.pdb;restrict none;select *;cartoons on;'
,'hbonds calculate'


,'### new "mo TITLEFORMAT" ###'
,'# 10.x.46 introduces a means of customizing (or removing) the default listing of information that appears with a molecular orbital when using the MO command. See <a href=mo.htm>mo.htm</a>'

,'### "set defaultDirectory" and "set appletProxy" ###'
,'# 10.x.45 introduces dynamic setting of the default directory as well as the applet proxy server. Using <b>set defaultDirectory "directoryName"</b> you can change where files are coming from without moving the files all around. This should prove helpful to those of us who test pages on more than one server or hard drive. <br/><br/>Using <b>set appletProxy "serverURL"</b> you can set the URL that Jmol goes to in order to display files NOT from the applet\'s host. This requires specific code on the server side that takes a call such as "www.myserver.com?url=someother.server.com/myfile.xyz" and returns the file at someother.server.com/myfile.xyz.'


,'### dynamic callback setting ###'
,'# 10.x.44 introduces dynamic setting of JavaScript callback functions. Turn these off using "NONE"; set them to be a JavaScript alert using "alert".'
,'set hovercallback "alert" # Now hover over an atom.'
,'set hovercallback "none"; set messageCallback "alert"'
,'set pickcallback "alert"; set messagecallback "none" # Now click on an atom.'
,'# When a special picking mode is set (distance, angle, or torsion), the pick callback continues to indicate the individual atoms picked; the message callback function gets the final information.'
,'set pickcallback "alert"; set messagecallback "none"; set picking distance # Now click on pairs of atoms.'
,'set pickcallback "none"; set messagecallback "alert"; set picking distance # Now click on pairs of atoms.'
,'set pickcallback "none"; set messagecallback "showmsg" # the default function for this page'

,'### dynamic design of draw objects, including 3D arrows and curves<p>See <a href=draw.htm>draw.htm</a> ###'
,'# 10.x.44 introduces <b>set picking DRAW</b>, which allows you to change the positions of the vertices that define points, lines, planes, arrows, and curves. The command <b>show draw</b> then delivers the command that can be used in web pages to reproduce this set of vertices.'


,'### set cartoonRockets on <br><a href=mailto:hansonr@stolaf.edu>COMMENTS APPRECIATED</a>###'

,'# 10.x.42 tests an idea for displaying cartoons as rockets. The idea is to have a flag that can be set that renders cartoons in the form of rockets. The original rockets and cartoons are thus both still there.'
,'load 1bkx.pdb;restrict none;select *;cartoons on;color group; set picking center;'
,'set cartoonRockets on'
,'set cartoonRockets off'
,'# note that the rendering of the turns is not precisely the same as either cartoons or rockets, because we have to connect to both ends of a rocket, which are not in the same place as the ends of an alpha helix, and we have to connect to both ends of a sheet, which are not in the same place as the rectangular rocket arrows. I am not fully satisfied with this rendering.'
,'rockets off;cartoons on;set picking center'
,'rockets on;cartoons off;set picking center'

,'### new select/restrict options SITE and ELEMENT ###'
,'# Jmol 10.x.40 adds <b>select/restrict within(SITE,expression)</b>, <b>select/restrict within(ELEMENT,expression), <b>select/restrict site=n</b>, and <b>select/restrict element=n</b>. (This last is just for completeness sake. "select elemno=n" already exists.) These options are of particular use in the context of crystallography, where symmetry may generate several atoms with the same site but different cell position.'
,'load "quartz.cif" {3 3 3}; restrict cell=666;unitcell 666;zoom 300'
,'# This loads 3x3x3 = 27 unit cells. Note that without "and visible" all matching atoms are selected and that "and visible" should appear outside the "within()" phrase.'
,'select within(site,atomno=1) # 105 atoms selected.'
,'select within(site,atomno=1 and visible) # nothing selected, because atomno=1 is not visible'
,'select within(site,atomno=1) and visible;color green'
,'select site=2 and visible;color yellow'


,'### new set picking SITE and set picking ELEMENT ###'
,'# Jmol 10.x.40 adds <b>set picking SITE</b> and <b>set picking ELEMENT</b>. In each case, all atoms that match the specified site and element <i>and are visible</i> are selected.'
,'load "maleic.cif" {2 1 1};unitcell 655;center visible;zoom 400;select none;set display selected'
,'select none;set picking ELEMENT # now start picking atoms'
,'select none;set picking SITE # now start picking atoms'
,'select none;set picking ON # normal picking'
,'set display normal # normal display'

,'### new "message" command ###'
,'# Jmol 10.x.39 adds <b>message</b> [text], which outputs text to the messageCallback function and also enters this text in the scriptStatus queue.'
,'load caffeine.xyz;color red;message This script is running;delay 5;color green;message this script is done;'

,'### Wavefunction Odyssey file viewer support ###'
,'# jmol 10.x.37 reads Wavefunction <a target=_blank href=http://www.wavefun.com/products/odyssey/odyssey.html>Odyssey</a> software.'
,'# In this first example, we load the file and generate hydrogen bonds'
,'load Water!Liquid.xodydata;connect 2.5 (oxygen) (hydrogen) hbond create;'
,'# "water" is now defined in a small-molecule context as H2O based on connectivity'
,'load ZnSO4!Solution.odydata;select water;spacefill off;wireframe 0.06;color white;'

,'### HoverCallback ###'
,'# Jmol 10.x.33 supports HoverCallback. When a user\'s mouse hovers over an atom, the function specified in jmolSetCallback("hovercallback","functionName") gets a call. The first parameter in the callback is the applet id. Second is a descriptive string indicating the atom\'s identity and xyz coordinates. Third is the atom\'s index (atomIndex), which can be used with <br /><br /><b>jmolGetPropertyAsArray("atomInfo")[atomIndex]</b><br /><br /> to get <a target=_blank href=http://www.stolaf.edu/people/hansonr/jmol/docs/atomInfo.txt>more detailed information</a> if desired. Hovercallback is active even if <b>hover OFF</b> has been executed. Thus, with <b>hover OFF</b> the user will not see any effect of hovering, while the web page can be made fully aware of it. The call to jmolSetCallback() must be made BEFORE the call to jmolAppet(). '

,'### AJAX-JS support ###'
,'# Jmol.js supports <a href="http://en.wikipedia.org/wiki/Ajax_%28programming%29" target=_blank>Asynchronous JavaScript</a>, allowing web developers to create pages that draw from any molecular data resource on the web. To use this service, nothing more than Jmol.js is require. No server-side application is needed. Currently the both of the two known AJAX-JS servers are supported -- one at St. Olaf College serving up RCSB biomolecular structures as well as just about any uncompressed structural model files anywhere on the web, and the American Mineralogical Society\'s AJAX mineral structure server at the University of Arizona.'

,'### <b>set scriptQueue ON</b> and quit/exit ###'
,'# Many people have reported issues with script commands running over each other. This problem is now largely solved. applet.jmolScript() and viewer.script() deliver scripts to a queue, and if that queue is turned on using <b>set scriptQueue ON</b>, they are properly sequenced. Thus, when the queue is turned on, each script waits for the previous to complete. This is NOT standard Jmol procedure for the reason that sometimes one needs one script to interrupt another, as, for example, when a <b>LOOP</b> command is involved. In that case, the only way to interrupt the looping script is with another script. So, to account for this issue, the roles of <b>quit</b> and <b>exit</b> have been expanded. <b>quit</b> or <b>exit</b> at the very beginning of a script command halts any <i>previous</i> still-running script and. Processing then continues with the second command on the line. Anywhere else in the command, <b>quit</b> and <b>exit</b> abort that script. In addition, <b>exit</b> clears the script queue of any remaining scripts, thus stopping all script processing.'
,'# Try this with the following commands to see how it works. Go ahead and click rapidly to start more than one script with and without the script queue being on.'
,'load caffeine.xyz'
,'set scriptQueue ON'
,'moveto 3 1 0 0 30 '
,'moveto 3 0 1 0 50'
,'moveto 3 0 0 1 80'
,'# Now try that again the "old" way:'
,'set scriptQueue OFF' 
,'moveto 3 1 0 0 30 '
,'moveto 3 0 1 0 50'
,'moveto 3 0 0 1 80'
,'set scriptQueue ON'
,'color red;delay 2; color green; loop 2'
,'# quit or exit at the beginning are the same thing'
,'quit'
,'exit'
,'quit; color blue;delay 2; color yellow; loop 2 # any previously running script will stop, and this script will be placed at the end of the queue'
,'color orange;delay 3; color white; delay 3; exit # start this one and then a few more; # only this one will execute.'

,'### super-simple solvent-accessible surface option using "spacefill"; new variable radius <b>dots</b> and new <b>geoSurface</b> command ###<br><img src=img/sasurface.jpg width=100 height=100>'
,'# The "solvent-accessible surface" is defined as an extension of the van der Waals radius by a set "solvent probe radius", commonly 1.2 or 1.4 Angstroms. This surface is now displayable simply using the <b>spacefill +1.2</b> command, where the +1.2 indicates "van der Waals radius plus 1.2 Angstroms'
,'load 1p84.cif;select not solvent;color yellow;spacefill +1.2;select solvent;spacefill 1.2;color red;spin y -10'
,'# This model has 18,207 atoms. What could be simpler?'
,'load caffeine.xyz'
,'spacefill 100%'
,'spacefill +1.2'
,'spacefill 1.2'
,'spacefill 25%'
,'spacefill off'
,'# The same works for dots. The <b>geoSurface</b> object just involves connecting the dots. Probably not so useful with <b>spacefill +12</b>, but it was there already in the code, undocumented, so I have enabled it.'
,'load caffeine.xyz'
,'dots 100%'
,'dots +1.2'
,'dots 1.2'
,'dots 25%'
,'dots off'
,'load 1crn.pdb;geosurface 100%'
,'geosurface +1.2'
,'geosurface off'

,'### new select within("[SEQUENCE]",(atom expression)) ###<br><img src=img/sequence.jpg width=100 height=100>'
,'# Jmol 10.x.30 adds the capability to select specific atoms within a specific peptide or nucleic acid sequence. The one-character group codes are used to specify the desired sequence.'
,'load 1crn.pdb;selectionHalos on; color white;select within("CIII",*.ca);color blue;spacefill 0.8'
,'set display normal;load 114d.cif;spacefill off;color white;select within("TTAG",*);cartoon on; wireframe off;color red;select selected and *.P;set labelFront;label %n;color labels yellow;moveto 1.0 -301 744 597 142.2;'

,'### new lcaoCartoon command<p>See <a href=lcao.htm>lcao.htm</a>. ###<br><img src=img/lcao.jpg width=100 height=100>'
,'# Jmol 10.x.29 adds the capability to draw LCAO "cartoon orbitals" at any hybridization-compatible atom very quickly without knowing anything about its orientation.'

,'### New <b>MO</b> command<p>See <a href=mo.htm>mo.htm</a> ###<br><img src=img/mocalc.jpg width=100 height=100><img src=img/webmo.jpg width=100 height=100>'
,'# 10.x.25 introduces a simple command that you can use to explore the molecular orbitals contained in a variety of file types. (New types added upon request.) The command allows for changing the cutoff value as well as the resolution of the surface, the colors, and the transparency. In addition, a plane can be specified, allowing for a slice through the orbital to be depicted.'
,'load "water-G03W.out";frame 2;center visible;moveto 1.0 -571 -817 -75 120.5;set axesmolecular;axes on'
,'mo 4'
,'mo cutoff 0.02'
,'mo cutoff 0.08'
,'mo color yellow purple'
,'mo color red blue'
,'mo resolution 3'
,'mo resolution 6'
,'mo resolution 10'
,'mo color red blue'
,'mo translucent'
,'mo next'
,'mo plane "xy"'
,'mo plane "xz"'
,'mo plane "yz"'
,'mo plane {1 1 1 0}'
,'mo noplane'
,'mo prev'

,'### Spartan .spartan file and Compound Document reader support ###'
,'# <a target=_blank href=http://www.wavefunction.com>Wavefunction</a>\'s Spartan native binary .spartan files can be read by Jmol starting with 10.x.22. These files are standard <a target=_blank href=http://sc.openoffice.org/compdocfileformat.pdf>Compound Document</a> file format (same as some versions of Microsoft Word and Excel, and OpenOffice files.) Jmol can read atoms, bonds, molecular orbitals, vibrational modes, charges, dipole moments, and a variety of other properties contained in these files.'
,'load methanol.spartan;getProperty "auxiliaryinfo"'
,'frame 1;mo cutoff 0.008 ; mo translucent'
,'mo 12'
,'mo next'
,'mo prev'
,'frame 2;vibration scale 0.1; vibration on'
,'frame next'
,'frame prev'
,'load ethene.spartan'
,'load "acetic%20acid.spartan"'

//,'load "test.cif" {3 3 3};restrict cell={2 2 2};set unitcell {1 1 1};define ~cations (silicon or copper or germanium or vanadium);define ~anions (oxygen);define ~nobonds (yttrium);color copper SpringGreen;color axes white;color unitcell white;center visible;connect delete;connect 2.2;connect (~anions) (~anions) delete;connect (~cations) (~cations) delete;connect (~nobonds) (*) delete;polyhedra delete;polyhedra bonds (~cations and (connected(3) or connected(4) or connected(5) or connected(6)) and visible);moveto 1.0 -971 195 138 78.9 225;'

//,'load "test.cif" {3 3 3};restrict cell={2 2 2};set unitcell {1 1 1};define ~cations (copper);define ~anions (oxygen);define ~nobonds (yttrium);color copper SpringGreen;color axes white;color unitcell white;center visible;connect delete;connect 2.2;connect (~anions) (~anions) delete;connect (~cations) (~cations) delete;connect (~nobonds) (*) delete;polyhedra delete;polyhedra bonds (~cations and (connected(4)) and visible);moveto 1.0 -971 195 138 78.9 225;'

//,'load "test.cif" {3 3 3};restrict cell={2 2 2};set unitcell {1 1 1};define ~cations (copper);define ~anions (oxygen);define ~nobonds (yttrium);color copper SpringGreen;color axes white;color unitcell white;center visible;connect delete;connect 2.2;connect (~anions) (~anions) delete;connect (~cations) (~cations) delete;connect (~nobonds) (*) delete;polyhedra delete;polyhedra bonds (~cations and (atomno=167) and visible);moveto 1.0 -971 195 138 78.9 225;'

,'### adjustable console message level ###'
,'# Jmol 10.x.24 adds "set logLevel n" where n ranges from 0 (minimum of messages) to 5 (all messages). You can also use the JavaScript command <a href="javascript:alert(jmolSetLogLevel)">jmolSetLogLevel(n)</a> PRIOR to getApplet() to add a parameter to the code for the applet. For example, jmolSetLogLevel(0) will produce a SILENT applet.'

,'### atomic orbitals, molecular orbitals, LCAO "cartoon" orbitals, spheres, ellipses, color-mapped planes, user-defined functions, solvent-accessible and -excluded surfaces <p>See <a href=isosurface.htm>isosurface.htm</a>. ###<br><table bgcolor=black cellspacing=0 cellpadding=0><tr><td><img src=img/orbital.jpg width=100 height=100><img src=img/isoesp.jpg width=100 height=100><br ><img src=img/lcao.jpg width=100 height=100><img src=img/functionxy.jpg width=100 height=100></td></tr></table>'
,'# Jmol 10.x.05 - 10.x.18 introduce VERY compact orbitals and other molecular properties as isosurfaces.  These files are generated by Jmol from CUBE files with compression ratios on the order of 400 to 600:1 or from Jmol-generated data. High levels of compression are possible because JVXL files do not allow for variable cutoffs. check out the new "Jmol Voxel File" format at <a href=ch3cl.jvxl target=_blank >ch3cl.jvxl</a>. For a discussion see <a href=http://www.stolaf.edu/people/hansonr/jmol/docs/JVXL-format.pdf>JVXL-format.pdf</a>'

,'### new "select/restrict cell={i j k}" and "unitcell {i j k}" and better polyhedral rendering ###<br><img src=img/poly.jpg width=100 height=100>'
,'# Jmol 10.x.18 allows for the selection of specific unit cells. Coordinates such as {1.5 1.5 1.5} are allowed. In conjunction with this, "unitcell {i j k}" shifts the unit cell and the unit cell axes ("set axesUnitcell") to a new origin. See <a href=poly.htm>poly.htm</a>'


,'### dipoles and arrows ###<br><img src=img/dipole.jpg width=100 height=100>'
,'Jmol 10.x.17 allows for the depiction of dipoles as arrows in space along the line of the bonds with which they are associated. Dipole vectors can also be placed between any two molecular coordinates, serving as generic arrows. The molecular dipole can be shown as well based on Spartan SMOL data. see <a href=dipole.htm>dipole.htm</a>'

,'### reading TRIPOS/SYBYL mol2 data files ###'
,'load cscl.mol2'
,'load zinc.mol2 # several models'
,'model next'


,'### show url ###'
,'# APPLET ONLY: "show url" with or without a filename in quotes after it, pops up a new window with that URL in it. If it begins with "http://" this URL can be from any server on the web.'
,'<a href="javascript:void(jmolScript(\'show url\'))">javascript:void(jmolScript(\'show url\'))</a>'
,'<a href=\'javascript:void(jmolScript("show url \\\"http://google.com\\\""))\'>javascript:void(jmolScript("show url \\\"http://google.com\\\""))</a>'



,'### axes, unitcell, boundbox, frank changes ###'
,'# Starting with Jmol 10.x.08, "set" is optional with axes, unitcell, or boundbox.'
,'# note that true/false or on/off set commands now take "true" as the default'
,'# Jmol 10.x.01 allows definition of the axes with respect to the external window frame, the molecular frame, or based on the unit cell. see <a href=draw.htm>draw.htm</a>'
,'set axesMolecular; axes on'
,'set axesUnitcell; axes on'
,'set axesWindow; axes on'
,'# also added in Jmol 10.x.12: adjustable scale for axes (must be declared after axes are turned on):'
,'axes 5;set axes scale 1.5;'
,'axes dotted;set axes scale 1.0;'

,'axes off'
,'boundbox on'
,'boundbox off'
,'unitcell on'
,'unitcell off'
,'frank on'
,'frank off'

,'### enhancement of mouse action with SHIFT-LEFT (zoom/rotate) ###'
,'# Jmol 10.x.08 separates these a bit so that that act independently -- horizontal rotate only; vertical zoom only.'


,'### selective measurement color ###'
,'# In 10.2, "color measures" change all measurement colors at once. The change here is subtle. If measurement colors have already been set, then "color measures NONE" needs to be invoked to turn off measurement colors prior to resetting them. In addition, "color measurements" now acts on all future measures, allowing for selective coloring of measurements. Thus, "color measure" in 10.x acts on (a) any measures currently with no color assigned and (b) on any future measures. Note that there still is no selective RE-coloring of measurements.'
,'load caffeine.xyz'
,'measure all 1.0 1.3 (carbon) (hydrogen)'
,'color measures green; # same as before'
,'color measures red;measure all 1.0 1.3 (carbon) (oxygen) # only new, since others are already colored'
,'color measures blue;measure all 1.0 1.4 (carbon) (nitrogen) # again, only new'
,'color measures none; # resets all measure colors'
,'color measures yellow; # sets all measure colors (because now all are color "none")'
,'measures off # clears all measurements'

,'### save/restore orientation with and without delay ###'
,'load caffeine.xyz'
,'# now move the model between pressing these various links. The first parameter is the identifier of the save set; the second one in the case of "delay" is the delay in seconds. restoreOrientation() acts over 1 second; the default for restoreOrientationDelayed() is also 1 second, but it can be set to anything. Source: <a href=Jmol.js>Jmol.js</a>. '
,'# <a href=javascript:alert(jmolSaveOrientation("save1"))>alert(jmolSaveOrientation("save1"))</a>'
,'# <a href=javascript:void(jmolSaveOrientation("save1"))>void(jmolSaveOrientation("save1"))</a>'
,'# <a href=javascript:void(jmolSaveOrientation("save2"))>void(jmolSaveOrientation("save2"))</a>'
,'# <a href=javascript:void(jmolRestoreOrientation("save1"))>void(jmolRestoreOrientation("save1"))</a>'
,'# <a href=javascript:void(jmolRestoreOrientation("save2"))>void(jmolRestoreOrientation("save2"))</a>'
,'# <a href=javascript:void(jmolRestoreOrientationDelayed("save1",0))>void(jmolRestoreOrientationDelayed("save1",0))</a>'
,'# <a href=javascript:void(jmolRestoreOrientationDelayed("save2",3))>void(jmolRestoreOrientationDelayed("save2",3))</a>'
	
,'### experimental method to modify atom positions: jmolSetAtomCoord() and jmolSetAtomCoordRelative() ###'
,'load caffeine.xyz'
,'# Just <a href=javascript:test1()>click here</a> a few times for random changes in atom placement</a>'
,'# Please let me know if this works'
,'#'


,'### set rangeSelected ###'
,'# when true, this flag sets the range for color temperature to be adjustable based on the selected set of atoms being colored'
,'load xxxx.pdb;'
,'# a modified PDB file with information in the b-factor field specific to chain A protein.'
,'restrict none;select *; cartoon;'
,'set rangeSelected false; #standard default'
,'select protein;cartoon;color temperature'
,'# a very narrow range of blue on chain A, because although only A has relevant values, and chain B variation is setting the range.'
,'# no difference, because the color range includes chain B'
,'restrict none;select *;cartoon; color grey;'
,'set rangeSelected true;'
,'select protein and *:A;cartoon;color temperature'
,'# now we see the desired variation in chain A;'

,'### new label formats ###'
,'# Jmol10.x introduces several new label format codes, including %A, %N, %S, %X, %Y, %Z.'
,'load 5hvp.cif;restrict *%1,*%2;color altloc;label %A  # alternate Location "%A"'
,'load "quartz.cif" {1 1 1};label %.2X %.2Y %.2Z # fractional coordinates "%X" "%Y" "%Z"'
,'load "AgFUPMOS.cif" {1 1 1};color molecule;label %N # molecule number "%N"'
,'load "AgFUPMOS.cif" {1 1 1};color molecule;select fluorine;label %S # crystallographic site "%S"'

,'### points, lines, and planes; specifying coordinates ###'
,'Jmol 10.x can now draw point, line, and triangular or rectangular planes based on single atom positions, group average positions, or specific molecular coordinates. see <a href=draw.htm>draw.htm</a>'

,'### expanded pmesh ###'
,'Jmol 10.x allows now for pmesh data to be give "in line" rather than from a file. This allows for simple definition of points, lines, and planes that is an alternative to the new "draw" command. see <a href=pmesh.htm>pmesh.htm</a>'

,'### fractional coordinates ###'
,'Jmol 10.x.03 introduces a way of specifying fractional coordinates: {1/2, 1/2, 1/2}. A "1" in the denominator is optional: {0.5/, 0.5/, 0.5/}, and in such cases only one slash is necessary: {0.5/, 0.5, 0.5} or {0.5, 0.5, 0.5/}. These may be used in defining the center, in creating draw objects, in defining rotation, spin, and moveto orientation axes, and positions of dipole moments. See <a href=fraction.htm>fraction.htm</a>'

,'### symmetry, unit cells, and multiple lattice reading ###'
,'Jmol 10.x now allows extensive reading of SHELX and CIF symmetry and lattice information. Multiple unit cells can be displayed. see <a href=sym.htm>sym.htm</a> and the <a href=http://fusion.stolaf.edu/chemistry/jmol/xtalx>Jmol Crystal Explorer</a>'

,'### expanded measurements ###'
,'Jmol 10.x.13 allows for a much broader range of measurement calculation and display. All measurements fitting a certain minimum/maximum criterion and matching a specific set of atom selections can be displayed, and the data can be returned using the getProperty script command. see <a href=measure.htm>measure.htm</a>'
,'# NOTE ONE COMPATIBILITY CHANGE: '
,'# "measures OFF" does not delete measures; only hides them; "measures DELETE" added'


,'### set measureAllModels ###'
,'Jmol 10.x.09 lets you set this flag so that when the user clicks on a set of atoms for a measurement, all such atoms in ALL models are measured. Works with scripted "measure" command as well. see <a href=measure.htm>measure.htm</a>'

,'### expanded frame animation capability ###'
,'Jmol 10.x expands the frame command to allow pausing and restarting from a specific frame, playing in reverse, and setting a specific range of frames within which to play. see <a href=measure.htm>measure.htm</a>'

,'### molecular rotation and spinning ###'
,'Jmol 10.x allows for rotation and spinning around axes defined either internally with respect to molecular coordinates or externally (the standard way, using the window frame as a reference. see <a href=draw.htm>draw.htm</a>'

,'### set windowCentered off ###'
,'In conjunction with "set picking center" Jmol 10.x allows for turning off the jumping of the selected atom to the center of the window. see <a href=draw.htm>draw.htm</a>'

,'### PDB and mmCIF alternate location ###'
,'Jmol 10.x allows for comparisons of alternate locations in PDB and CIF files. see <a href=altloc.htm>altloc.htm</a>'

,'### conformation [n] ###'
,'Jmol 10.x allows for depiction of conformations either defined by the user or based simply on file alternate location designations. see <a href=altloc.htm>altloc.htm</a>'

,'### select within(molecule,...)/color molecule ###'
,'Jmol 10.x introduces the "molecule" selector, which selects all atoms covalently bonded to a specific atom or group of atoms. Whole molecules can then be colored or selectively highlighted. see the <a href=http://fusion.stolaf.edu/chemistry/jmol/xtalx>Jmol Crystal Explorer</a>'

,'### color altloc ###'
,'Jmol 10.x introduces color based on alternate location. see <a href=altloc.htm>altloc.htm</a>'

,'### color insertion ###'
,'# Jmol 10.x.02 introduces color based on insertion code.'
,'load 1JGQ.pdb;color insertion;restrict none;select *;cartoon on'

,'### multiple file loading ###'
,'Jmol 10.x now allows for multiple file loading. This in conjunction with conformations and alternative locations allows one set of file data to be loaded into two "models". Each model can be given a defined conformation, and then the two conformations can be displayed together. see <a href=altloc.htm>altloc.htm</a>'

,'### using "#jmolscript:" in a data file ###'
,'Jmol 10.x now allows embedded scripts in some data file types (XYZ, MOL, PDB). Not intended to be a replacement for scripts, this allows setting definitions or orientations or other such model-specific scripts so that they run any time the file is loaded. see <a href=pmesh.htm>pmesh.htm</a>'

,'### set defaultLoadScript ###'
,'Jmol 10.x.01 5/17/06 introduces "set defaultLoadScript" allowing the load command to execute a default script after successful file loading. see <a href=altloc.htm>altloc.htm</a>'

,'### reading Spartan smol data files, including vectors and all smol data into auxiliaryInfo ###'
,'Jmol 10.x reads the entire set of data in Spartan SMOL files along with the coordinates and is available via "getProperty auxiliaryinfo". see <a href=spartan.htm>spartan.htm</a>'

,'### getting information ###'
,'Jmol 10.x along with its associated new Jmol.js library now allows for the retrieval of a wide range of data related to the model. see <a href=vibrate.htm>vibrate.htm</a>, and try the bracketed links, below:'

,' <a href=javascript:dotest(-1)>[appletInfo]</a>'
 +' <a href=javascript:dotest(-2)>[animationInfo]</a>'
 +' <a href=javascript:dotest(0)>[fileName]</a>'
 +' <a href=javascript:dotest(1)>[fileHeader]</a>'
 +' <a href=javascript:dotest(2)>[fileContents]</a>'
 +'<br><a href=javascript:dotest(8.1)>[atomList]</a>'
 +' <a href=javascript:dotest(8)>[atomInfo]</a>'
 +' <a href=javascript:dotest(7)>[bondInfo]</a>'
 +' <a href=javascript:dotest(7.5)>[moleculeInfo]</a>'
 +" <a href=javascript:dotest(10)>[extractModel]</a>"
 +'<br><a href=javascript:dotest(3)>[orientationInfo]</a>'
 +' <a href=javascript:dotest(3.1)>[auxiliaryInfo]</a>'
 +' <a href=javascript:dotest(3.2)>[transformInfo]</a>'
 +' <a href=javascript:dotest(3.3)>[centerInfo]</a>'
 +' <a href=javascript:dotest(3.4)>[boundboxInfo]</a>'
 +"<br><a href=javascript:dotest(4)>[modelInfo]</a>"
 +" <a href=javascript:dotest(4.2)>[polymerInfo]</a>"
 +" <a href=javascript:dotest(4.3)>[chainInfo]</a>"
 +" <a href=javascript:dotest(4.4)>[shapeInfo]</a>"
 +" <a href=javascript:dotest(4.5)>[stateInfo]</a>"
 +" <a href=javascript:dotest(9)>[reload THIS orientation]</a>"
 +"<br><br>"


//," JSON data returned:<br><textarea name=outputJSON id=outputJSON rows=5 cols=50></textarea>"
," <input  type=checkbox name=idecode id=idecode checked=1>Decoded: <a href=javascript:showoutput()>new window</a><br><textarea name=output id=output rows=5 cols=50 wrap=off></textarea>"
)
remarks=""
//]]>


function getCallbackOptions(){
 var s=""
 for(var i=0;i<Callbacks.length;i++)if(document.getElementById(Callbacks[i]).checked)s+=Callbacks[i]
 var waspolling = polling
 polling = (s!="")
 if(polling && !waspolling)pollApplet()
 return "monitoring:"+s
}

function pollApplet(){
   whatm=getCallbackOptions()
   if(!polling){
	document.title = ""
	return
   }
   document.title = (new Date())
   var A=jmolGetStatus(whatm)
   parseMessages(A)
   if(polling)setTimeout("pollApplet()",delayms)
}

function setOptions(all_or_none){
 for(var i=0;i<Callbacks.length;i++)document.getElementById(Callbacks[i]).checked = all_or_none
 polling = (all_or_none == 1) 
}


function test1() {
 jmolSetAtomCoordRelative(Math.floor(Math.random()*6),Math.random()/5-0.1,Math.random()/5-0.1,Math.random()/5-0.1)
 jmolScriptWait("refresh")
}

function test2() {
 jmolScript("data \"coord\"3;1 2 3 4;2 3 4 5;5 6 7 8;end \"coord\";")
}
	

	function fire(i0,n){
 for(var i=0; i < n; i++) {
   //alert(Scripts[i0+i]);
   jmolScript(Scripts[i0+i]);
 }
}


what="visible"
whatp="centerInfo"
whatm=""

function xshowoutput(s){ if(!s) s=document.getElementById("output").value; dowritenew("<pre>"+s+"</pre>") };function oldshowoutput(){
 dowritenew("<pre>"+document.getElementById("output").value+"</pre>")
}

function dotest(iwhat){
 if(iwhat!=3)monitoron=false
 var s=""
 var sJSON=""
 var info=""
 var sinfo=""
 var sparam=""
 var str=""
 if(iwhat==-1){
   sinfo="appletInfo"
 }else if(iwhat==-2){
   sinfo="animationInfo"
 }else if(iwhat==0){
   str="fileName"
 }else if(iwhat==1){
   str="fileHeader"
   info = jmolGetPropertyAsString(sinfo)
 }else if(iwhat==2){
   str="fileContents"
 }else if(iwhat==3){
   sinfo="orientationInfo"
 }else if(iwhat==3.1){
   sinfo="auxiliaryInfo"
 }else if(iwhat==3.2){
   sinfo="transformInfo"
 }else if(iwhat==3.3){
   sinfo="centerInfo"
 }else if(iwhat==3.4){
   sinfo="boundboxInfo"
 }else if(iwhat==3.5){
   sinfo="zoomInfo"
 }else if(iwhat==4){
   sinfo="modelInfo"
 }else if(iwhat==4.2){
   sparam="PROMPT"
   sinfo="polymerInfo"
 }else if(iwhat==4.3){
   sparam="PROMPT"
   sinfo="chainInfo"
 }else if(iwhat==4.4){
   sinfo="shapeInfo"
 }else if(iwhat==4.5){
   sparam="visible"
   sinfo="stateInfo"
 }else if(iwhat==7){
   sparam="PROMPT"
   sinfo="bondInfo"
 }else if(iwhat==7.5){
   sparam="PROMPT"
   sinfo="moleculeInfo"
 }else if(iwhat==8){
   sparam="PROMPT"
   sinfo="atomInfo"
 }else if(iwhat==8.1){
   sparam="PROMPT"
   sinfo="atomList"
 }else if(iwhat==9){
   info = jmolGetPropertyAsArray("orientationInfo")
   s="load "+jmolGetPropertyAsString("fileName")+";"+info.moveTo
   document.getElementById("cmd").value=s
   jmolScript(s)
 }else if(iwhat==10){
   s=prompt("enter an atom expression",what)
   if(!s)return
   what=s
   s = jmolGetPropertyAsString("extractModel",what)
   var A=jmolGetPropertyAsArray("orientationInfo")
   showoutput(s);   jmolLoadInlineScript(s,A.moveTo)
 }
 if(str!=""){
   s=jmolGetPropertyAsString(str)
 }else if(sinfo!=""){
   if(sparam == "PROMPT"){
     s=prompt("enter an atom expression",what)
     if(!s)return
     what=s
     sparam=what
   }
   if(document.getElementById("idecode").checked){
	s=jmolGetPropertyAsArray(sinfo,sparam)
	s=_jmolEnumerateObject(s,sinfo)
   }else{
	s=jmolGetPropertyAsJSON(sinfo,sparam)
   }
 }
 if(s!="")document.getElementById("output").value=s
}

function parseMessages(A){
 if(!A)return
 var s=""
 for(var i=A.length-1;i>=0;i--){
	s=A[i][3]+"\n"+s
	showmsg("msg",A[i])
 }
 document.getElementById("output").value=s
}

monitoron=0
function domonitor(isiter){
  if(!isiter)monitoron=!monitoron
  if(!monitoron)return
  dotest(3)
  setTimeout("domonitor(1)",delayms)  
}


function getpage() {
 var s=""
 if (iscript > 0) {
  jmolInitialize(".","JmolApplet.jar")
  jmolSetDocument(0)
  s = "set defaultDirectory \""+datadir+"\";" 
  script = s + Scripts[iscript];
  if (defaultloadscript != "")script = "set defaultLoadScript \""+defaultloadscript+"\";"+script
    s = jmolApplet(["100%","100%"], script)
  } else {
    s = getscripts(true)
  }
 return s
}

function showpage() {
 var s=getpage()
 document.write(s)
}

model = ""
height=400
width=400
</script>
</head>
<body>
<script type="text/javascript">showpage(0)</script></body>
</html>
