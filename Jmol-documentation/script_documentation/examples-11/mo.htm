<html>
<head>
<title>Jmol Interactive Examples</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="styles.css" />
<script type="text/javascript" src="Jmol.js"></script>
<script type="text/javascript" src="new.js"></script>
<script type="text/javascript">

//logLevel=0  // 4 is standard ;1 gives fatal errors only; 2 gives all errors;
              // 3 gives errors and warnings; 4 gives errors, warnings and information; 5 adds debug.

//<![CDATA[
title="ATOMS";model='"ch2o_homo.mo";moveto 1.0 963 -268 18 43.7;mo cutoff 0.008;mo translucent;mo 1'
docsearch = document.location.search.substring(1)
if(docsearch.indexOf("model=")>=0)model=unescape(docsearch.split("model=")[1].split("&")[0])


messagecallback="showmsg"
animcallback=""
pickcallback=""
loadstructcallback=""

delayms = 100; delayms0 = 1000
polling = false;

Callbacks=new Array("-atomPicked","-fileLoaded","-fileLoadError","-frameChanged","-measurePending","-measureCompleted","-measurePicked","-scriptStarted","-scriptEcho","-scriptStatus","-scriptError","-scriptMessage", "-scriptTerminated","-userAction","-viewerRefreshed","-newOrientation")

function getCheckList(){
 var s=""
 var skey=""
 var ischecked=0
 for(var i=0;i<Callbacks.length;i++){
	skey=Callbacks[i]
	ischecked=(skey.charAt(0)!="-")
	if(ischecked)polling=true;
	Callbacks[i]=skey=skey.replace(/\-/,"")
	s+=" <label><input type=checkbox onclick=getCallbackOptions() id='"+skey+"'"+(ischecked?" checked=1":"")+">"+skey+"</label>"
	if((i+1)%4==0)s+="<br>"
 }
 s+=" <a href=javascript:setOptions(1)>all</a> <a href=javascript:setOptions(0)>none</a> "
 return s
}

function getCallbackOptions(){
 var s=""
 for(var i=0;i<Callbacks.length;i++)if(document.getElementById(Callbacks[i]).checked)s+=Callbacks[i]
 var waspolling = polling
 polling = (s!="")
 if(polling && !waspolling)pollApplet()
 return "monitoring:"+s
}

function pollApplet(){
   whatm=getCallbackOptions()
   if(!polling){
	document.title = ""
	return
   }
   document.title = (new Date())
   var A=jmolGetStatus(whatm)
   parseMessages(A)
   if(polling)setTimeout("pollApplet()",delayms)
}

function setOptions(all_or_none){
 for(var i=0;i<Callbacks.length;i++)document.getElementById(Callbacks[i]).checked = all_or_none
 polling = (all_or_none == 1) 
}


function test1() {
 jmolSetAtomCoordRelative(Math.floor(Math.random()*6),Math.random()/5-0.1,Math.random()/5-0.1,Math.random()/5-0.1)
 jmolScriptWait("refresh")
}

Scripts=new Array(" "
,' This page can be used to experiment with the 10.x prototype. <br>Comments? Suggestions? <a href=mailto:hansonr@stolaf.edu>Bob Hanson</a>'

,'### see also <a href=new.htm>new.htm</a> ###'


,'### New <b>MO</b> command ###<br><img src=img/mocalc.jpg width=100 height=100><img src=img/webmo.jpg width=100 height=100>'
,'# 10.x.25 introduces a simple command that you can use to explore the molecular orbitals contained in a variety of file types. (New types added upon request.) The command allows for changing the cutoff value as well as the resolution of the surface, the colors, and the transparency. In addition, a plane can be specified, allowing for a slice through the orbital to be depicted.'
,'load "water-G03W.out";frame 2;center visible;moveto 1.0 -571 -817 -75 120.5;set axesmolecular;axes on'
,'mo 4'
,'mo cutoff 0.02'
,'mo cutoff 0.08'
,'mo color yellow purple'
,'mo color red blue'
,'mo resolution 3'
,'mo resolution 6'
,'mo resolution 10'
,'mo mesh nofill'
,'# starting with Jmol 11.1.29 the default rendering for molecular orbitals is "mesh nofill".'
,'mo fill nomesh'
,'mo color red blue'
,'mo translucent'
,'mo next'
,'mo plane "xy"'
,'mo mesh nofill'
,'mo plane "xz"'
,'mo plane "yz"'
,'mo plane {1 1 1 0}'
,'mo noplane'
,'mo prev'
,'### Manipulating the phased sections independently ###'
,'# The <a href=isosurface.htm>isosurface</a> command provides more flexibility than the <b>MO</b> command and should be used if you want to manipulate the phased sections of the MO independently. The key is to indicate the cutoff with an explicit "+" or "-" sign.'
,'load C6H6.smol;moveto 1.0 -998 -58 20 61.0;'
,'isosurface mo1pos cutoff +0.008 color green mo 20 opaque'
,'isosurface mo1neg cutoff -0.008 color red mo 20 translucent'
,'### more examples ###'
,'# WebMO files'
,'load ch2o_homo.mo;moveto 1.0 940 -340 -34 67.0;'
,'mo cutoff 0.008'
,'mo 1'
,'mo translucent'
,'# mo COLOR can take up to two RGB color values [xFF00FF] or color names.'
,'mo color yellow purple;'
,'mo color [xFF00FF] [xFFFF00];'
,'# reverse:'
,'mo color blue red;'
,'# default:'
,'mo color red blue;'
,'# Spartan SMOL file'
,'load C6H6.smol;moveto 1.0 -821 -377 -430 69.2'
,'mo cutoff 0.008;'
,'mo resolution 4'
,'mo 17'
,'mo 21'
,'mo homo'
,'mo homo-1'
,'mo lumo'
,'mo lumo+3'
,'mo 22'
,'mo 23'
,'mo translucent;'
,'mo mesh nofill'
,'mo fill nomesh'
,'mo nofill nomesh dots'
,'mo fill nodots'
,'mo fill'
,'mo opaque'
,'mo translucent'
,'mo off'
,'mo on'
,'# <a target=_blank href=http://www.wavefunction.com>Wavefunction</a>\'s Spartan native binary .spartan files can be read by Jmol starting with 10.x.22. These files are standard <a target=_blank href=http://sc.openoffice.org/compdocfileformat.pdf>Compound Document</a> file format (same as some versions of Microsoft Word and Excel, and OpenOffice files.) Jmol can read atoms, bonds, molecular orbitals, vibrational modes, charges, dipole moments, and a variety of other properties contained in these files.'
,'load methanol.spartan'
,'frame 1;mo cutoff 0.008 ; mo translucent'
,'mo 12'
,'mo next'
,'mo prev'
,'load ethene.spartan; mo cutoff 0.008;moveto 1.0 -988 -152 -30 71.9;mo resolution 6'
,'mo 8'
,'mo next'
,'mo prev'
,'load "acetic%20acid.spartan"'
,'mo cutoff 0.008'
,'mo 16'
,'mo next'
,'mo prev'
,'# Spartan archive output'
,'load water-AM1.sparchive;moveto 1.0 -567 -732 -379 132.8;'
,'mo 1'
,'mo next'
,'mo prev'

,'# Gaussian log file'
,'load H2-OPT.LOG;frame 2;center visible;moveto 1.0 -118 983 -141 86.9 86'
,'frame 2'
,'mo translucent'
,'mo 1'
,'mo next'
,'mo prev'
,'# Gamess log file'
,'load gamess-UHF-3-21G.log;frame 2;moveto 1.0 931 -365 24 35.5;'
,'mo color red'
,'mo 8'
,'mo next'
,'mo prev'
,'mo color red blue'
,'load XeF4.smo; moveto 1.0 964 -138 225 122.9;'
,'mo resolution 5'
,'mo 35'
,'mo next'
,'mo prev'
,'### multiple MOs can be displayed using a couple of different techniques.###'
,'# first, just use <b>isosurface</b> (see <a href=isosurface.htm>isosurface.htm</a>) instead of <b>mo</b>:'
,'load ethene.spartan;moveto 1.0 -988 -152 -30 71.9'
,'isosurface homo cutoff 0.008 mo 8 on'
,'isosurface lumo cutoff 0.008 mo 9 off'
,'isosurface lumo on; isosurface homo off;'
,'isosurface lumo off; isosurface homo on;'
,'isosurface lumo on; isosurface homo on;'
,'# planes can be done this way as well'
,'load ethene.spartan;moveto 1.0 -988 -152 -30 71.9;set axesmolecular;axes on'
,'isosurface homo1 color absolute -0.008 0.008 plane "yz" mo 8'
,'isosurface homo2 color absolute -0.008 0.008 plane "xz" mo 8'
,'# A second method is to load the file twice, into frames 1001 and 2001'
,'load files "ethene.spartan" "ethene.spartan";moveto 1.0 -988 -152 -30 50.9;set axesmolecular;axes on'
,'frame 1001;isosurface homo1 color absolute -0.008 0.008 plane "yz" mo 8'
,'frame 2001;isosurface homo2 color absolute -0.008 0.008 plane "xz" mo 8'
,'frame 1001;'
,'frame 2001;'
,'frame 0;'
,'# There are lots of possibilities!'

,'### mo TITLEFORMAT ###'
,'# adjust the title format using mo TITLEFORMAT. Optional variable parameters include %E (energy), %F (filename), %I (MO number), %M (Model number), %N (total number of MOs), %O (occupancy), %S (symmetry), and %U (energy units). Two special characters, "|" and "?", allow for additional formatting. "|" indicates a line break. "?" specifically at the beginning of a line indicates that if no data is present in the file that would be replaced on this line, then omit this line. The default format is "%F|Model %M  MO %I/%N|Energy = %E %U|?Symmetry = %S|?Occupancy = %O"'
,'load water35.mo;moveto 1.0 -997 -68 -24 76.2;mo translucent;mo 5;'
,'mo TITLEFORMAT ""'
,'mo TITLEFORMAT "energy: %E %U"'
,'mo TITLEFORMAT "%F|Model %M  MO %I/%N|Energy = %E %U|?Symmetry = %S|?Occupancy = %O"'
 ,' <a href=javascript:dotest(-1)>[appletInfo]</a>'
 +' <a href=javascript:dotest(-2)>[animationInfo]</a>'
 +' <a href=javascript:dotest(0)>[fileName]</a>'
 +' <a href=javascript:dotest(1)>[fileHeader]</a>'
 +' <a href=javascript:dotest(2)>[fileContents]</a>'
 +'<br><a href=javascript:dotest(8.1)>[atomList]</a>'
 +' <a href=javascript:dotest(8)>[atomInfo]</a>'
 +' <a href=javascript:dotest(7)>[bondInfo]</a>'
 +' <a href=javascript:dotest(7.5)>[moleculeInfo]</a>'
 +" <a href=javascript:dotest(10)>[extractModel]</a>"
 +'<br><a href=javascript:dotest(3)>[orientationInfo]</a>'
 +' <a href=javascript:dotest(3.1)>[auxiliaryInfo]</a>'
 +' <a href=javascript:dotest(3.2)>[transformInfo]</a>'
 +' <a href=javascript:dotest(3.3)>[centerInfo]</a>'
 +' <a href=javascript:dotest(3.4)>[boundboxInfo]</a>'
 +"<br><a href=javascript:dotest(4)>[modelInfo]</a>"
 +" <a href=javascript:dotest(4.2)>[polymerInfo]</a>"
 +" <a href=javascript:dotest(4.3)>[chainInfo]</a>"
 +" <a href=javascript:dotest(4.4)>[shapeInfo]</a>"
 +" <a href=javascript:dotest(4.5)>[stateInfo]</a>"
 +" <a href=javascript:dotest(9)>[reload THIS orientation]</a>"
 +"<br><br>"
// +" <a href=javascript:pollApplet()>[jmolStatus]</a>"
 +" monitor: "
 +getCheckList()

//," JSON data returned:<br><textarea name=outputJSON id=outputJSON rows=5 cols=50></textarea>"
," <input type=checkbox name=idecode id=idecode checked=1>Decoded: <a href=javascript:showoutput()>new window</a><br><textarea name=output id=output rows=5 cols=60 wrap=off></textarea>"
)
remarks=""
//]]>


what="visible"
whatp="centerInfo"
whatm=""

function xshowoutput(s){ if(!s) s=document.getElementById("output").value; dowritenew("<pre>"+s+"</pre>") };function oldshowoutput(){
 dowritenew("<pre>"+document.getElementById("output").value+"</pre>")
}

function dotest(iwhat){
 if(iwhat!=3)monitoron=false
 var s=""
 var sJSON=""
 var info=""
 var sinfo=""
 var sparam=""
 var str=""
 if(iwhat==-1){
   sinfo="appletInfo"
 }else if(iwhat==-2){
   sinfo="animationInfo"
 }else if(iwhat==0){
   str="fileName"
 }else if(iwhat==1){
   str="fileHeader"
   info = jmolGetPropertyAsString(sinfo)
 }else if(iwhat==2){
   str="fileContents"
 }else if(iwhat==3){
   sinfo="orientationInfo"
 }else if(iwhat==3.1){
   sinfo="auxiliaryInfo"
 }else if(iwhat==3.2){
   sinfo="transformInfo"
 }else if(iwhat==3.3){
   sinfo="centerInfo"
 }else if(iwhat==3.4){
   sinfo="boundboxInfo"
 }else if(iwhat==3.5){
   sinfo="zoomInfo"
 }else if(iwhat==4){
   sinfo="modelInfo"
 }else if(iwhat==4.2){
   sparam="PROMPT"
   sinfo="polymerInfo"
 }else if(iwhat==4.3){
   sparam="PROMPT"
   sinfo="chainInfo"
 }else if(iwhat==4.4){
   sinfo="shapeInfo"
 }else if(iwhat==4.5){
   sparam="visible"
   sinfo="stateInfo"
 }else if(iwhat==7){
   sparam="PROMPT"
   sinfo="bondInfo"
 }else if(iwhat==7.5){
   sparam="PROMPT"
   sinfo="moleculeInfo"
 }else if(iwhat==8){
   sparam="PROMPT"
   sinfo="atomInfo"
 }else if(iwhat==8.1){
   sparam="PROMPT"
   sinfo="atomList"
 }else if(iwhat==9){
   info = jmolGetPropertyAsArray("orientationInfo")
   s="load "+jmolGetPropertyAsString("fileName")+";"+info.moveTo
   document.getElementById("cmd").value=s
   jmolScript(s)
 }else if(iwhat==10){
   s=prompt("enter an atom expression",what)
   if(!s)return
   what=s
   s = jmolGetPropertyAsString("extractModel",what)
   var A=jmolGetPropertyAsArray("orientationInfo")
   showoutput(s);   jmolLoadInlineScript(s,A.moveTo)
 }
 if(str!=""){
   s=jmolGetPropertyAsString(str)
 }else if(sinfo!=""){
   if(sparam == "PROMPT"){
     s=prompt("enter an atom expression",what)
     if(!s)return
     what=s
     sparam=what
   }
   if(document.getElementById("idecode").checked){
	s=jmolGetPropertyAsArray(sinfo,sparam)
	s=_jmolEnumerateObject(s,sinfo)
   }else{
	s=jmolGetPropertyAsJSON(sinfo,sparam)
   }
 }
 if(s!="")document.getElementById("output").value=s
}

function parseMessages(A){
 if(!A)return
 var s=""
 for(var i=A.length-1;i>=0;i--){
	s=A[i][3]+"\n"+s
	showmsg("msg",A[i])
 }
 document.getElementById("output").value=s
}

monitoron=0
function domonitor(isiter){
  if(!isiter)monitoron=!monitoron
  if(!monitoron)return
  dotest(3)
  setTimeout("domonitor(1)",delayms)  
}

</script>
</head>
<body>
<script type="text/javascript">showpage(0)</script></body>
</html>
