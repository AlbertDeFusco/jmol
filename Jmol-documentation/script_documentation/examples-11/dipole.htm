<html>
<head>
<title>Jmol Interactive Examples</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="styles.css" />
<script type="text/javascript" src="Jmol.js"></script>
<script type="text/javascript" src="new.js"></script>
<script type="text/javascript">
//<![CDATA[
title="ATOMS";model="water.xyz"

jmolInitialize(".")

//messagecallback=""
//animcallback=""
//pickcallback=""
//loadstructcallback=""

delayms = 100; delayms0 = 1000000


Callbacks=new Array("-atomPicked","fileLoaded","fileLoadError","-frameChanged","-measurePending","-measureCompleted","-measurePicked","-scriptStarted","-scriptEcho","scriptStatus","scriptError","scriptMessage", "-scriptTerminated","-userAction","-viewerRefreshed","-newOrientation")

function getCheckList(){
 var s=""
 var skey=""
 var ischecked=0
 for(var i=0;i<Callbacks.length;i++){
	skey=Callbacks[i]
	ischecked=(skey.charAt(0)!="-")
	Callbacks[i]=skey=skey.replace(/\-/,"")
	s+=" <label><input type=checkbox id='"+skey+"'"+(ischecked?" checked=1":"")+">"+skey+"</label>"
	if((i+1)%4==0)s+="<br>"
 }
 s+=" <a href=javascript:setOptions(1)>all</a> <a href=javascript:setOptions(0)>none</a> "
 return s
}

function getCallbackOptions(){
 var s="monitoring:"
 for(var i=0;i<Callbacks.length;i++)if(document.getElementById(Callbacks[i]).checked)s+=Callbacks[i]
 return s
}


function setOptions(all_or_none){
 for(var i=0;i<Callbacks.length;i++)document.getElementById(Callbacks[i]).checked = all_or_none
}

Scripts=new Array(" "
,' This prototype page illustrates the new capabilities of Jmol to calculate and display dipoles and simple arrows. '
,'### displaying user-defined dipoles ###'
	,'load water.xyz;moveto 1.0 727 -680 95 37.4'
	,'dipole (atomno=1) (atomno=3)'
	,'dipole (atomno=2) (atomno=3)'
	,'set dipoleScale 2.0'
	,'set dipoleScale -2.0'
	,'set dipoleScale -1.0'
	,'set dipoleScale 1.0'



,'### calculating dipoles from charge data in selected file types ###'

	,'load CH3F.smol;moveto 1.0 223 973 -64 51.1 96 -13 -9;'
	,'# the file readers will be updated; so far only the SMOL file type is read for molecular dipole and partial charges.'
	,'dipole calculate molecular offset 2.0'
	,'# the calculation for bond dipoles is just a simple qualitative approximation: (distance12) * (charge1 - charge2) / 2'
	,'dipole calculate bonds'
	,'# this calculation is done ONCE per file, unless all the bond dipoles are deleted, in which case, the next command involving bonds recreates them'
	,'dipole bonds delete'
	,'dipole bonds'


,'### offsets, widths, cross options ###'
	,'# you can adjust the offset (along the axis of the arrow), the side offset (perpendicular to that), the width, and the presence of the cross'
	,'load CH3F.smol;moveto 1.0 223 973 -64 51.1 96 -13 -9; dipole molecular offset 2.0; dipole calculate bonds'
	,'# the default origin for the molecular dipole is {0 0 0} in the molecular coordinate system.'
	,'set axesMolecular; axes on; dipole molecular offset 0.0'
	,'axes off; dipole molecular offset 2.0'
	,'# bond dipoles -- defined as any dipoles between two atoms -- are by default centered between those atoms.'
	,'# these dipoles take a side offset, which is by default 0.4 Angstroms.'
	,'dipole bonds offsetSide 0.2'
	,'dipole bonds offsetSide 0.6'
	,'dipole bonds width 0.1'
	,'dipole bonds noCross'

,'### specifying dipoles ###'
	,'load CH3F.smol;moveto 1.0 223 973 -64 51.1 96 -13 -9; dipole molecular offset 2.0; dipole bonds'
	,'# you can select a bond dipole either by specifying the two atoms or using its identifier'
	,'dipole dipole2 width 0.15 offsetSide 0.3'
	,'dipole (atomno=1) (atomno=2) width 0.1 offsetSide 0.5'
	,'# the order of listed atoms is not significant when referring to an already-defined dipole'
	,'dipole (atomno=2) (atomno=1) width 0.05 offsetSide 0.5'
	,'# "dipole" by itself just selects all dipoles'
	,'dipole'
	,'# turn off wireframe and spacefill and set offsetSide 0 for the "additive" effect'
	,'dipole;dipole offsetSide 0 width 0.1; wireframe 0; spacefill 0;'

,'### dipole color options ###'
	,'load CH3F.smol;moveto 1.0 223 973 -64 51.1 96 -13 -9; dipole molecular offset 2.0; dipole bonds'
	,'# dipoles inherit their color from bonds, which inherit THEIR color from atoms'
	,'color atoms blue'
	,'color bonds green'
	,'dipole bonds;color dipoles translucent yellow'
	,'color dipoles opaque white'
	,'dipole molecular; color dipole translucent red'
	,'dipole bond; color dipoles none'
	,'color bonds none'
	,'color atoms none'

,'### set dipoleScale x.xxx ###'
	,'load CH3F.smol;moveto 1.0 223 973 -64 51.1 96 -13 -9; dipole molecular offset 2.0; dipole bonds'
	,'# you can adjust the overall magnitude of all the dipoles using set dipolescale x.xxx'
	,'set dipoleScale 0.5'
	,'set dipoleScale 1.0'
	,'# set dipoleScale negative if you want the arrows pointing the opposite direction'
	,'set dipoleScale -1.0'

,'### user-defined dipoles ###'
	,'load water.xyz;moveto 1.0 145 984 100 51.3 75 7 -9; set axesMolecular;axes on;'
	,'# You can define dipoles yourself using a number of conventions, and you can refer to them using the $name method.'
	,'dipole mydipole1 (atomno=1) (atomno=2) offsetSide 0'
	,'color $mydipole1 red'
	,'dipole mydipole1 {0 0 0} (atomno=2)'
	,'# dipoles can serve as simple arrows'
	,'dipole arrow1 {0 0 0} (atomno=3) noCross;color $arrow1 white'
	,'# an initial decimal number specifies the distance from the first point in the direction of the second point'
	,'dipole arrow1 0.5 {0 0 0} (atomno=3) noCross;color $arrow1 white'
	,'dipole arrow1 1.0 {0 0 0} (atomno=3) noCross;color $arrow1 white'
	,'dipole arrow1 1.3 {0 0 0} (atomno=3) noCross;color $arrow1 white'
	,'dipole arrow2 {0 0 0} {1 -1 1} noCross; color $arrow2 yellow'



 ,' <a href=javascript:dotest(-1)>[appletInfo]</a>'
 +' <a href=javascript:dotest(-2)>[animationInfo]</a>'
 +' <a href=javascript:dotest(0)>[fileName]</a>'
 +' <a href=javascript:dotest(1)>[fileHeader]</a>'
 +' <a href=javascript:dotest(2)>[fileContents]</a>'
 +'<br><a href=javascript:dotest(8.1)>[atomList]</a>'
 +' <a href=javascript:dotest(8)>[atomInfo]</a>'
 +' <a href=javascript:dotest(7)>[bondInfo]</a>'
 +" <a href=javascript:dotest(10)>[extractModel]</a>"
 +'<br><a href=javascript:dotest(3)>[orientationInfo]</a>'
 +' <a href=javascript:dotest(3.2)>[transformInfo]</a>'
 +' <a href=javascript:dotest(3.3)>[centerInfo]</a>'
 +' <a href=javascript:dotest(3.4)>[boundboxInfo]</a>'
 +' <a href=javascript:dotest(3.5)>[zoomInfo]</a>'
 +"<br><a href=javascript:dotest(4)>[modelInfo]</a>"
 +" <a href=javascript:dotest(4.2)>[polymerInfo]</a>"
 +" <a href=javascript:dotest(4.3)>[chainInfo]</a>"
 +" <a href=javascript:dotest(4.4)>[shapeInfo]</a>"
 +" <a href=javascript:dotest(4.5)>[stateInfo]</a>"
 +" <a href=javascript:dotest(9)>[reload THIS orientation]</a>"
 +"<br><br>"
// +" <a href=javascript:dotest(11)>[jmolStatus]</a>"
// +" monitor: "
// +getCheckList()


//," JSON data returned:<br><textarea name=outputJSON id=outputJSON rows=5 cols=50></textarea>"
," <input type=checkbox name=idecode id=idecode checked=1>Decoded: <a href=javascript:showoutput()>new window</a><br><textarea name=output id=output rows=5 cols=60 wrap=off></textarea>"
)
remarks=""
//]]>

what="visible"
whatp="centerInfo"
whatm=""

function xshowoutput(s){ if(!s) s=document.getElementById("output").value; dowritenew("<pre>"+s+"</pre>") };function oldshowoutput(){
 dowritenew("<pre>"+document.getElementById("output").value+"</pre>")
}

function dotest(iwhat){
 if(iwhat!=3)monitoron=false
 var s=""
 var sJSON=""
 var info=""
 var sinfo=""
 var sparam=""
 var str=""
 if(iwhat==-1){
   sinfo="appletInfo"
 }else if(iwhat==-2){
   sinfo="animationInfo"
 }else if(iwhat==0){
   str="fileName"
 }else if(iwhat==1){
   str="fileHeader"
   info = jmolGetPropertyAsString(sinfo)
 }else if(iwhat==2){
   str="fileContents"
 }else if(iwhat==3){
   sinfo="orientationInfo"
 }else if(iwhat==3.2){
   sinfo="transformInfo"
 }else if(iwhat==3.3){
   sinfo="centerInfo"
 }else if(iwhat==3.4){
   sinfo="boundboxInfo"
 }else if(iwhat==3.5){
   sinfo="zoomInfo"
 }else if(iwhat==4){
   sinfo="modelInfo"
 }else if(iwhat==4.2){
   sparam="PROMPT"
   sinfo="polymerInfo"
 }else if(iwhat==4.3){
   sparam="PROMPT"
   sinfo="chainInfo"
 }else if(iwhat==4.4){
   sinfo="shapeInfo"
 }else if(iwhat==4.5){
   sparam="visible"
   sinfo="stateInfo"
 }else if(iwhat==7){
   sparam="PROMPT"
   sinfo="bondInfo"
 }else if(iwhat==8){
   sparam="PROMPT"
   sinfo="atomInfo"
 }else if(iwhat==8.1){
   sparam="PROMPT"
   sinfo="atomList"
 }else if(iwhat==9){
   info = jmolGetPropertyAsArray("orientationInfo")
   s="load "+jmolGetPropertyAsString("fileName")+";"+info.moveTo
   document.getElementById("cmd").value=s
   jmolScript(s)
 }else if(iwhat==10){
   s=prompt("enter an atom expression",what)
   if(!s)return
   what=s
   s = jmolGetPropertyAsString("extractModel",what)
   var A=jmolGetPropertyAsArray("orientationInfo")
   showoutput(s);   jmolLoadInlineScript(s,A.moveTo)
 }else if(iwhat==11){
   whatm=getCallbackOptions()
   var A=jmolGetStatus(whatm)
   parseMessages(A)
   setTimeout("dotest(11)",delayms)
   return
 }
 if(str!=""){
   s=jmolGetPropertyAsString(str)
 }else if(sinfo!=""){
   if(sparam == "PROMPT"){
     s=prompt("enter an atom expression",what)
     if(!s)return
     what=s
     sparam=what
   }
   if(document.getElementById("idecode").checked){
	s=jmolGetPropertyAsArray(sinfo,sparam)
	s=_jmolEnumerateObject(s,sinfo)
   }else{
	s=jmolGetPropertyAsJSON(sinfo,sparam)
   }
 }
 if(s!="")document.getElementById("output").value=s
}

function parseMessages(A){
 if(!A)return
 var s=""
 for(var i=A.length-1;i>=0;i--){
	s=A[i][3]+"\n"+s
	showmsg("msg",A[i])
 }
 document.getElementById("output").value=s
}

monitoron=0
function domonitor(isiter){
  if(!isiter)monitoron=!monitoron
  if(!monitoron)return
  dotest(3)
  setTimeout("domonitor(1)",delayms)  
}

</script>
</head>
<body onload = "setTimeout('dotest(11)',delayms0)">
<script type="text/javascript">showpage(0)</script></body>
</html>
