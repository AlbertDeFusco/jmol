
---------- EXCANVAS.JS
        // remove content
          ns.removeNode();
        // remove the incorrect closing tag
          ns.removeNode();
    // and remove overides

---------- JQUERY.FLOT2.JS
            // backwards compatibility, to be removed in future
                        dummyDiv.remove();
                        dummyDiv.remove();
                // backwards-compat stuff - to be removed in future
                    // xmin etc. are backwards-compatible, to be removed in future
            target.find(".tickLabels").remove();
            target.find(".legend").remove();
            // backwards-compat stuff, to be removed in future

---------- JQUERY.JS
				// clone will also remove the events from the orignal
		// removeData doesn't work here, IE removes it from the original as well
		return this.after( value ).remove();
	removeData: function( key ){
			jQuery.removeData( this, key );
						scripts = scripts.add( jQuery( "script", elem ).remove() );
		elem.parentNode.removeChild( elem );
			head.removeChild( script );
	removeData: function( elem, name ) {
		// If we want to remove a specific section of the element's data
				// If we've removed all the data, remove the element's cache
					jQuery.removeData( elem );
		// Otherwise, we want to remove all of the element's data
				// but it's ok with using removeAttribute
				if ( elem.removeAttribute )
					elem.removeAttribute( expando );
			// Completely remove the data cache
		// internal only, use removeClass("class")
		remove: function( elem, classNames ) {
							tbody[ j ].parentNode.removeChild( tbody[ j ] );
	removeAttr: function( name ) {
			this.removeAttribute( name );
	removeClass: function( classNames ) {
		jQuery.className.remove( this, classNames );
		jQuery.className[ jQuery.className.has( this, classNames ) ? "remove" : "add" ]( this, classNames );
	remove: function( selector ) {
				jQuery.event.remove(this);
				jQuery.removeData(this);
				this.parentNode.removeChild( this );
		jQuery( ">*", this ).remove();
			this.removeChild( this.firstChild );
					// And remove the token
			// Set the guid of unique handler to the same of original handler, so it can be removed 
	remove: function(elem, types, handler) {
					this.remove( elem, type + (types || "") );
						// remove the given handler for the given type
						// remove all handlers for the given type
						// remove generic event handler if no more handlers exist
								if (elem.removeEventListener)
									elem.removeEventListener(type, jQuery.data(elem, "handle"), false);
				jQuery.removeData( elem, "events" );
				jQuery.removeData( elem, "handle" );
			// So that we can later remove it
			jQuery.event.remove( this, type, fn );
					head.removeChild( script );
						head.removeChild( script );
					elem.remove();

---------- JSON2.JS

---------- SHOWOBJ.JS
