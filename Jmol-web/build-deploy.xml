<project default="deploy" basedir=".">

  <!--
    To use this script, the scp task must be available.
    The scp task requires the jsch jar in the class path.
  -->

  <!-- Contributions -->
  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="./ant-contrib.jar"/>
    </classpath>
  </taskdef>

  <property name="from.dir"  value="build/html" />
  <property name="modif.dir" value="build/modified" />
  <property name="tmp.cache" value="build/cache.properties" />
  <property name="tgz.file"  value="build/upload.tgz" />
  <property name="web.host"  value="web.sourceforge.net" />

  <!-- Copying files to website -->
  <target name="deploy" >

    <!-- Ask user for confirmation -->
    <input
      message="Do you really want to copy files to the website (y/n) ?"
      validargs="y,n"
      addproperty="do.scp"
    />
    <condition property="do.abort">
      <equals arg1="n" arg2="${do.scp}"/>
    </condition>
    <fail if="do.abort">Build aborted by user.</fail>

    <!-- Ask user for username and password -->
    <input
      message="Please enter username:"
      addproperty="ssh.user"
    />
    <input
      message="Please enter password:"
      addproperty="ssh.password"
    />

    <!-- Path management -->
    <property
      name="dir.expanded"
      value="${basedir}${file.separator}build${file.separator}html${file.separator}"/>
    <propertyregex
      property="dir.expanded" override="true" input="${dir.expanded}"
      regexp="\\" replace="\\\\\\\\" global="true"/>
    <propertyregex
      property="dir.expanded" override="true" input="${dir.expanded}"
      regexp=":" replace="\\\\:" global="true"/>
    <propertyregex
      property="dir.expanded" override="true" input="${dir.expanded}"
      regexp="\\" replace="\\\\\\\\" global="true"/>

    <!-- Prepare temporary cache.properties -->
    <copy file="cache.properties" tofile="${tmp.cache}" overwrite="true"/>
    <property name="separator.replacement" value="${file.separator}"/>
    <propertyregex
      property="separator.replacement" override="true"
      input="${file.separator}"
      regexp="\\" replace="\\\\\\\\\\\\\\\\" global="true"/>
    <replaceregexp
      file="${tmp.cache}"
      match="/" replace="${separator.replacement}" flags="g"/>
    <replaceregexp
      file="${tmp.cache}"
      match="^([^#])" replace="${dir.expanded}\1" flags="gm"/>
    <replaceregexp
      file="${tmp.cache}"
      match="\\" replace="\\\\\\\\" flags="g"/>
    <replaceregexp
      file="${tmp.cache}"
      match=":" replace="\\\\:" flags="g"/>

    <!-- Copy modified files to an other directory -->
    <echo message="Extracting modified files" level="info"/>
    <delete dir="${modif.dir}"/>
    <copy todir="${modif.dir}" includeEmptyDirs="false" overwrite="true">
      <fileset dir="${from.dir}">
        <modified>
          <param name="cache.cachefile" value="${tmp.cache}"/>
        </modified>
      </fileset>
    </copy>

    <if>
      <available file="${modif.dir}" type="dir" />
      <then>
        <!-- Make an archive of modified files -->
        <!--<echo message="Creating archive with modified files" level="info"/>
        <delete file="${tgz.file}"/>
        <tar destfile="${tgz.file}" longfile="fail" compression="gzip">
          <tarfileset dir="${modif.dir}" mode="664" username="${ssh.user}" group="jmol">
            <include name="**/*"/>
          </tarfileset>
        </tar>-->

        <!-- Do the copy using scp -->
        <!--<echo message="Copying archive of modified files to Jmol website" level="info"/>
        <scp
          todir="${ssh.user},jmol:${ssh.password}@${web.host}:/home/groups/j/jm/jmol/htdocs"
          trust="yes" failonerror="true" localfile="${tgz.file}"/>
        <echo message="Copying modified files to Jmol website" level="info"/>-->
        <scp
          todir="${ssh.user},jmol:${ssh.password}@${web.host}:/home/groups/j/jm/jmol/htdocs"
          trust="yes" failonerror="true">
          <fileset dir="${modif.dir}">
            <include name="**/*"/>
          </fileset>
        </scp>

        <!-- Extract modified files -->
        <!--<echo message="Extracting modified files on Jmol website" level="info"/>
        <sshexec
          host="${web.host}" username="${ssh.user},jmol" password="${ssh.password}"
          trust="yes" failonerror="true"
          command="cd /home/groups/j/jm/jmol/htdocs/; tar zxvf upload.tgz; rm upload.tgz">
        </sshexec>-->

        <!-- Recreate cache.properties -->
        <replaceregexp
          file="${tmp.cache}"
          match="^${dir.expanded}" replace="" flags="gm"/>
        <replaceregexp
          file="${tmp.cache}"
          match="\\\\" replace="/" flags="g"/>
        <replaceregexp
          file="${tmp.cache}"
          match="^#.*$" replace="" flags="gm"/>
        <loadfile srcfile="${tmp.cache}" property="unsorted.files"/>
        <sortlist
          property="sorted.files" value="${unsorted.files}"
          delimiter="${line.separator}"/>
        <echo file="cache.properties">${sorted.files}</echo>

        <!-- Post-processing for access rights -->
        <sshexec
          host="${web.host}" username="${ssh.user},jmol" password="${ssh.password}"
          trust="yes" failonerror="false"
          command="chmod -R -f ug+rw,o+r /home/groups/j/jm/jmol/htdocs/">
        </sshexec>
        <sshexec
          host="${web.host}" username="${ssh.user},jmol" password="${ssh.password}"
          trust="yes" failonerror="false"
          command="chgrp -R -f jmol /home/groups/j/jm/jmol/htdocs/">
        </sshexec>
      </then>
      <else>
        <echo message="No modifications" level="info"/>
      </else>
    </if>

  </target>

</project>
