<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  Spanish translation 
  Translated from default version (...)_en.xml (v 1.1)
-->
<section title="Tecnologías de mejora del navegador">
  <p>
    Intentaré hacer un breve resumen de las cuatro técnicas diferentes que
    se pueden usar para añadir funcionalidad al navegador. Es importante que 
    usemos las terminología correcta para evitar confusiones.
  </p>
  <p>
    Ordenadas de la más simple a la más compleja:
  </p>

  <h3>Aplicación auxiliar</h3>
  <p>
    Recibe este nombre una aplicación -un programa- normal que es ejecutada automáticamente
    cuando el navegador recibe un archivo que no sabe cómo gestionar.
    El tipo de tal archivo se identifica mediante algo llamado su 'tipo MIME'.
  </p>
  <p>
    Veamos un ejemplo usando Netscape o Mozilla recién instalados.
    (Nos centramos en Netscape/Mozilla porque Internet Explorer tiene algunas 
    capacidades 'especiales' para otros productos de Microsoft).
  </p>
  <p>
    La primera vez que Mozilla recibe un archivo .doc con un tipo mime
    'application/msword' no sabe qué hacer con el archivo. Sabe que el
    archivo no es de tipo 'text/html' o 'image/jpeg', por lo que no sabe
    cómo gestionarlo de forma nativa.
  </p>
  <p>
    En consecuencia, Mozilla pregunta al usario si quiere guardar el archivo
    o bien abrirlo con algún programa. Si el usario elige un programa, 
    puede también elegir que en lo sucesivo se abra ese programa siempre que se encuentre un
    archivo del mismo tipo mime.
  </p>
  <p>
    Cada navegador tiene su tabla de 'asociaciones' entre tipos mime y 
    programas (aunque la tabla de Safari parece estar bien escondida).
  </p>
  <p>
    Una aplicación auxiliar puede ser cualquiera, incluyendo el programa autónomo Jmol.
  </p>
  <p>
    <i>Debe hacerse notar que para que este sistema funcione correctamente, el 
    servidor web debe estar configurado para enviar el tipo mime correcto.
    Normalmente, esto no es problema para los programas habituales. 
    Sin embargo, sí es un problema para tipos de archivo menos conocidos
    en servidores web con administradres de sistema noveles ... como suele
    ser el caso para la gente que quiere elaborar y ofrecer páginas web con Chime.</i>
  </p>
  
  <h3>Miniaplicación (<i>applet</i>) no confiable o no firmada</h3>
  <p>
    Se trata de una miniaplicación Java incrustada en una página web. La mayoría de 
    las miniaplicaciones no confiables son bastante pequeñas y se descargan con rapidez,
    sin que el usuario se dé cuenta realmente.
    Hay, por ejemplo, pequeños sistemas de menú, juegos, etc.
  </p>
  <p>
    Este tipo de miniaplicación es 'no confiable' en el sentido de que procede 
    de un servidor web cualquiera en un sitio cualquiera de internet. En consecuencia, realmente
    no tenemos por qué confiar en ella. Por lo tanto, las miniaplicaciones no confiables se 
    colocan bajo una estricta seguridad. No pueden leer ni escribir en el disco duro local
    y sólo pueden comunicarse con el servidor web del que vinieron. Si intentan hacer
    otra cosa, se las interrumpe rápidamente.
  </p>
  <p>
    JmolApplet es una miniaplicación no confiable ... más grande y más compleja de lo 
    habitual para la mayoría.
  </p>

  <h3>Miniaplicación (<i>applet</i>) confiable o firmada</h3>
  <p>
    Las restricciones de seguridad impuestas sobre una miniaplicación no confiable son 
    bastante severas, y la gente quiere desarrollar programas basados en la web que 
    puedan hacer cosas más interesantes, tales como grabar archivos al disco duro local.
  </p>
  <p>
    Antes de que una miniaplicación de este tipo se ejecute, el navegador solicita 
    permiso explícitamente al usuario para ejecutar la miniaplicación. Al contestar que sí,
    el usario básicamente está dando permiso para que el software se instale en el disco 
    duro local.
  </p>
  <p>
    Para proteger a todos, una miniaplicación confiable se *firma* con una firma
    digital cifrada. El cifrado asegura también que el código de la miniaplicación
    no ha sido modificado o alterado por una tercera persona.
  </p>
  <p>
    Una 'autoridad certificadora' es un organismo en el que confías para que haga 
    la verificación.
  </p>
  <p>
    A partir de la versión preliminar 10.00.12 (incluyendo 10.2 y 11), Jmol incluye
    un JmolApplet 'firmado' (JmolAppletSigned.jar), aunque no está
    respaldada por ninguna 'autoridad certifcadora'.
  </p>
  <p>
    Cuando un usuario visite una página web que tiene la miniaplicación firmada 
    JmolAppletSigned, 
    se le preguntará si confía en dicha miniaplicación. Si contesta que sí, 
    la sesión continuará.
  </p>
  <p>
    La JmolAppletSigned que se instale entonces en su disco duro podrá 
    leer y escribir archivos en el propio disco duro. También podrá leer y escribir datos
    de y en otros sitios cualesquiera de internet.
  </p>
  <p>
    Eso dará a la miniaplicación mucha más libertad de acción para hacer cosas
    interesantes, tales como leer archivos locales de modelos moleculares o extraer
    archivos directamente desde las bases de datos en internet.
  </p>
  <p>
    Cabe mencionar que esta miniaplicación firmada sigue siendo una 
    miniaplicación que <i>sólo</i> existe en el contexto de una página web,
    no es un programa que pueda ser ejecutado a voluntad.
  </p>
  <p>
    Un usario no puede ejecutar la miniaplicación a no ser que ésta sea parte de una página web a 
    la que tenga acceso. Sin embargo, esto incluye las páginas web procedentes de un 
    CD-ROM y las almacenadas en un sistema de archivos local.
  </p>
  <p>
    La miniaplicación firmada se ofrece para conveniencia de algunos usuarios. No obstante,
    queremos mantener la miniaplicación no firmada para quienes deseen
    elaborar páginas más sencillas que no soliciten permiso para escribir en el
    disco duro local.
  </p>
  <p>
    Me gustaría que la miniaplicación no firmada (JmolApplet) sea ligera y básica,
    con funcionalidad limitada, pero con una buena prestación para simplemente mostrar
    moléculas a los estudiantes que comienzan y a los visitantes casuales.
  </p>
  <p>
    La miniaplicación firmada (JmolAppletSigned) es para usuarios más avanzados que
    quieran mayor funcionalidad.
  </p>

  <h3>Conector (<i>plug-in</i>)</h3>
  <p>
    Para entender un conector es útil recordar la aplicación auxiliar.
    Ésta no está asociada con una página web concreta, sino con un 
    determinado tipo de archivo, un tipo mime específico. Por ejemplo,
    el navegador web abrirá MS Word cada vez que se encuentre con un 
    documento cuyo tipo mime sea 'application/msword'.
  </p>
  <p>
    Un conector funciona de manera similar, pero los datos se muestran 
    incrustados en la ventana del navegador. De algún modo, es software que
    amplía las capacidades del navegador. No importa de dónde vengan los
    archivos. Cuando el navegador encuentra un tipo mime no nativo puede
    verificar su propia lista de conectores instalados para ver si alguno de
    ellos lo puede gestionar.
  </p>
  <p>
    Dos ejemplos frecuentes son Flash y Adobe Reader. La gente normalmente 
    los instala una vez y no se vuelve a preocupar de ellos.
  </p>
  <p>
    Una vez que un conector se ha instalado, puede hacer cualquier cosa, al igual que 
    otro tipo de programa instalado.
  </p>
  <p>
    Desarrollar y mantener conectores es muy costoso. Aunque 
    Netscape definió una interfaz de programación (API) para ellos, la realidad 
    es que el comportamiento dinámico de cada navegador en cada plataforma es 
    diferente. Además, muchos navegadores implementan o admiten el API de 
    conectores de Netscape, pero son implementaciones distintas y se comportan
    de modo diferente. El principal problema es que se intenta tomar un elemento
    de software complicado (el conector) e incrustarlo dentro de otro elemento de
    software complicado (el navegador web), junto con otros conectores. Y, en general,
    están compartiendo la misma memoria y algunas estructuras de datos. Por ello,  
    cuando alguno comete un error las cosas tienden a fallar.
  </p>
  <p>
    Según estoy escribiendo esto, queda bien claro que jamás existirá un conector Jmol.
  </p>
  <p>
    Eso es todo por ahora.
  </p>
</section>
