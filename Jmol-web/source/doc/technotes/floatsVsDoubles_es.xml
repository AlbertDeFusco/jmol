<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  Spanish translation 
  Translated from default version (...)_en.xml (v 1.1)
-->
<section title="Flotantes frente a dobles">
  <p>
    Varias personas han preguntado por qué el código de Jmol usa números en 
    coma flotante en lugar de números de precisión doble.
    De hecho, es probable que entre los programadores jóvenes de Java 
    muchos nunca hayan visto un programa que use tantos flotantes.
  </p>
  <p>
    La respuesta es que son más pequeños: los flotantes usan 4 bytes
    mientras que los dobles usan 8 bytes. Y, a pesar de ello, ofrecen 
    suficiente intervalo y precisión para nuestros propósitos.
  </p>
  <p>¿Por qué es importante que sean más pequeños? Posiblemente opines que 
  	la memoria es barata y, en general, tienes razón. 
  </p>
  <p>
    Sin embargo, Jmol necesita ejecutarse en forma de miniaplicación en la 
    versión 1.1 de las máquinas virtuales de Java, donde la cantidad
    de memoria virtual es algo inferior.
  </p>
  <p>
    Lo que es más importante, el <i>ancho de banda</i> de la memoria nunca es 
    barato. Los fabricantes de procesadores hacen todo lo que pueden para
    diseñar memorias caché, con el fin de aumentar el ancho de banda efectivo.
    En consecuencia, al trabajar con los flotantes de 4 bytes en lugar de 
    con los dobles de 8 bytes, hacemos un uso más eficaz del sistema de memoria, 
    es decir, de las varias capas de caché y ancho de banda global de la memoria.
    Conseguimos almacenar más datos en una caché de tamaño fijo y leer más datos 
    de la memoria cada vez que accedemos a la caché. 
  </p>
  <p>
    Francamente, es igual de sencillo usar flotantes, y no hay razón
    para derrochar.
  </p>
</section>
