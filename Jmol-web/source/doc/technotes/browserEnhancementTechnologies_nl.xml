<!--
  Dutch translation 
  Translated from default version : browserEnhancementTechnologies_en.xml (v 1.1)
-->
<section title="Browser Uitbreiding Technologie&#x00EB;n">
  <p>
    Ik zal proberen een korte samenvatting te geven van 4 verschillende technieken die kunnen
    worden gebruikt om functionaliteit toe te voegen aan de browser. Het is belangrijk dat
    de correcte terminologie wordt gebruikt om verwarring te vermijden.
  </p>
  <p>
    In rangschikking van eenvoudigste tot meest complexe:
  </p>

  <h3>Helper Applicatie</h3>
  <p>
    Een helper applicatie is een applicatie die automatisch start wanneer de browser een bestand
    ontvangt waarmee het niet weet wat ermee aan te vangen. Het bestandstype wordt ge&#x00EF;dentificeerd
    door de 'MIME-type'.
  </p>
  <p>
    We geven een voorbeeld, waarbij we gebruik maken van een nieuwe installatie van Netscape/Mozilla.
    (Netscape/Mozilla, omdat Internet Explorer 'speciale' ondersteuning heeft voor andere MS producten).
  </p>
  <p>
    De eerste keer dat Mozilla een .doc bestand met mime-type 'application/msword' ontvangt,
    weet het niet wat het ermee moet aanvangen. De browser weet dat het bestaan geen type
    'text/html' of 'image/jpeg' is, dus het weet niet hoe het dit bestandstype moet behandelen.
  </p>
  <p>
    Daarom vraagt Mozilla aan de gebruiker wat ermee moet gebeuren - opslaan naar een bestand
    of opstarten vanaf een applicatie. Als de gebruiker kiest voor de applicatie dan kan de
    gebruiker kiezen of dit type steeds met deze applicatie moet worden opgestart.
  </p>
  <p>
    Elke browser heeft zo'n tabel met 'associaties' tussen mime-types en applicaties ...
    hoewel Safari's tabel wel zeer goed verborgen is.
  </p>
  <p>
    Een helper applicatie kan een applicatie zijn ... dus ook de Jmol applicatie.
  </p>
  <p>
    <i>Wil dit echter probleemloos werken, dan moet de webserver juist geconfigureerd zijn
    zodat ze de juiste mime-type versturen. Dit vormt meestal geen probleem bij grote applicaties.
    Het vormt echter wel een probleem bij minder bekende bestandstypes en bij webservers waarvan
    de systeembeheerders weinig ervaring hebben ... wat meestal het geval is bij mensen die
    proberen Chime webapplicaties te bouwen en beheren.</i>
  </p>
  
  <h3>Onbetrouwbare (or niet gesigneerde) Applets</h3>
  <p>
    Dit is een Java Applet, ingebed in een webpagina. De meeste onbetrouwbare applets zijn vrij
    klein en kunnen snel afgehaald worden. De gebruiker merkt ze vaak nooit op. Dit zijn kleine
    menusystemen, spelletjes, enz.
  </p>
  <p>
    Dit type van applet is 'onbetrouwbaar' in die zin dat het van een webserver op een
    willekeurige plaats op het web vandaan kwam. Daarom vertrouwen we het niet helemaal.
    Onbetrouwbare applets worden daarom in een hechte beveiligingsbox geplaatst (quarantaine).
    Deze applets kunnen geen schrijf of leesbewerkingen doen naar de lokale harde schijf en ze
    kunnen enkel communiceren met de webserver waarop ze zich bevinden. Indien ze toch
    proberen een illegale handeling uit te voeren, wordt dit meteen geblokkeerd.
  </p>
  <p>
    De JmolApplet is een onbetrouwbare applet ... groter en complexer dan de meeste onbetrouwbare applets.
  </p>

  <h3>Betrouwbare (of getekende) Applet</h3>
  <p>
    De beveiligingsrestricties bij een onbetroubare applet zijn verregaand. Mensen willen
    webapplicaties ontwikkelen die mooie dingen kunnen doen, zoals bijvoorbeeld bestanden
    opslaan op de lokale harde schijf.
  </p>
  <p>
    Vooraleer dit type van applet uitgevoerd wordt vraagt de browser expliciet om permissie voor
    het uitvoeren van de applet. Door op ja te klikken geeft de gebruiker permissie aan de software
    om ge&#x00EF;nstalleerd te worden op de lokale harde schijf.
  </p>
  <p>
    Om alle leden te beschermen wordt een Trusted Applet *gesigneerd* met een digitale handtekening,
    samen met encryptie. De encryptie verzekert dat de applet code niet werd gewijzigd door een
    derde partij.
  </p>
  <p>
    Een 'certificeringsauthoriteit' is een organisatie die je betrouwt om de verificatie uit
    te voeren ... iets zoals het Better Business Bureau.
  </p>
  <p>
    Vandaag bestaat er geen 'getekende' JmolApplet. In de toekomst stap ik naar een
    'certificeringsauthoriteit' en bewijs ik aan hen dat ik een lid ben van het Jmol project.
    Zij geven mij dan een digitale sleutelset. Ik gebruikt deze set dan om een
    SignedJmolApplet te cre&#x00EB;ren.
  </p>
  <p>
    Wanneer een gebruiker naar een website gaat waarop deze SignedJmolApplet staat,
    zullen zij gevraagd worden of zijn deze applet kunnen vertrouwen. Zij zullen dan 'ja'
    klikken en de sessie gaat verder.
  </p>
  <p>
    De SignedJmolApplet dat wordt ge&#x00EF;nstalleerd op de harde schijf kan nu bestanden
    lezen/schrijven op de harde schijf. Het kan ook data lezen/schrijven van/naar locaties op het web.
  </p>
  <p>
    Dit geeft de SignedJmolApplet een hoop ruimte om nieuwe dingen te doen ... zoals het lezen
    van locale moleculaire model bestanden ... of zal bestanden onmiddellijk van databanken
    ergens op het web kunnen inladen.
  </p>
  <p>
    Onthoudt echter dat deze SignedJmolApplet nog steeds een applet is dat <i>enkel</i>
    bestaat in de context van een specifieke website. Het is geen op zich staande applicatie
    die op elk moment kan opgestart worden.
  </p>
  <p>
    Een gebruiker kan het niet uitvoeren, tenzij het een onderdeel vormt van een website
    waar ze toegang toe hebben. Echter, dit kan onder andere enkel via een website opgeslagen
    op een CD-ROM of ergens op het lokale bestandssysteem.
  </p>
  <p>
    In de toekomst hopen we een SignedJmolApplet te hebben. Toch willen we de ongesigneerde
    JmolApplet behouden voor mensen die simpelere websites willen bouwen die geen expliciete
    permissie vragen om naar de lokale harde schijf te schrijven.
  </p>
  <p>
    Ik zou graag zien dat de ongetekende JmolApplet nog 'sluw en gemeen' blijft ...
    met gelimiteerde functionaliteit ... maar goede ondersteuning om enkel de moleculen
    te tonen aan beginnende studenten en bezoekers.
  </p>
  <p>
    De SignedJmolApplet zal er voor serieuze gebruikers zijn die een serieuse functionaliteit verwachten.
  </p>

  <h3>Plug-in</h3>
  <p>
    Om een plug-in te begrijpen is het handig om terug te denken aan de helper applicatie.
    Een helper application is niet geassocieerd met een specifieke website. Het is eerder
    geassocieerd met een specifiek bestandstype, een specifieke mime-type. De browser start
    MS-Word elke keer dat het een document ziet met de mime-type 'application/msword'.
  </p>
  <p>
    Een plug-in functioneert in een soortgelijke manier. Maar de weergave van de data is
    ingebed in het browser venster. Het is software dat de mogelijkheden van de browser
    zelf uitbreidt. Het speelt geen rol waar het bestand vandaan komt. Wanneer de browser een
    onbekende mime-type ziet, kan het z'n lijst van geï¿½nstalleerde plug-ins controleren en zien
    of het dit bestand aankan.
  </p>
  <p>
    Twee populaire voorbeelden zijn Flash en Acrobat Reader. Mensen installeren deze vaak
    eenmaal en maken er zich daarna nooit meer zorgen om.
  </p>
  <p>
    Eens een plug-in ge&#x00EF;nstalleerd kan het doen wat het maar wil ... zoals een stuk
    ge&#x00EF;installeerde software.
  </p>
  <p>
    Het ontwikkelen en onderhouden van plug-ins is zeer duur en tijdrovend. Hoewel Netscape
    een plug-in API bezit, blijft het dynamisch gedrag van elke browser op elk platform verschillend.
    En vele browsers 'implementeren/ondersteunen' de Netscape Plug-in API, maar er is wel een
    verschil in implementaties, zodat ze allen een verschillend gedrag hebben. Het fundamenteel
    probleem is dat je probeert &#x00E9;&#x00E9;n stuk van de ingewikkelde software (je mooie plug-in) in te
    passen in een ander stuk ingewikkelde software (de browser), naast andere plug-ins.
    En, in het algemeen, deel je hetzelfde geheugen en sommige datastructuren. Dit vormt de reden
    waarom er iets grondig verkeerd gaat wanneer &#x00E9;&#x00E9;n persoon een fout maakt.
  </p>
  <p>
    Terwijl ik dit schrijf, wordt het duidelijk dat zelfde een Jmol Plug-in nooit zal bestaan.
  </p>
  <p>
    Dit is voorlopig genoeg.
  </p>
</section>
