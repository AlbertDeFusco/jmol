<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE history [
<!ENTITY contributors SYSTEM "contributors.xml">
<!ENTITY changes      SYSTEM "changes.xml">
]>
<document>
	<body>
		<title>History of Jmol Development</title>
		<section title="News">
			<p>Announcements about Jmol development are posted on the project's 
		<a href="http://sourceforge.net/news/?group_id=23629">News Page</a>
	at SourceForge.
			</p>
		</section>
		<section title="The origins of Jmol">
			<p>
        Jmol was originally intended to be a fully functional replacement for
        XMol which was a molecular viewing program developed at the Minnesota
        Supercomputer Center. Although the program executables were
        distributed, the source code was not available to users, and since the
        program has not been maintained, the free binary versions have become
        obsolete. For example, the SGI version of XMol does not run on IRIX 6.x
        because IRIX has switched to a new executable format.
      </p>
			<p>
        XMol's demise left a need for a similar tool. Dan Gezelter, the
        originator of Jmol, chose to avoid the same problems by making
        Jmol open source.  Although it has not completely met the goal
	of functionally replacing XMol, Jmol duplicates many
        of the most useful features, and in some ways, it has surpassed XMol
        functionality. In time, Jmol was hoped to include even more advanced
        features.
      </p>
			<p>
        Jmol was started as an OpenScience project which is dedicated to
        writing and releasing free and open source scientific software.
	For more information about the OpenScience project, go to
        <url>http://www.openscience.org/</url>.
      </p>
		</section>
		<section title="Jmol grows">
			<p>
        Later, Bradley A. Smith took over the project and did a lot of work in 
        streamlining the project as well as the software. Under his leadership
        new releases found its way to the user base, and many new features were
        added, some of which contributed by users.
      </p>
			<p>
	In the end of 2002, Egon Willighagen became the new project leader
	and a start was made with integrating Jmol with
	<a href="http://cdk.sf.net/">The Chemical Development Kit</a>,
	something that was already planned in September 2000 by Dan, Egon
	and Christoph Steinbeck. 
      </p>
		</section>
		<section title="Jmol - an open source replacement for the Chime plugin">
			<p>
	Miguel joined the project at the end of 2002, with the explicit
	goal of helping build Jmol into a viable repacement for the
	Chime plugin (<a href="http://www.mdlchime.com">www.mdlchime.com</a>)
      </p>
			<p>
	In the first few months Miguel contributed the Spanish translation
	and made an initial pass at the RasMol/Chime script interpreter.
	He then some performance improvements and began working on rendering
	performance and speed.
      </p>
			<p>
	It quickly became apparent that the Java2D graphics did not
	provide the performance and functionality
	needed. In addition, it became clear that the core Jmol classes
	would not support the performance and space requirements for
	working with macromolecules with 10s of thousands of atoms.
      </p>
			<p>
	In the spring of 2003 Miguel began designing and implementing
	a high-performance software-based graphics engine. In order to
	ensure web deployment of the Jmol applet it was important
	that the engine run on version 1.1 Java Virtual Machines and
	that no specialized graphics hardware be required.
      </p>
			<p>
	Miguel also rewrote the core classes in order to support
	much larger molecules. In addition, he separated all file
	IO from the Jmol core, making it much easier to support
	new file types.
      </p>
			<p>
	An extended test period began at the end of 2003. During 2004
	a small set of users around the world contributed to Jmol
	development by testing Jmol, explaining chemical concepts,
	and explaining scripting behaviors of RasMol and Chime.
      </p>
			<p>
	Jmol version 10.0, an open source replacement for the Chime plugin,
	was released in December 2004. It was followed by an improved 
	version 10.2 on April 2006. 
      </p>
		</section>
		<section title="Jmol outgrows Chime">
			<p>
	Shortly after 10.2 was released, Bob Hanson started leading the work on 
	Jmol source code, and began adding extra features that were not available
	on Rasmol and Chime --many of them after users' timid questions or
	dreams--.
	As a consequence of a huge amount of work, version 11.0 was 
	released in February 2007,  followed by versions 11.2 in August, 11.4 at the 
	beginning of 2008 and 11.6 in October 2008.
      </p>
			<p>
	These are some of the more outstanding capabilities added:
      </p>
			<ul>
				<li>Input and output:
		  <ul>
						<li>Loading multiple files, even with multiple models each. Files can be loaded sequentially into new "frames" or appended into the current frame so as to merge two datasets into one.</li>
						<li>Save and restore the state of the model. Such "snapshots" can be used to copy the model in a pop-up window, save it for later retrieval, send a specific view of a specific model via email to a colleague.</li>
						<li>Support for remediated PDB.</li>
						<li>Support for SITE records in pdb and cif.</li>
						<li>Mac Spartan06 directory reading.</li>
						<li>Reading models from zip files. Reading text-based content of zip and jar files.</li>
						<li>Molden reader.</li>
						<li>gOpenMol formatted plt files for isosurfaces.</li>
						<li>Export of VRML.</li>
						<li>Much improved POV-Ray export (application only).</li>
						<li>Several data can be written to file (application only)  or to the clipboard. This includes the model, an image, the script history, the current state, the current molecular orbital, or the current isosurface.</li>
						<li>On-the-fly creation of jpeg "snapshots" of the displayed window (both application and applet). Scripted writing of these snapshots allows creation of movies using commonly available tools.</li>
						<li>The Jmol application includes the WebExport add-on, which allows to easily create web pages that include an applet featuring the current display of the model.</li>
					</ul>
				</li>
				<li>Jmol variables and arithmetic:
		  <ul>
						<li>Use of variables and arithmetic operations.</li>
						<li>if/else/endif constructs in scripts.</li>
						<li>if/while/for capability.</li>
						<li>A wide variety of properties are now retrievable, making Jmol a generalized portal to file-based molecular structure information.</li>
						<li>User-defined data types and selective application of external file atomic data to a model for color-based visualization of properties.</li>
						<li>Variables can be defined and manipulated using a simple arithmetic involving boolean (true/false), integer, decimal, string, array, point, and plane data types.</li>
					</ul>
				</li>
				<li>Crystallography:
		  <ul>
						<li>Include the concept and manage crystallographic symmetry.</li>
						<li>Define arbitrary space groups and unit cells for any model from any file format, even if that information is not contained in the file and the coordinates are not fractional.</li>
						<li>Planar slices through a model based on Miller index planes.</li>
						<li>Extended options for unit cell and boundbox.</li>
					</ul>
				</li>
				<li>Scripting:
		  <ul>
						<li>Designate callback functions on the fly.</li>
						<li>A robust script queuing mechanism is installed so that multiple scripts can be initiated without danger of one interrupting another.</li>
						<li>AJAX support is built into Jmol.js so that any applet on any web page can access any model on any location on the web anytime.</li>
						<li>A new <tt>message</tt> command for communicating customizable script status back to the web page while a script is running.</li>
						<li>User-defined macros, subroutines, and functions.</li>
					</ul>
				</li>
				<li>Edition of the model:
		  <ul>
						<li>Bonds can be created, modified or deleted at will. This includes single, multiple, aromatic and several types of partial bonds.</li>
						<li>Atoms can be moved at will from their original positions specified in the file.</li>
						<li>Translation, rotation, spinning, and point/plane inversion of selected atoms.</li>
						<li>Atom properties can be set directly using Jmol math or with an array.</li>
					</ul>
				</li>
				<li>Biopolymers:
		  <ul>
						<li>Helixes as barrels instead of rockets.</li>
						<li>Recalculate secondary structure on the fly after selecting a specific set of alternative atom locations.</li>
						<li>Generate an interactive Ramachandran plot calculated from the current model.</li>
					</ul>
				</li>
				<li>Surfaces:
		  <ul>
						<li>Drawn objects: spheres, ellipsoids, dipole vectors, points, lines, triangular and quadrilateral planes, straight and curved three-dimensional arrows.</li>
						<li>Pmesh support for more than planes.</li>
						<li>LCAO "cartoons".</li>
						<li>Arbitrary f(x,y) surfaces.</li>
						<li>Support for isosurfaces other than <tt>cube</tt> files.</li>
						<li>Handle molecular orbitals.</li>
						<li>Direct computation of molecular orbital surfaces from file-based atomic orbital basis and coefficient data.</li>
						<li>Molecular electrostatic potential maps from file-based charge data.</li>
						<li>Molecular surfaces: fixed-atomic-radius, adjustable-radius van der Waals, solvent-accessible, solvent-excluded, biomolecular cavities.</li>
						<li>Surfaces can be created automatically using command line options for the application.</li>
						<li>The Jmol Voxel File Format (JVXL) 	with a compression ratio on the order of 300-600:1 over color-mapped <tt>cube</tt> files allows delivery of full protein color-mapped solvent-accessible and solvent-excluded surfaces. Jmol application can write these surface files to disk, then applets can display the surfaces almost instantly.</li>
						<li>Color-contour-mapped planes and arbitrary f(x,y) surfaces.</li>
						<li>Isosurface mapping of molecular electrostatic potential and molecular orbital data onto planes.</li>
						<li>Calculation of distance to surfaces.</li>
					</ul>
				</li>
				<li>Annotate a model by placing text at any {x y z} coordinate.</li>
				<li>Select and remove atoms based on one or more defined planes.</li>
				<li>Designate a particular model as a "background" model in multi-frame setups.</li>
				<li>Custom stereo viewing coloration.</li>
				<li>Rotate and spin the model around any molecular-referenced axis completely independently of any orientation set by the user.</li>
				<li>Navigation mode allows "fly-throughs" of the model.</li>
				<li>New industry-standard translucency of objects, producing vivid rendering of multiple translucent objects at eight levels of translucency.</li>
				<li>Antialiasing for the display and the exported images.</li>
				<li>Change interface language on-the-fly, via pop-up menu or script.</li>
				<li>Customizable pop-up menu.</li>
				<li>Display frame-specific titles and model-specific echos.</li>
				<li>Change model to wireframe while it is rotated.</li>
				<li>Several applets in a page can be synchronized, so that actions on the model in one of them are transmitted to models in the other applets.</li>
			</ul>
		</section>
		<section title="History of Changes">
			<p><i>See also a summary in the <a href="http://sourceforge.net/news/?group_id=23629">news</a> page.</i></p>
			<p>There are lists and demonstrations of the new features for
	<a href="http://chemapps.stolaf.edu/jmol/docs/examples-11/new.htm">latest version</a> |
	<a href="http://chemapps.stolaf.edu/jmol/docs/examples-11/new8.htm">Jmol 11.8</a> | 
	<a href="http://chemapps.stolaf.edu/jmol/docs/examples-11/new6.htm">Jmol 11.6</a> | 
	<a href="http://chemapps.stolaf.edu/jmol/docs/examples-11/new4.htm">Jmol 11.4</a> | 
	<a href="http://chemapps.stolaf.edu/jmol/docs/examples-11/new2.htm">Jmol 11.2</a> | 
	<a href="http://chemapps.stolaf.edu/jmol/docs/examples-11/new0.htm">Jmol 11.0</a> | 
	<a href="http://chemapps.stolaf.edu/jmol/docs/examples-10.2/new.htm">Jmol 10.2</a>.
			</p>
			<p>Former history:</p>
			&changes;
		</section>
		<section title="Contributors">
			&contributors;
		</section>
	</body>
</document>
