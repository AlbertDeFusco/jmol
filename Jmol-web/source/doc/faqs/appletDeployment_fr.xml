<!--
  French translation 
  Translated from default version : appletDeployments.xml (v 1.3)
-->
<section title="D&#x00E9;ploiement de JmolApplet">
  <section
   title="Pour l'applet, que doit &#x00EA;tre install&#x00E9; sur les
          machines clientes?">
    <p>
      Aucun logiciel sp&#x00E9;cial sp&#x00E9;cifique &#x00E0; Jmol
      n'a besoin d'&#x00EA;tre install&#x00E9; sur les machines clientes.
    </p>
    <p>
      Les machines clientes n'ont besoin de rien d'autre qu'un
      navigateur web qui supporte Java.
      Quand un client visite une page web contenant la JmolApplet,
      l'applet est automatiquement t&#x00E9;l&#x00E9;charg&#x00E9;e
      depuis le serveur web et ex&#x00E9;cut&#x00E9;e.
    </p>
    <p>
      La JmolApplet fonctionne sous la forme d'une applet
      <b>non s&#x00FB;re</b>. L'applet ne demande pas de confirmation
      de la part de l'utilisateur pour se charger et se lancer.
    </p>
  </section>

  <section title="Librairie JavaScript Jmol.js">
    <p>
      Utilisez la <a href="../jslibrary/">Librairie JavaScript Jmol.js</a>
      pour allouer vos applets &#x00E0; l'int&#x00E9;rieur de vos pages
      web.
    </p>
  </section>
  
  <section
   title="La JmolApplet peut-elle &#x00EA;tre install&#x00E9;e
          localement de fa&#x00E7;on permanente comme un plug-in?">
    <p>NoN</p>
    <p>
      Les applets sont mises en cache dans le cache local du navigateur.
      Les utilisations suivantes de l'applet r&#x00E9;cup&#x00E8;reront
      l'applet depuis le cach (apr&#x00E8;s avoir v&#x00E9;rifi&#x00E9;
      que les date/heure/taille n'ont pas chang&#x00E9; sur le serveur
      web). Au moins, c'est la th&#x00E9;orie ... et &#x00E7;&#x00E0;
      marche correctement sur les navigateurs que j'ai vu :-)
    </p>
  </section>

  <section
    title="Quels types MIME doivent &#x00EA;tre install&#x00E9;s
           sur le serveur?">
    <p>
      Aucun. Le serveur ne n&#x00E9;cessite pas de configuration
      sp&#x00E9;ciale.
    </p>
    <p>
      Les applets ne sont pas associ&#x00E9;es avec des types MIME de la
      m&#x00EA;me mani&#x00E8;re que les plugins. Tandis que le
      <i>plugin</i> Chime n&#x00E9;cessite une configuration du serveur
      web, pas l'<i>Applet</i> Jmol.
    </p>
    <p>
      Jetez un oeil &#x00E0; la Note Technique &#x00E0;
      <a href="../technotes/#Browser Enhancement Technologies">
        Browser Enhancement Technologies
      </a>
    </p>
  </section>

  <section
    title="Dois-je utiliserAPPLET, OBJECT or EMBED pour mon tag html?">
    <p><i>
      Vous devriez probablement utiliser la
      <a href="../jslibrary/">Librairie JavaScript Jmol.js</a>
    </i></p>
    <p>
      Utilisez toujours le tag <code>APPLET</code>.
    </p>
    <p><i>
      Ne soyez pas influenc&#x00E9; par la document d&#x00E9;veloppeur
      du Plug-in Java Sun!
    </i></p>
    <p>
      Malheureusement, la documentation du Plug-in Java Sun ne fait pas
      un bon travail d'explication de l'&#x00E9;tat actuel du monde. Le
      document a &#x00E9;t&#x00E9; plusieurs ann&#x00E9;es auparavant et
      a besoin d'un bon coup de balai. A beaucoup d'endroits, il
      recommande encore l'utilisation du tag <code>OBJECT</code>.
      C'&#x00E9;tait la fa&#x00E7;on de fair jusqu'en 2002. Depuis, le
      Plug-in Java Sun a le support direct pour le tag <code>APPLET</code>
      sur Microsoft Internet Explorer, et ce probl&#x00E8;me a presque
      disparu. Cependant Sun doit conserver le document pour les
      application legacy corporate intranet qui ont &#x00E9;t&#x00E9;
      d&#x00E9;ploy&#x00E9;es en utilisant le tag <code>OBJECT</code>.
    </p>
    <p>
      Le chapitre 12 du guide du d&#x00E9;veloppeur du Plug-in Java Sun
      dit:<br/>
      Avec Internet Explorer, il est recommand&#x00E9; d'utiliser le tag
      APPLET pour le d&#x00E9;ploiement internet.<br/>
      ...<br/>
      Avec Netscape, il est recommand&#x00E9; d'utiliser le tag APPLET
      pour le d&#x00E9;ploiement internet.
    </p>
  </section>

  <a name="loadInline" />
  <section title="J'ai des probl&#x00E8;mes avec loadInline">
    <p><i>
      Vous devriez probablement utiliser la
      <a href="../jslibrary/">Librairie JavaScript Jmol.js</a>
    </i></p>
    <p>
      Assurez-vous de faire une distinction claire entre le
      <i>param tag</i> loadInline et la m&#x00E9;thode loadLine.
    </p>
  </section>

  <section
    title="Le param&#x00E8;tre loadInline ne semble pas fonctionner">
    <p><i>
      Vous devriez probablement utiliser la
      <a href="../jslibrary/">Librairie JavaScript Jmol.js</a>
    </i></p>
    <p>
      Malheureusement, le m&#x00E9;canisme du parm tag loadInline est
      plut&#x00F4;t sale .. la sp&#x00E9;cification HTML nous cause
      quelques probl&#x00E8;mes.
    </p>
    <p>
      La sp&#x00E9;cification HTML oblige les caract&#x00E8;res de retour
      &#x00E0; la ligne d'&#x00EA;tre supprim&#x00E9; (et les
      caract&#x00E8;res de retour &#x00E0; la ligne sont transform&#x00E9;s
      en espaces) <i>avant</i> que la param&#x00E8;tre ne soit pass&#x00E9;
      &#x00E0; l'applet. En cons&#x00E9;quence, le navigateur enl&#x00E8;ve
      les caract&#x00E8;res de retour &#x00E0; la ligne avant qu'ils ne
      soient envoy&#x00E9;s &#x00E0; l'applet.
    </p>
    <p>
      Jmol a une syntaxe sp&#x00E9;ciale pour contourner ce
      probl&#x00E8;me. Vous mettez une barre verticale au d&#x00E9;but de
      chaque ligne ... comme ceci:
      <code>
<pre>
	...
	&lt;param name="loadInline" value="
|put your
|molecular model
|data here
" /&gt;
</pre>
      </code>
      La JmolApplet remplacera les barres verticales avec des
      caract&#x00E8;res de retour &#x00E0; la ligne (tous les espaces
      blancs avant la premi&#x00E8;re barre verticale sont
      supprim&#x00E9;s).
    </p>
    <p>
      Si vous avez une cha&#x00EE;ne de caract&#x00E8;res avec un
      mod&#x00E8;le mol&#x00E9;culaire et que vous souhaitez le convertir,
      vous pouvez utiliser une expression r&#x00E9;guli&#x00E8;re pour
      effectuer la substitution. Les diff&#x00E9;rentes plateformes
      utilisent des conventions diff&#x00E9;rentes pour les fins de ligne,
      votre code devrait v&#x00E9;rifier trois s&#x00E9;quences de fin
      de ligne diff&#x00E9;rentes ...
      <code>carriage-return</code>, <code>linefeed</code>, or
      <code>carriage-return linefeed</code>.
    </p>
    <p>
      En Perl:
      <code>
        myMolecularModel ~= s/\r|\n|\r\n/|/g;
      </code>
    </p>
    <p>
      En JavaScript:
      <code>
        myMolecularModel.replace(/\r|\n|\r\n/g, "|");
      </code>
    </p>
  </section>
  
</section>    
