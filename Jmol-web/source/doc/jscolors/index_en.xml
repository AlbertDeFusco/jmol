<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
	<body>
		<title>Colors</title>
		<section title="Jmol colors">
			<script src="./jmol_constants.js" type="text/javascript"></script>
			<script src="./jmol_colors_layout.js" type="text/javascript"></script>
			<p>Objects can be custom colored in Jmol using the color (or colour) command:<br/>
				<tt>color [object] [color or color scheme]</tt>
			</p>
			<ul>
				<li><tt>[color]</tt> is specified as decimal [red,green,blue] or hexadecimal [xRRGGBB] triplets. 
				It can also be a JavaScript color name, a RasMol color name, or a Jmol color name. 
				(For the default colors and color values used in Jmol, see tables below.) </li>
				<li><tt>[color scheme]</tt> is specified using pre-defined terms detailed on this page.</li>
				<li><tt>[object]</tt> can be atoms, bonds, backbone, cartoon, stars, rockets, ribbon, dots, label, echo, hbonds, ssbonds, axes, boundbox, measures, polyhedra, isosurface, pmesh, unitcell.</li>
				<li>if the object is omitted, <tt>atoms</tt> is assumed</li>
			</ul>
			<p>Information on RasMol colors is included for those who are adapting RasMol and Chime-based materials for use in Jmol.
			</p>
			<p>Many of the following coloring patterns apply only to PDB and mmCIF files for biomacromolecules.
			</p>
			
			<section title="Atoms ('CPK' colors, default element colors)">
				<p>Related commands: <br/><tt>color [object] cpk , set defaultColors Jmol , set defaultColors Rasmol</tt>
				</p>
				<p>Applies color to each atom of the object according to element, as shown in the tables below. Backbone displays such as ribbons, cartoons, etc. are rendered in the color of alpha carbons for proteins, phosphorus for nucleic acids. 
				</p>
				<h4>Default element colors, by periodic table:</h4>
				<blockquote style="font-style:italic;">
					Hover over any element to see more information.
					<span id="clickComment"><br/>
					Click on an element to move to the same information in the Atomic Numbers table below.
					</span>
					<script type="text/javascript">
					if (navigator.userAgent.indexOf("MSIE")!=-1) { document.getElementById("clickComment").style.display="none" }
					</script>
				</blockquote>
				<script type="text/javascript">buildPeriodicTable();</script>
				<br/>
				<h4>Default element colors, by atomic number:</h4>
				<blockquote>&#8220;CPKnew&#8221; scheme applies only to Rasmol v. 2.7.3 
				(or later); only differences with classic CPK are shown. 
				Note: CPKnew for unknown atoms is
		        <span style="background-color:#FA1691;">FA1691</span>,
		        slightly different from CPK
		        <span style="background-color:#FF1493;">FF1493</span>,
		        but has been omitted for clarity in the table.
				</blockquote>
				<table><tr valign="top">
						<td><script type="text/javascript">buildElementTable();</script></td>
						<td width="30">
						</td>
						<td><script type="text/javascript">buildIsotopeTable();</script></td>
					</tr></table>
				<br/>
			</section>
			<section title="Residues: amino acids, nucleotides">
				<p>Related commands: <tt>color [object] amino, color [object] shapely</tt>
				</p>
				<p>
					<b>'amino'</b> renders each of the 20 standard amino acid residues 
					(as well as Asx and Glx) in a certain color, 
					along with one additional color for anything else (including nucleotides, solvents, and non-amino ligands). 
					Some colors are shared by two or more amino acids with similar properties. 
					<br/><br/>
					<b>'shapely'</b> uses a different set of colors for amino acids 
					(each one different) and also colors  differentially the 6 kinds 
					of nucleotides.
				</p>
				<script type="text/javascript">assignLastAa('other');
          buildResidueTable(
          'Protein', 'amino', 'Protein', 'shapely', '(same in RasMol, except amino for other)',
          'Nucleic', 'shapely', '(A,G,C,T same in RasMol)');
        		</script>
				<br/>
			</section>
			<section title="Chains">
				<p>Related command: <tt>color [object] chain</tt>
				</p>
					<p>Renders each chain in the structure in a different color. 
				This color scheme is particularly useful for distinguishing the parts 
				of a multimeric structure or the individual DNA strands of a double helix.
				Atoms in HETERO groups (PDB files only) are colored in a different shade 
				than those in ATOM records: darker for chains A-Q,S, lighter for chains R,T-Z. 
				</p>
				<p>The PDB format 
				<a href="http://www.wwpdb.org/documentation/format32/sect9.html#ATOM">requires</a>
				that each chain ID be a non-blank alphanumeric character. Thus, a
                maximum of 62 chains is permitted in a single model within a PDB file 
                (26 times 2, for upper and lower case letters A-Z, plus 10, for chain IDs 0-9). 
                An example with 62 chains is <tt>2zkr</tt>. PDB files obtained before 
                remediation of the database may have chain IDs that are blank or not
                alphanumeric (e.g. punctuation characters) but this is no longer
                permitted. Although chain 'A' is the same color as chain 'a' (and so forth),
                they may be selected independently (see the 
                <tt>set chainCaseSensitive</tt> command).
				</p>
				<script type="text/javascript">assignLastChain('none');
          buildChainTable('Chain', 'ID');
        </script>
				<br/><br/>
			</section>
			<section title="Secondary structure">
				<p>Related command: <tt>color [object] structure</tt>
				</p>
					<p>
				Uses different colors to distinguish six types of protein secondary 
				structures (three types of helices, beta strands or sheets, turns, and loops) and 
				DNA vs. RNA. The secondary structure is either read from the PDB file 
				(HELIX and SHEET records), if available, or determined using an algorithm. 
				</p>
				<script type="text/javascript">buildStructTable(
          'Protein',
          ['&#945; helix','3<sub>10</sub> helix','&#960; helix','&#946; strand','(&#946;) turn','other'],
          '(same in RasMol, except 3<sub>10</sub> and &#960;)',
          'Nucleic acid',
          ['DNA','RNA'],
          '(same in DRuMS)',
          'Other',
          ['carbohydrate','other']
          );
        </script>
				<br/><br/>
			</section>
			
			<section title="Gradients"><a name="gradnt"></a>
				<p>Several properties that adopt a continuous range of values can be used to color atoms and structures. In these cases, several color gradients or "rainbows" are used by Jmol.
				</p>
					<table><tr valign="top">
					<td>
						<b>Direct rainbow (roygb) </b>
						<p>red -&gt; orange -&gt; yellow -&gt; green -&gt; blue</p>
						<b>Reverse rainbow  (bgyor)</b>
						<p>blue -&gt; green -&gt; yellow -&gt; orange -&gt; red</p>
						<b>Red-white-blue gradient (rwb)</b>
						<p>red -&gt; tints of red-pink -&gt; white -&gt; tints of blue -&gt; blue</p>
						<b>Blue-white-red gradient (bwr) </b>
						<p>blue -&gt; tints of blue -&gt; white -&gt; tints of pink-red -&gt; red</p>
						<b>Low rainbow</b>
						<p>red -&gt; orange -&gt; yellow</p>
						<b>High rainbow </b>
						<p>yellow -&gt; green -&gt; blue </p>
					</td>
					<td><img src="./gradients.png" width="278" height="472" hspace="6"/>
					</td>
					</tr></table>
				<br/>
			</section>
			
			<section title="Position along chain">
				<p>Related commands: <tt>color [object] group, color [object] monomer</tt>
				</p>
				<p>A reverse rainbow gradient (bgyor) is used to color according 
				to position of the corresponding groups or residues (for example, 
				amino acids or nucleotides) along a chain.
				</p>
				<script type="text/javascript">buildRainbowTable(
		          'N-terminal or 5&#8217;-',
		          'C-terminal or 3&#8217;-');
		        </script>
				<p>(blue = nitrogen = N-terminal = start of chain = 5')
				<br/>(red = oxygen = C-terminal = end of chain = 3') 
				</p>
				<p><b>'group'</b>:
				</p>
				<ul>
					<li>The full color range is applied across the specified or selected 
			      groups in the chain (that is, the scale is relative, not absolute).</li>
					<li>The order of groups in the file is used, not the number assigned 
		          to them in the file.</li>
					<li>The coloring operates independently for each chain. </li>
				</ul>
				<p><b>'monomer'</b>:
				</p>
				<p>A variation, relating to "monomers" in a "polymer" rather than "groups" in a "chain". A "polymer" is a series of connected "monomers" (at least for these purposes).
				  </p>
				<ul>
					<li>Jmol interprets the backbone pattern of consecutive residues ("monomers") to identify continuous "polymers". </li>
					<li>If a chain  has a break in it, the 2 pieces of the chain  are recognized as separate polymers, and hence each one is colored independently with the full color range, despite the fact that both parts are designated with the same chain ID in the coordinate file. </li>
					<li>Again, the numbering of groups in the file is irrelevant.</li>
					<li> HETERO groups may participate in a polymer, depending upon how the PDB/mmCIF file is marked up, and as long as they have a backbone pattern that Jmol can recognize as a sequence of individual units. </li>
				</ul>
				<p><b>RasMol/Chime note</b>: 
				In RasMol/Chime, group index is relative to the full chain, while in Jmol 
				it is relative to the currently selected groups of the chain. 
				In addition, the "set hetero" command is not implemented in Jmol. 
				If you want to exclude "hetero" groups, then do not select them.
				</p>
				<br/>
			</section>
			
			<section title="Positional Variability">
				<p>Related commands: <tt>color [object] relativeTemperature, color [object] fixedTemperature</tt>
				</p>
				<p>Colors each atom, using a bwr gradient, according to the "temperature 
				factor" (B factor, or Debye-Waller factor) value stored in the PDB 
				or mmCIF file. Typically this gives a measure of the mobility or 
				uncertainty of a given atom's position. A high crystallographic 
				B factor may indicate an incorrect structure. 
				</p>
				<script type="text/javascript">buildRwbTable(
				'lowest positional variability', 
				'highest positional variability', 
				-1)
				</script>
				<p>(blue = cold = low temperature = static/immobile)<br/>
			  	(red = hot = high temperature = variable/mobile)
			  	</p>
				<p><b>'fixedTemperature'</b>: 
				the factor is referred to an absolute scale of 0 to 100.
				</p>
				<p><b>'relativeTemperature'</b>: 
				the color is relative to the lowest and highest B factor values 
				within the file (not within the selection).
				</p>
				<p><b>'relativeTemperature'</b> after 'set rangeSelected on': 
				the color is relative to the lowest and highest B factor values 
				within the currently selected part of the model. 
				</p>
				<p>Note: The temperature factor fields in a PDB file are sometimes used 
				by the file creator to indicate any other characteristic of the atoms 
				in the model.
				</p>
				<p><b>RasMol/Chime note</b>: 
				In RasMol and Chime, 'temperature' (the only option available) uses 
				also a relative scale, but with a reverse rainbow gradient (bgyor). 
				In Jmol, 'temperature' does the same as 'relativeTemperature'.
				</p>
				<br/>
			</section>
			
			<section title="Charge">
				<section title="Formal charge">
					<p>Related command: <tt>color [object] formalCharge</tt>
					</p>
					<p>Colors atoms based on their formal charge, or ionic state. 
				Uses a restricted rwb gradient: tints of red for anions, 
				tints of blue for cations, white for uncharged atoms. 
				The range of values handled by Jmol for formal charge is -4 through +7, 
				in an absolute scale.
				</p>
					<script type="text/javascript">buildChargeTable('Charge');
        		</script>
					<p>(red = oxygen = carboxy = negative)<br/>
    			(blue = nitrogen = amino = positive)	
    			</p>
				</section>
				<section title="Partial charge">
					<p>Related command: <tt>color [object] partialCharge</tt>
					</p>
					<p>Colors atoms based on their partial charge, or electron density. 
				Uses a rwb gradient: tints of red for high electron density, 
				tints of blue for low electron density, white for neutral. 
				The range of values  for partial charge is adjusted to the minimum and 
				maximum values present in the file (i.e., a scale relative to the file 
				values is used, but not to values in the selected set of atoms).
				</p>
				<script type="text/javascript">buildRwbTable(
				'negative charge', 
				'positive charge',
				 1);
        		</script>
				<p>(red = oxygen = carboxy = negative)<br/>
				(blue = nitrogen = amino = positive)	
				</p>
				</section>
				<p><b>RasMol/Chime note</b>:
        		In RasMol and Chime, 'charge' (the only option available) is meant for 
        		PDB files that hold partial charges in the B factor columns, and uses 
        		a direct rainbow gradient (roygb) with a scale relative to values present 
        		in file. In Jmol, 'charge' does the same as 'formalCharge'.
        		</p>
				<br/>
			</section>
			
			<section title="Isosurfaces">
				<p>Related command: <tt>isoSurface</tt>
				</p>
				<p>Isosurfaces (solvent, molecular, orbitals...) can be colored uniformly 
				or using a color map that reflects the value of some property at each 
				point in the surface (such as molecular electrostatic potential, 
				distance, etc.). 
				For these maps all the predefined <a href="#gradnt">gradients</a> of 
				color are available (and the reverse gradients too), using the 
				'colorScheme' parameter of 'isoSurface' command. 
				</p>
				<br/>
			</section>
			
			<section title="Hydrogen bonds">
				<p>Related command: <tt>color hBonds type </tt>
				</p>
				<p>Colors hydrogen bonds in a protein based on the number of residues 
				between the atoms participating in the bond. 
				A different color is used for hydrogen bonds in nucleic acids. 
				</p>
				<script type="text/javascript">buildHbondsTable(
		          'Distance',
		          ['+2', '+3 (turns)', '+4 (&#945;-helix)', '+5', '-3', '-4', 'other (&#946;-sheet)', 'base pairs']);
        		</script>
				<br/>
			</section>
			
		</section>
		<section title="Sources">
			<ul>
				<li><a href="http://jmol.svn.sourceforge.net/viewvc/jmol/trunk/Jmol/src/org/jmol/viewer/JmolConstants.java?view=markup">
            JmolConstants.java</a></li>
				<li><a href="http://www.umass.edu/microbio/rasmol/distrib/rasman.htm#cpkcolours">
            Colors used by Rasmol and Chime</a>
            (RasMol 2.6&#946;2, Eric Martz, <tt>http://www.umass.edu/microbio/rasmol/</tt>).</li>
				<li><a href="http://openrasmol.org/doc/rasmol.html#cpkcolours">
            Colors used by Rasmol</a>
            (official Rasmol 2.7.3 manual, <tt>http://openrasmol.org/</tt>).</li>
				<li><a href="http://www.umass.edu/molvis/drums/">DRuMS color scheme</a>
            (still to be fully incorporated here).</li>
				<li>Jmol-users and Jmol-developers 
				<a href="http://jmol.sourceforge.net/project/">mailing lists</a>.</li>
			</ul>
			<br/>
		</section>
		<section title="JavaScript colors">
			<script src="./jsColorNames.js"></script>
			<br/>
		</section>
		<section title="Netscape 8 bit color palette">
			<script src="./colors.js"></script>
		</section>
	</body>
</document>
